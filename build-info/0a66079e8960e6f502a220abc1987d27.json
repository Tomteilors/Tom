{
	"id": "0a66079e8960e6f502a220abc1987d27",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"base/WeightedVoting.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.17;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {EnumerableSet} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\r\n\r\n// @title WeightedVoting\r\n// @author NelsonRodMar\r\ncontract WeightedVoting is ERC20 {\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n\r\n    struct Issue {\r\n        EnumerableSet.AddressSet voters;\r\n        string issueDesc;\r\n        uint256 votesFor;\r\n        uint256 votesAgainst;\r\n        uint256 votesAbstain;\r\n        uint256 totalVotes;\r\n        uint256 quorum;\r\n        bool passed;\r\n        bool closed;\r\n    }\r\n\r\n    struct IssueView {\r\n        address[] voters;\r\n        string issueDesc;\r\n        uint256 votesFor;\r\n        uint256 votesAgainst;\r\n        uint256 votesAbstain;\r\n        uint256 totalVotes;\r\n        uint256 quorum;\r\n        bool passed;\r\n        bool closed;\r\n    }\r\n\r\n    enum Votes {\r\n        For,\r\n        Against,\r\n        Abstain\r\n    }\r\n\r\n    // @notice Balance of each user\r\n    mapping(address => uint256) public balances;\r\n\r\n    // @notice Whether a user has claimed their tokens\r\n    mapping(address => bool) public hasClaimed;\r\n\r\n    // @notice The total supply of tokens\r\n    uint256 public maxSupply = 1_000_000;\r\n\r\n    // @notice The list of issues\r\n    Issue[] private issues;\r\n\r\n    error TokensClaimed();\r\n    error AllTokensClaimed();\r\n    error NoTokensHeld();\r\n    error QuorumTooHigh(uint256 quorum);\r\n    error AlreadyVoted();\r\n    error VotingClosed();\r\n\r\n    constructor() ERC20(\"WeightedVoting\", \"WV\") {\r\n        Issue storage newIssue = issues.push();\r\n        newIssue.issueDesc = \"burnt\";\r\n        newIssue.closed = true;\r\n    }\r\n\r\n    // @notice Let a user claim 100 tokens\r\n    // @dev This function checks that the user has not already claimed tokens and that there are still tokens to claim\r\n    function claim() public {\r\n        if (hasClaimed[msg.sender]) revert TokensClaimed();\r\n        if (totalSupply() >= maxSupply) revert AllTokensClaimed();\r\n\r\n        hasClaimed[msg.sender] = true;\r\n        _mint(msg.sender, 100);\r\n    }\r\n\r\n    // @notice Let a user create an issue\r\n    // @dev This function checks that the user has some tokens and that the quorum is not too high (> totalSupply)\r\n    // @param _issueDesc The description of the issue\r\n    // @param _quorum The quorum required to pass the issue\r\n    // @return issueId The id of the issue\r\n    function createIssue(string calldata _issueDesc, uint256 _quorum) external returns (uint256) {\r\n        if (balanceOf(msg.sender) == 0) revert NoTokensHeld();\r\n        if (_quorum > totalSupply()) revert QuorumTooHigh(_quorum);\r\n\r\n        Issue storage newIssue = issues.push();\r\n        newIssue.issueDesc = _issueDesc;\r\n        newIssue.quorum = _quorum;\r\n\r\n        return issues.length - 1;\r\n    }\r\n\r\n    // @notice This function return an Issue from an id\r\n    // @param _issueId The id of the issue\r\n    // @return The issue view\r\n    function getIssue(uint256 _issueId) external view returns (IssueView memory) {\r\n        Issue storage issue = issues[_issueId];\r\n        return IssueView({\r\n            voters: issue.voters.values(),\r\n            issueDesc: issue.issueDesc,\r\n            quorum: issue.quorum,\r\n            totalVotes: issue.totalVotes,\r\n            votesFor: issue.votesFor,\r\n            votesAgainst: issue.votesAgainst,\r\n            votesAbstain: issue.votesAbstain,\r\n            passed: issue.passed,\r\n            closed: issue.closed\r\n        });\r\n    }\r\n\r\n    // @notice Let a user vote on an issue\r\n    // @dev This function checks that the user has not already voted,that they have some tokens and that the issue is not closed\r\n    // @param _issueId The id of the issue\r\n    // @param _vote The vote of the user\r\n    function vote(uint256 _issueId, Votes _vote) external {\r\n        Issue storage issue = issues[_issueId];\r\n        if (issue.closed) revert VotingClosed();\r\n        if (issue.voters.contains(msg.sender)) revert AlreadyVoted();\r\n        if (balanceOf(msg.sender) == 0) revert NoTokensHeld();\r\n\r\n        issue.voters.add(msg.sender);\r\n        issue.totalVotes += balanceOf(msg.sender);\r\n\r\n        if (_vote == Votes.For) {\r\n            issue.votesFor += balanceOf(msg.sender);\r\n        } else if (_vote == Votes.Against) {\r\n            issue.votesAgainst += balanceOf(msg.sender);\r\n        } else {\r\n            issue.votesAbstain += balanceOf(msg.sender);\r\n        }\r\n\r\n        if (issue.totalVotes >= issue.quorum) {\r\n            if (issue.votesFor > issue.votesAgainst) {\r\n                issue.passed = true;\r\n            }\r\n\r\n            issue.closed = true;\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206579505182c37adb84772e725371f9a03a86506a0a0211ce544ffe6a865e7c2264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206579505182c37adb84772e725371f9a03a86506a0a0211ce544ffe6a865e7c2264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x79505182C37A 0xDB DUP5 PUSH24 0x2E725371F9A03A86506A0A0211CE544FFE6A865E7C226473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1330:11640:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206579505182c37adb84772e725371f9a03a86506a0a0211ce544ffe6a865e7c2264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x79505182C37A 0xDB DUP5 PUSH24 0x2E725371F9A03A86506A0A0211CE544FFE6A865E7C226473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "1330:11640:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206579505182c37adb84772e725371f9a03a86506a0a0211ce544ffe6a865e7c2264736f6c63430008190033",
									".code": [
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"base/WeightedVoting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"base/WeightedVoting.sol": {
				"WeightedVoting": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AllTokensClaimed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AlreadyVoted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoTokensHeld",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "quorum",
									"type": "uint256"
								}
							],
							"name": "QuorumTooHigh",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokensClaimed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "VotingClosed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_issueDesc",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_quorum",
									"type": "uint256"
								}
							],
							"name": "createIssue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_issueId",
									"type": "uint256"
								}
							],
							"name": "getIssue",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "voters",
											"type": "address[]"
										},
										{
											"internalType": "string",
											"name": "issueDesc",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "votesFor",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "votesAgainst",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "votesAbstain",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "totalVotes",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quorum",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "passed",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "closed",
											"type": "bool"
										}
									],
									"internalType": "struct WeightedVoting.IssueView",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasClaimed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_issueId",
									"type": "uint256"
								},
								{
									"internalType": "enum WeightedVoting.Votes",
									"name": "_vote",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"base/WeightedVoting.sol\":279:4682  contract WeightedVoting is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"base/WeightedVoting.sol\":1277:1286  1_000_000 */\n  0x0f4240\n    /* \"base/WeightedVoting.sol\":1250:1286  uint256 public maxSupply = 1_000_000 */\n  0x07\n  sstore\n    /* \"base/WeightedVoting.sol\":1545:1718  constructor() ERC20(\"WeightedVoting\", \"WV\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x5765696768746564566f74696e67000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x5756000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"base/WeightedVoting.sol\":1600:1622  Issue storage newIssue */\n  0x00\n    /* \"base/WeightedVoting.sol\":1625:1631  issues */\n  0x08\n    /* \"base/WeightedVoting.sol\":1625:1638  issues.push() */\n  0x01\n  dup2\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x09\n  mul\n  add\n    /* \"base/WeightedVoting.sol\":1600:1638  Issue storage newIssue = issues.push() */\n  swap1\n  pop\n    /* \"base/WeightedVoting.sol\":1649:1677  newIssue.issueDesc = \"burnt\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x6275726e74000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"base/WeightedVoting.sol\":1649:1657  newIssue */\n  dup2\n    /* \"base/WeightedVoting.sol\":1649:1667  newIssue.issueDesc */\n  0x02\n  add\n    /* \"base/WeightedVoting.sol\":1649:1677  newIssue.issueDesc = \"burnt\" */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_10:\n  pop\n    /* \"base/WeightedVoting.sol\":1706:1710  true */\n  0x01\n    /* \"base/WeightedVoting.sol\":1688:1696  newIssue */\n  dup2\n    /* \"base/WeightedVoting.sol\":1688:1703  newIssue.closed */\n  0x08\n  add\n  0x01\n    /* \"base/WeightedVoting.sol\":1688:1710  newIssue.closed = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"base/WeightedVoting.sol\":1589:1718  {... */\n  pop\n    /* \"base/WeightedVoting.sol\":279:4682  contract WeightedVoting is ERC20 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:106   */\ntag_12:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_13:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_14:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_15:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_37:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_39\n  tag_14\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":714:798   */\ntag_38:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_16:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_17:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_18:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_19:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_44\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_18\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1429:1468   */\n  tag_45\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_18\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_20:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_21:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_22:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_49\n    /* \"#utility.yul\":1818:1852   */\n  tag_50\n    /* \"#utility.yul\":1827:1851   */\n  tag_51\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_20\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1818:1852   */\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1800:1853   */\n  tag_20\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_23:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_24:\n    /* \"#utility.yul\":2056:2095   */\n  tag_54\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_22\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2117:2208   */\n  tag_55\n    /* \"#utility.yul\":2166:2207   */\n  tag_56\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_23\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_19\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_25:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_26:\n    /* \"#utility.yul\":2377:2409   */\n  tag_59\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2418:2483   */\n  tag_60\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_24\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_27:\n    /* \"#utility.yul\":2555:2675   */\ntag_62:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_65\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_26\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_28:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_68\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_16\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2906:2935   */\n  tag_69\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_17\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_70:\n    /* \"#utility.yul\":3133:3213   */\n  tag_71\n    /* \"#utility.yul\":3189:3211   */\n  tag_72\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_17\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_27\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_67:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_29:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_30:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_75\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_29\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_31:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_77\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_30\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_79\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_81\n  tag_13\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4038:4094   */\ntag_80:\n    /* \"#utility.yul\":4118:4156   */\n  tag_82\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_15\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4203:4270   */\n  tag_83\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_28\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_85\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_86:\n    /* \"#utility.yul\":5144:5211   */\n  tag_87\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_31\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_84)\n    /* \"#utility.yul\":4365:4983   */\ntag_85:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_88\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_16\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_89:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_89)\ntag_91:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_93\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_30\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_92:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_84:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"base/WeightedVoting.sol\":279:4682  contract WeightedVoting is ERC20 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"base/WeightedVoting.sol\":279:4682  contract WeightedVoting is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x73b2e80e\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x976b3113\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x976b3113\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x73b2e80e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8615d855\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x943e8216\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x27e235e3\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"base/WeightedVoting.sol\":1048:1091  mapping(address => uint256) public balances */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"base/WeightedVoting.sol\":1890:2126  function claim() public {... */\n    tag_9:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"base/WeightedVoting.sol\":1156:1198  mapping(address => bool) public hasClaimed */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"base/WeightedVoting.sol\":2453:2853  function createIssue(string calldata _issueDesc, uint256 _quorum) external returns (uint256) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"base/WeightedVoting.sol\":3801:4679  function vote(uint256 _issueId, Votes _vote) external {... */\n    tag_13:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"base/WeightedVoting.sol\":2993:3533  function getIssue(uint256 _issueId) external view returns (IssueView memory) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"base/WeightedVoting.sol\":1250:1286  uint256 public maxSupply = 1_000_000 */\n    tag_17:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"base/WeightedVoting.sol\":1048:1091  mapping(address => uint256) public balances */\n    tag_44:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"base/WeightedVoting.sol\":1890:2126  function claim() public {... */\n    tag_51:\n        /* \"base/WeightedVoting.sol\":1929:1939  hasClaimed */\n      0x06\n        /* \"base/WeightedVoting.sol\":1929:1951  hasClaimed[msg.sender] */\n      0x00\n        /* \"base/WeightedVoting.sol\":1940:1950  msg.sender */\n      caller\n        /* \"base/WeightedVoting.sol\":1929:1951  hasClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"base/WeightedVoting.sol\":1925:1975  if (hasClaimed[msg.sender]) revert TokensClaimed() */\n      iszero\n      tag_111\n      jumpi\n        /* \"base/WeightedVoting.sol\":1960:1975  TokensClaimed() */\n      mload(0x40)\n      0x0b1327a600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"base/WeightedVoting.sol\":1925:1975  if (hasClaimed[msg.sender]) revert TokensClaimed() */\n    tag_111:\n        /* \"base/WeightedVoting.sol\":2007:2016  maxSupply */\n      sload(0x07)\n        /* \"base/WeightedVoting.sol\":1990:2003  totalSupply() */\n      tag_112\n        /* \"base/WeightedVoting.sol\":1990:2001  totalSupply */\n      tag_33\n        /* \"base/WeightedVoting.sol\":1990:2003  totalSupply() */\n      jump\t// in\n    tag_112:\n        /* \"base/WeightedVoting.sol\":1990:2016  totalSupply() >= maxSupply */\n      lt\n        /* \"base/WeightedVoting.sol\":1986:2043  if (totalSupply() >= maxSupply) revert AllTokensClaimed() */\n      tag_113\n      jumpi\n        /* \"base/WeightedVoting.sol\":2025:2043  AllTokensClaimed() */\n      mload(0x40)\n      0xcbe2483100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"base/WeightedVoting.sol\":1986:2043  if (totalSupply() >= maxSupply) revert AllTokensClaimed() */\n    tag_113:\n        /* \"base/WeightedVoting.sol\":2081:2085  true */\n      0x01\n        /* \"base/WeightedVoting.sol\":2056:2066  hasClaimed */\n      0x06\n        /* \"base/WeightedVoting.sol\":2056:2078  hasClaimed[msg.sender] */\n      0x00\n        /* \"base/WeightedVoting.sol\":2067:2077  msg.sender */\n      caller\n        /* \"base/WeightedVoting.sol\":2056:2078  hasClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"base/WeightedVoting.sol\":2056:2085  hasClaimed[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"base/WeightedVoting.sol\":2096:2118  _mint(msg.sender, 100) */\n      tag_114\n        /* \"base/WeightedVoting.sol\":2102:2112  msg.sender */\n      caller\n        /* \"base/WeightedVoting.sol\":2114:2117  100 */\n      0x64\n        /* \"base/WeightedVoting.sol\":2096:2101  _mint */\n      tag_115\n        /* \"base/WeightedVoting.sol\":2096:2118  _mint(msg.sender, 100) */\n      jump\t// in\n    tag_114:\n        /* \"base/WeightedVoting.sol\":1890:2126  function claim() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"base/WeightedVoting.sol\":1156:1198  mapping(address => bool) public hasClaimed */\n    tag_58:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"base/WeightedVoting.sol\":2453:2853  function createIssue(string calldata _issueDesc, uint256 _quorum) external returns (uint256) {... */\n    tag_63:\n        /* \"base/WeightedVoting.sol\":2537:2544  uint256 */\n      0x00\n        /* \"base/WeightedVoting.sol\":2586:2587  0 */\n      dup1\n        /* \"base/WeightedVoting.sol\":2561:2582  balanceOf(msg.sender) */\n      tag_118\n        /* \"base/WeightedVoting.sol\":2571:2581  msg.sender */\n      caller\n        /* \"base/WeightedVoting.sol\":2561:2570  balanceOf */\n      tag_54\n        /* \"base/WeightedVoting.sol\":2561:2582  balanceOf(msg.sender) */\n      jump\t// in\n    tag_118:\n        /* \"base/WeightedVoting.sol\":2561:2587  balanceOf(msg.sender) == 0 */\n      sub\n        /* \"base/WeightedVoting.sol\":2557:2610  if (balanceOf(msg.sender) == 0) revert NoTokensHeld() */\n      tag_119\n      jumpi\n        /* \"base/WeightedVoting.sol\":2596:2610  NoTokensHeld() */\n      mload(0x40)\n      0x8439960d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"base/WeightedVoting.sol\":2557:2610  if (balanceOf(msg.sender) == 0) revert NoTokensHeld() */\n    tag_119:\n        /* \"base/WeightedVoting.sol\":2635:2648  totalSupply() */\n      tag_120\n        /* \"base/WeightedVoting.sol\":2635:2646  totalSupply */\n      tag_33\n        /* \"base/WeightedVoting.sol\":2635:2648  totalSupply() */\n      jump\t// in\n    tag_120:\n        /* \"base/WeightedVoting.sol\":2625:2632  _quorum */\n      dup3\n        /* \"base/WeightedVoting.sol\":2625:2648  _quorum > totalSupply() */\n      gt\n        /* \"base/WeightedVoting.sol\":2621:2679  if (_quorum > totalSupply()) revert QuorumTooHigh(_quorum) */\n      iszero\n      tag_121\n      jumpi\n        /* \"base/WeightedVoting.sol\":2671:2678  _quorum */\n      dup2\n        /* \"base/WeightedVoting.sol\":2657:2679  QuorumTooHigh(_quorum) */\n      mload(0x40)\n      0x589a495200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"base/WeightedVoting.sol\":2621:2679  if (_quorum > totalSupply()) revert QuorumTooHigh(_quorum) */\n    tag_121:\n        /* \"base/WeightedVoting.sol\":2692:2714  Issue storage newIssue */\n      0x00\n        /* \"base/WeightedVoting.sol\":2717:2723  issues */\n      0x08\n        /* \"base/WeightedVoting.sol\":2717:2730  issues.push() */\n      0x01\n      dup2\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x09\n      mul\n      add\n        /* \"base/WeightedVoting.sol\":2692:2730  Issue storage newIssue = issues.push() */\n      swap1\n      pop\n        /* \"base/WeightedVoting.sol\":2762:2772  _issueDesc */\n      dup5\n      dup5\n        /* \"base/WeightedVoting.sol\":2741:2749  newIssue */\n      dup3\n        /* \"base/WeightedVoting.sol\":2741:2759  newIssue.issueDesc */\n      0x02\n      add\n        /* \"base/WeightedVoting.sol\":2741:2772  newIssue.issueDesc = _issueDesc */\n      swap2\n      dup3\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      pop\n        /* \"base/WeightedVoting.sol\":2801:2808  _quorum */\n      dup3\n        /* \"base/WeightedVoting.sol\":2783:2791  newIssue */\n      dup2\n        /* \"base/WeightedVoting.sol\":2783:2798  newIssue.quorum */\n      0x07\n      add\n        /* \"base/WeightedVoting.sol\":2783:2808  newIssue.quorum = _quorum */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"base/WeightedVoting.sol\":2844:2845  1 */\n      0x01\n        /* \"base/WeightedVoting.sol\":2828:2834  issues */\n      0x08\n        /* \"base/WeightedVoting.sol\":2828:2841  issues.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"base/WeightedVoting.sol\":2828:2845  issues.length - 1 */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"base/WeightedVoting.sol\":2821:2845  return issues.length - 1 */\n      swap2\n      pop\n      pop\n        /* \"base/WeightedVoting.sol\":2453:2853  function createIssue(string calldata _issueDesc, uint256 _quorum) external returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"base/WeightedVoting.sol\":3801:4679  function vote(uint256 _issueId, Votes _vote) external {... */\n    tag_68:\n        /* \"base/WeightedVoting.sol\":3866:3885  Issue storage issue */\n      0x00\n        /* \"base/WeightedVoting.sol\":3888:3894  issues */\n      0x08\n        /* \"base/WeightedVoting.sol\":3895:3903  _issueId */\n      dup4\n        /* \"base/WeightedVoting.sol\":3888:3904  issues[_issueId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_129\n      jumpi\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n    tag_129:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x09\n      mul\n      add\n        /* \"base/WeightedVoting.sol\":3866:3904  Issue storage issue = issues[_issueId] */\n      swap1\n      pop\n        /* \"base/WeightedVoting.sol\":3919:3924  issue */\n      dup1\n        /* \"base/WeightedVoting.sol\":3919:3931  issue.closed */\n      0x08\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"base/WeightedVoting.sol\":3915:3954  if (issue.closed) revert VotingClosed() */\n      iszero\n      tag_133\n      jumpi\n        /* \"base/WeightedVoting.sol\":3940:3954  VotingClosed() */\n      mload(0x40)\n      0x66b6cb4a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"base/WeightedVoting.sol\":3915:3954  if (issue.closed) revert VotingClosed() */\n    tag_133:\n        /* \"base/WeightedVoting.sol\":3969:4002  issue.voters.contains(msg.sender) */\n      tag_134\n        /* \"base/WeightedVoting.sol\":3991:4001  msg.sender */\n      caller\n        /* \"base/WeightedVoting.sol\":3969:3974  issue */\n      dup3\n        /* \"base/WeightedVoting.sol\":3969:3981  issue.voters */\n      0x00\n      add\n        /* \"base/WeightedVoting.sol\":3969:3990  issue.voters.contains */\n      tag_135\n      swap1\n        /* \"base/WeightedVoting.sol\":3969:4002  issue.voters.contains(msg.sender) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"base/WeightedVoting.sol\":3965:4025  if (issue.voters.contains(msg.sender)) revert AlreadyVoted() */\n      iszero\n      tag_136\n      jumpi\n        /* \"base/WeightedVoting.sol\":4011:4025  AlreadyVoted() */\n      mload(0x40)\n      0x7c9a1cf900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"base/WeightedVoting.sol\":3965:4025  if (issue.voters.contains(msg.sender)) revert AlreadyVoted() */\n    tag_136:\n        /* \"base/WeightedVoting.sol\":4065:4066  0 */\n      0x00\n        /* \"base/WeightedVoting.sol\":4040:4061  balanceOf(msg.sender) */\n      tag_137\n        /* \"base/WeightedVoting.sol\":4050:4060  msg.sender */\n      caller\n        /* \"base/WeightedVoting.sol\":4040:4049  balanceOf */\n      tag_54\n        /* \"base/WeightedVoting.sol\":4040:4061  balanceOf(msg.sender) */\n      jump\t// in\n    tag_137:\n        /* \"base/WeightedVoting.sol\":4040:4066  balanceOf(msg.sender) == 0 */\n      sub\n        /* \"base/WeightedVoting.sol\":4036:4089  if (balanceOf(msg.sender) == 0) revert NoTokensHeld() */\n      tag_138\n      jumpi\n        /* \"base/WeightedVoting.sol\":4075:4089  NoTokensHeld() */\n      mload(0x40)\n      0x8439960d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"base/WeightedVoting.sol\":4036:4089  if (balanceOf(msg.sender) == 0) revert NoTokensHeld() */\n    tag_138:\n        /* \"base/WeightedVoting.sol\":4102:4130  issue.voters.add(msg.sender) */\n      tag_139\n        /* \"base/WeightedVoting.sol\":4119:4129  msg.sender */\n      caller\n        /* \"base/WeightedVoting.sol\":4102:4107  issue */\n      dup3\n        /* \"base/WeightedVoting.sol\":4102:4114  issue.voters */\n      0x00\n      add\n        /* \"base/WeightedVoting.sol\":4102:4118  issue.voters.add */\n      tag_140\n      swap1\n        /* \"base/WeightedVoting.sol\":4102:4130  issue.voters.add(msg.sender) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n      pop\n        /* \"base/WeightedVoting.sol\":4161:4182  balanceOf(msg.sender) */\n      tag_141\n        /* \"base/WeightedVoting.sol\":4171:4181  msg.sender */\n      caller\n        /* \"base/WeightedVoting.sol\":4161:4170  balanceOf */\n      tag_54\n        /* \"base/WeightedVoting.sol\":4161:4182  balanceOf(msg.sender) */\n      jump\t// in\n    tag_141:\n        /* \"base/WeightedVoting.sol\":4141:4146  issue */\n      dup2\n        /* \"base/WeightedVoting.sol\":4141:4157  issue.totalVotes */\n      0x06\n      add\n      0x00\n        /* \"base/WeightedVoting.sol\":4141:4182  issue.totalVotes += balanceOf(msg.sender) */\n      dup3\n      dup3\n      sload\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"base/WeightedVoting.sol\":4208:4217  Votes.For */\n      0x00\n        /* \"base/WeightedVoting.sol\":4199:4217  _vote == Votes.For */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_144\n      jumpi\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n    tag_144:\n        /* \"base/WeightedVoting.sol\":4199:4204  _vote */\n      dup3\n        /* \"base/WeightedVoting.sol\":4199:4217  _vote == Votes.For */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_147\n      jumpi\n      tag_148\n      tag_146\n      jump\t// in\n    tag_148:\n    tag_147:\n      sub\n        /* \"base/WeightedVoting.sol\":4195:4465  if (_vote == Votes.For) {... */\n      tag_149\n      jumpi\n        /* \"base/WeightedVoting.sol\":4252:4273  balanceOf(msg.sender) */\n      tag_150\n        /* \"base/WeightedVoting.sol\":4262:4272  msg.sender */\n      caller\n        /* \"base/WeightedVoting.sol\":4252:4261  balanceOf */\n      tag_54\n        /* \"base/WeightedVoting.sol\":4252:4273  balanceOf(msg.sender) */\n      jump\t// in\n    tag_150:\n        /* \"base/WeightedVoting.sol\":4234:4239  issue */\n      dup2\n        /* \"base/WeightedVoting.sol\":4234:4248  issue.votesFor */\n      0x03\n      add\n      0x00\n        /* \"base/WeightedVoting.sol\":4234:4273  issue.votesFor += balanceOf(msg.sender) */\n      dup3\n      dup3\n      sload\n      tag_151\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_151:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"base/WeightedVoting.sol\":4195:4465  if (_vote == Votes.For) {... */\n      jump(tag_152)\n    tag_149:\n        /* \"base/WeightedVoting.sol\":4304:4317  Votes.Against */\n      0x01\n        /* \"base/WeightedVoting.sol\":4295:4317  _vote == Votes.Against */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_153\n      jumpi\n      tag_154\n      tag_146\n      jump\t// in\n    tag_154:\n    tag_153:\n        /* \"base/WeightedVoting.sol\":4295:4300  _vote */\n      dup3\n        /* \"base/WeightedVoting.sol\":4295:4317  _vote == Votes.Against */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_155\n      jumpi\n      tag_156\n      tag_146\n      jump\t// in\n    tag_156:\n    tag_155:\n      sub\n        /* \"base/WeightedVoting.sol\":4291:4465  if (_vote == Votes.Against) {... */\n      tag_157\n      jumpi\n        /* \"base/WeightedVoting.sol\":4356:4377  balanceOf(msg.sender) */\n      tag_158\n        /* \"base/WeightedVoting.sol\":4366:4376  msg.sender */\n      caller\n        /* \"base/WeightedVoting.sol\":4356:4365  balanceOf */\n      tag_54\n        /* \"base/WeightedVoting.sol\":4356:4377  balanceOf(msg.sender) */\n      jump\t// in\n    tag_158:\n        /* \"base/WeightedVoting.sol\":4334:4339  issue */\n      dup2\n        /* \"base/WeightedVoting.sol\":4334:4352  issue.votesAgainst */\n      0x04\n      add\n      0x00\n        /* \"base/WeightedVoting.sol\":4334:4377  issue.votesAgainst += balanceOf(msg.sender) */\n      dup3\n      dup3\n      sload\n      tag_159\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_159:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"base/WeightedVoting.sol\":4291:4465  if (_vote == Votes.Against) {... */\n      jump(tag_160)\n    tag_157:\n        /* \"base/WeightedVoting.sol\":4432:4453  balanceOf(msg.sender) */\n      tag_161\n        /* \"base/WeightedVoting.sol\":4442:4452  msg.sender */\n      caller\n        /* \"base/WeightedVoting.sol\":4432:4441  balanceOf */\n      tag_54\n        /* \"base/WeightedVoting.sol\":4432:4453  balanceOf(msg.sender) */\n      jump\t// in\n    tag_161:\n        /* \"base/WeightedVoting.sol\":4410:4415  issue */\n      dup2\n        /* \"base/WeightedVoting.sol\":4410:4428  issue.votesAbstain */\n      0x05\n      add\n      0x00\n        /* \"base/WeightedVoting.sol\":4410:4453  issue.votesAbstain += balanceOf(msg.sender) */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"base/WeightedVoting.sol\":4291:4465  if (_vote == Votes.Against) {... */\n    tag_160:\n        /* \"base/WeightedVoting.sol\":4195:4465  if (_vote == Votes.For) {... */\n    tag_152:\n        /* \"base/WeightedVoting.sol\":4501:4506  issue */\n      dup1\n        /* \"base/WeightedVoting.sol\":4501:4513  issue.quorum */\n      0x07\n      add\n      sload\n        /* \"base/WeightedVoting.sol\":4481:4486  issue */\n      dup2\n        /* \"base/WeightedVoting.sol\":4481:4497  issue.totalVotes */\n      0x06\n      add\n      sload\n        /* \"base/WeightedVoting.sol\":4481:4513  issue.totalVotes >= issue.quorum */\n      lt\n        /* \"base/WeightedVoting.sol\":4477:4672  if (issue.totalVotes >= issue.quorum) {... */\n      tag_163\n      jumpi\n        /* \"base/WeightedVoting.sol\":4551:4556  issue */\n      dup1\n        /* \"base/WeightedVoting.sol\":4551:4569  issue.votesAgainst */\n      0x04\n      add\n      sload\n        /* \"base/WeightedVoting.sol\":4534:4539  issue */\n      dup2\n        /* \"base/WeightedVoting.sol\":4534:4548  issue.votesFor */\n      0x03\n      add\n      sload\n        /* \"base/WeightedVoting.sol\":4534:4569  issue.votesFor > issue.votesAgainst */\n      gt\n        /* \"base/WeightedVoting.sol\":4530:4625  if (issue.votesFor > issue.votesAgainst) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"base/WeightedVoting.sol\":4605:4609  true */\n      0x01\n        /* \"base/WeightedVoting.sol\":4590:4595  issue */\n      dup2\n        /* \"base/WeightedVoting.sol\":4590:4602  issue.passed */\n      0x08\n      add\n      0x00\n        /* \"base/WeightedVoting.sol\":4590:4609  issue.passed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"base/WeightedVoting.sol\":4530:4625  if (issue.votesFor > issue.votesAgainst) {... */\n    tag_164:\n        /* \"base/WeightedVoting.sol\":4656:4660  true */\n      0x01\n        /* \"base/WeightedVoting.sol\":4641:4646  issue */\n      dup2\n        /* \"base/WeightedVoting.sol\":4641:4653  issue.closed */\n      0x08\n      add\n      0x01\n        /* \"base/WeightedVoting.sol\":4641:4660  issue.closed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"base/WeightedVoting.sol\":4477:4672  if (issue.totalVotes >= issue.quorum) {... */\n    tag_163:\n        /* \"base/WeightedVoting.sol\":3855:4679  {... */\n      pop\n        /* \"base/WeightedVoting.sol\":3801:4679  function vote(uint256 _issueId, Votes _vote) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_92\n      jump\t// in\n    tag_166:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_167\n      swap1\n      tag_92\n      jump\t// in\n    tag_167:\n      dup1\n      iszero\n      tag_168\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_169\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_168)\n    tag_169:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_170:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_170\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"base/WeightedVoting.sol\":2993:3533  function getIssue(uint256 _issueId) external view returns (IssueView memory) {... */\n    tag_75:\n        /* \"base/WeightedVoting.sol\":3052:3068  IssueView memory */\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"base/WeightedVoting.sol\":3081:3100  Issue storage issue */\n      0x00\n        /* \"base/WeightedVoting.sol\":3103:3109  issues */\n      0x08\n        /* \"base/WeightedVoting.sol\":3110:3118  _issueId */\n      dup4\n        /* \"base/WeightedVoting.sol\":3103:3119  issues[_issueId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_174\n      jumpi\n      tag_175\n      tag_131\n      jump\t// in\n    tag_175:\n    tag_174:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x09\n      mul\n      add\n        /* \"base/WeightedVoting.sol\":3081:3119  Issue storage issue = issues[_issueId] */\n      swap1\n      pop\n        /* \"base/WeightedVoting.sol\":3137:3525  IssueView({... */\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n        /* \"base/WeightedVoting.sol\":3170:3191  issue.voters.values() */\n      tag_177\n        /* \"base/WeightedVoting.sol\":3170:3175  issue */\n      dup4\n        /* \"base/WeightedVoting.sol\":3170:3182  issue.voters */\n      0x00\n      add\n        /* \"base/WeightedVoting.sol\":3170:3189  issue.voters.values */\n      tag_178\n        /* \"base/WeightedVoting.sol\":3170:3191  issue.voters.values() */\n      jump\t// in\n    tag_177:\n        /* \"base/WeightedVoting.sol\":3137:3525  IssueView({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"base/WeightedVoting.sol\":3217:3222  issue */\n      dup3\n        /* \"base/WeightedVoting.sol\":3217:3232  issue.issueDesc */\n      0x02\n      add\n        /* \"base/WeightedVoting.sol\":3137:3525  IssueView({... */\n      dup1\n      sload\n      tag_179\n      swap1\n      tag_92\n      jump\t// in\n    tag_179:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_180\n      swap1\n      tag_92\n      jump\t// in\n    tag_180:\n      dup1\n      iszero\n      tag_181\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_182\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_181)\n    tag_182:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_183:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_183\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n        /* \"base/WeightedVoting.sol\":3335:3340  issue */\n      dup3\n        /* \"base/WeightedVoting.sol\":3335:3349  issue.votesFor */\n      0x03\n      add\n      sload\n        /* \"base/WeightedVoting.sol\":3137:3525  IssueView({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"base/WeightedVoting.sol\":3378:3383  issue */\n      dup3\n        /* \"base/WeightedVoting.sol\":3378:3396  issue.votesAgainst */\n      0x04\n      add\n      sload\n        /* \"base/WeightedVoting.sol\":3137:3525  IssueView({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"base/WeightedVoting.sol\":3425:3430  issue */\n      dup3\n        /* \"base/WeightedVoting.sol\":3425:3443  issue.votesAbstain */\n      0x05\n      add\n      sload\n        /* \"base/WeightedVoting.sol\":3137:3525  IssueView({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"base/WeightedVoting.sol\":3294:3299  issue */\n      dup3\n        /* \"base/WeightedVoting.sol\":3294:3310  issue.totalVotes */\n      0x06\n      add\n      sload\n        /* \"base/WeightedVoting.sol\":3137:3525  IssueView({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"base/WeightedVoting.sol\":3255:3260  issue */\n      dup3\n        /* \"base/WeightedVoting.sol\":3255:3267  issue.quorum */\n      0x07\n      add\n      sload\n        /* \"base/WeightedVoting.sol\":3137:3525  IssueView({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"base/WeightedVoting.sol\":3466:3471  issue */\n      dup3\n        /* \"base/WeightedVoting.sol\":3466:3478  issue.passed */\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"base/WeightedVoting.sol\":3137:3525  IssueView({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"base/WeightedVoting.sol\":3501:3506  issue */\n      dup3\n        /* \"base/WeightedVoting.sol\":3501:3513  issue.closed */\n      0x08\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"base/WeightedVoting.sol\":3137:3525  IssueView({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"base/WeightedVoting.sol\":3130:3525  return IssueView({... */\n      swap2\n      pop\n      pop\n        /* \"base/WeightedVoting.sol\":2993:3533  function getIssue(uint256 _issueId) external view returns (IssueView memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"base/WeightedVoting.sol\":1250:1286  uint256 public maxSupply = 1_000_000 */\n    tag_83:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8871:9036  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8951:8955  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8974:9029  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_212\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8984:8987  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8984:8994  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9020:9025  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9004:9027  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8996:9028  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8974:8983  _contains */\n      tag_213\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8974:9029  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8967:9029  return _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8871:9036  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8316:8466  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8386:8390  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8459  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_215\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8414:8417  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8414:8424  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8450:8455  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8434:8457  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8426:8458  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8413  _add */\n      tag_216\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8409:8459  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8402:8459  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8316:8466  function add(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10270:10570  function values(AddressSet storage set) internal view returns (address[] memory) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10333:10349  address[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10361:10383  bytes32[] memory store */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10386:10405  _values(set._inner) */\n      tag_218\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10394:10397  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10394:10404  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10386:10393  _values */\n      tag_219\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10386:10405  _values(set._inner) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10361:10405  bytes32[] memory store = _values(set._inner) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10415:10438  address[] memory result */\n      0x60\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10525:10530  store */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10515:10530  result := store */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10557:10563  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10550:10563  return result */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10270:10570  function values(AddressSet storage set) internal view returns (address[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_226\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_229\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_229:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_230)\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_234)\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_235\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4337:4341  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4385:4386  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4363  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4374  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4375:4380  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4386  set._positions[value] != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4353:4386  return set._positions[value] != 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2304:2308  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n      tag_238\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2335:2338  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2340:2345  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2334  _contains */\n      tag_213\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2325:2346  _contains(set, value) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2365  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2373  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2379:2384  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2362:2385  set._values.push(value) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2547  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2555  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2544:2562  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2523  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2534  set._positions */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2535:2540  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2541  set._positions[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2520:2562  set._positions[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2583:2587  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2576:2587  return true */\n      swap1\n      pop\n      jump(tag_237)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2320:2641  if (!_contains(set, value)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2625:2630  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2618:2630  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2241:2647  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_237:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5581:5690  function _values(Set storage set) private view returns (bytes32[] memory) {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5637:5653  bytes32[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5672:5675  set */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5672:5683  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5665:5683  return set._values */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_243\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_244:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_244\n      jumpi\n    tag_243:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5581:5690  function _values(Set storage set) private view returns (bytes32[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_172:\n      mload(0x40)\n      dup1\n      0x0120\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_245:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_246:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_247:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_248:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_249:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_309\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_245\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":711:782   */\n      tag_310\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_246\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_311\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_247\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":881:910   */\n      tag_312\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_248\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_25:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_314\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_249\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_251:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_252:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_253:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_254:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_320\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_253\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_255:\n        /* \"#utility.yul\":1876:1900   */\n      tag_322\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_254\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_323:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_256:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_325\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_255\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_257:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_258:\n        /* \"#utility.yul\":2232:2256   */\n      tag_328\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_257\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_329:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_259:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_331\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_258\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_28:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_334\n      tag_251\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2525:2644   */\n    tag_333:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_335\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_256\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_336\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_259\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_260:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_261:\n        /* \"#utility.yul\":3089:3110   */\n      tag_339\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_260\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_31:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_341\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_261\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_262:\n        /* \"#utility.yul\":3426:3450   */\n      tag_343\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_257\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_35:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_345\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_262\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_38:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_348\n      tag_251\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3801:3920   */\n    tag_347:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_349\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_256\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_350\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_256\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_351\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_259\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4645   */\n    tag_43:\n        /* \"#utility.yul\":4375:4381   */\n      0x00\n        /* \"#utility.yul\":4424:4426   */\n      0x20\n        /* \"#utility.yul\":4412:4421   */\n      dup3\n        /* \"#utility.yul\":4403:4410   */\n      dup5\n        /* \"#utility.yul\":4399:4422   */\n      sub\n        /* \"#utility.yul\":4395:4427   */\n      slt\n        /* \"#utility.yul\":4392:4511   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":4430:4509   */\n      tag_354\n      tag_251\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4392:4511   */\n    tag_353:\n        /* \"#utility.yul\":4550:4551   */\n      0x00\n        /* \"#utility.yul\":4575:4628   */\n      tag_355\n        /* \"#utility.yul\":4620:4627   */\n      dup5\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup6\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_256\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4521:4638   */\n      pop\n        /* \"#utility.yul\":4316:4645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_263:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_264:\n        /* \"#utility.yul\":4826:4848   */\n      tag_358\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_263\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_49:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_360\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_264\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5198   */\n    tag_265:\n        /* \"#utility.yul\":5190:5191   */\n      0x00\n        /* \"#utility.yul\":5187:5188   */\n      dup1\n        /* \"#utility.yul\":5180:5192   */\n      revert\n        /* \"#utility.yul\":5204:5321   */\n    tag_266:\n        /* \"#utility.yul\":5313:5314   */\n      0x00\n        /* \"#utility.yul\":5310:5311   */\n      dup1\n        /* \"#utility.yul\":5303:5315   */\n      revert\n        /* \"#utility.yul\":5327:5444   */\n    tag_267:\n        /* \"#utility.yul\":5436:5437   */\n      0x00\n        /* \"#utility.yul\":5433:5434   */\n      dup1\n        /* \"#utility.yul\":5426:5438   */\n      revert\n        /* \"#utility.yul\":5464:6017   */\n    tag_268:\n        /* \"#utility.yul\":5522:5530   */\n      0x00\n        /* \"#utility.yul\":5532:5538   */\n      dup1\n        /* \"#utility.yul\":5582:5585   */\n      dup4\n        /* \"#utility.yul\":5575:5579   */\n      0x1f\n        /* \"#utility.yul\":5567:5573   */\n      dup5\n        /* \"#utility.yul\":5563:5580   */\n      add\n        /* \"#utility.yul\":5559:5586   */\n      slt\n        /* \"#utility.yul\":5549:5671   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":5590:5669   */\n      tag_366\n      tag_265\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5549:5671   */\n    tag_365:\n        /* \"#utility.yul\":5703:5709   */\n      dup3\n        /* \"#utility.yul\":5690:5710   */\n      calldataload\n        /* \"#utility.yul\":5680:5710   */\n      swap1\n      pop\n        /* \"#utility.yul\":5733:5751   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5725:5731   */\n      dup2\n        /* \"#utility.yul\":5722:5752   */\n      gt\n        /* \"#utility.yul\":5719:5836   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":5755:5834   */\n      tag_368\n      tag_266\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5719:5836   */\n    tag_367:\n        /* \"#utility.yul\":5869:5873   */\n      0x20\n        /* \"#utility.yul\":5861:5867   */\n      dup4\n        /* \"#utility.yul\":5857:5874   */\n      add\n        /* \"#utility.yul\":5845:5874   */\n      swap2\n      pop\n        /* \"#utility.yul\":5923:5926   */\n      dup4\n        /* \"#utility.yul\":5915:5919   */\n      0x01\n        /* \"#utility.yul\":5907:5913   */\n      dup3\n        /* \"#utility.yul\":5903:5920   */\n      mul\n        /* \"#utility.yul\":5893:5901   */\n      dup4\n        /* \"#utility.yul\":5889:5921   */\n      add\n        /* \"#utility.yul\":5886:5927   */\n      gt\n        /* \"#utility.yul\":5883:6011   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":5930:6009   */\n      tag_370\n      tag_267\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5883:6011   */\n    tag_369:\n        /* \"#utility.yul\":5464:6017   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6697   */\n    tag_62:\n        /* \"#utility.yul\":6103:6109   */\n      0x00\n        /* \"#utility.yul\":6111:6117   */\n      dup1\n        /* \"#utility.yul\":6119:6125   */\n      0x00\n        /* \"#utility.yul\":6168:6170   */\n      0x40\n        /* \"#utility.yul\":6156:6165   */\n      dup5\n        /* \"#utility.yul\":6147:6154   */\n      dup7\n        /* \"#utility.yul\":6143:6166   */\n      sub\n        /* \"#utility.yul\":6139:6171   */\n      slt\n        /* \"#utility.yul\":6136:6255   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":6174:6253   */\n      tag_373\n      tag_251\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":6136:6255   */\n    tag_372:\n        /* \"#utility.yul\":6322:6323   */\n      0x00\n        /* \"#utility.yul\":6311:6320   */\n      dup5\n        /* \"#utility.yul\":6307:6324   */\n      add\n        /* \"#utility.yul\":6294:6325   */\n      calldataload\n        /* \"#utility.yul\":6352:6370   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6344:6350   */\n      dup2\n        /* \"#utility.yul\":6341:6371   */\n      gt\n        /* \"#utility.yul\":6338:6455   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6374:6453   */\n      tag_375\n      tag_252\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6338:6455   */\n    tag_374:\n        /* \"#utility.yul\":6487:6552   */\n      tag_376\n        /* \"#utility.yul\":6544:6551   */\n      dup7\n        /* \"#utility.yul\":6535:6541   */\n      dup3\n        /* \"#utility.yul\":6524:6533   */\n      dup8\n        /* \"#utility.yul\":6520:6542   */\n      add\n        /* \"#utility.yul\":6487:6552   */\n      tag_268\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6469:6552   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":6265:6562   */\n      pop\n        /* \"#utility.yul\":6601:6603   */\n      0x20\n        /* \"#utility.yul\":6627:6680   */\n      tag_377\n        /* \"#utility.yul\":6672:6679   */\n      dup7\n        /* \"#utility.yul\":6663:6669   */\n      dup3\n        /* \"#utility.yul\":6652:6661   */\n      dup8\n        /* \"#utility.yul\":6648:6670   */\n      add\n        /* \"#utility.yul\":6627:6680   */\n      tag_259\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6617:6680   */\n      swap2\n      pop\n        /* \"#utility.yul\":6572:6690   */\n      pop\n        /* \"#utility.yul\":6023:6697   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6703:6812   */\n    tag_269:\n        /* \"#utility.yul\":6786:6787   */\n      0x03\n        /* \"#utility.yul\":6779:6784   */\n      dup2\n        /* \"#utility.yul\":6776:6788   */\n      lt\n        /* \"#utility.yul\":6766:6806   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":6802:6803   */\n      0x00\n        /* \"#utility.yul\":6799:6800   */\n      dup1\n        /* \"#utility.yul\":6792:6804   */\n      revert\n        /* \"#utility.yul\":6766:6806   */\n    tag_379:\n        /* \"#utility.yul\":6703:6812   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6818:6977   */\n    tag_270:\n        /* \"#utility.yul\":6874:6879   */\n      0x00\n        /* \"#utility.yul\":6912:6918   */\n      dup2\n        /* \"#utility.yul\":6899:6919   */\n      calldataload\n        /* \"#utility.yul\":6890:6919   */\n      swap1\n      pop\n        /* \"#utility.yul\":6928:6971   */\n      tag_381\n        /* \"#utility.yul\":6965:6970   */\n      dup2\n        /* \"#utility.yul\":6928:6971   */\n      tag_269\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":6818:6977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6983:7477   */\n    tag_67:\n        /* \"#utility.yul\":7061:7067   */\n      0x00\n        /* \"#utility.yul\":7069:7075   */\n      dup1\n        /* \"#utility.yul\":7118:7120   */\n      0x40\n        /* \"#utility.yul\":7106:7115   */\n      dup4\n        /* \"#utility.yul\":7097:7104   */\n      dup6\n        /* \"#utility.yul\":7093:7116   */\n      sub\n        /* \"#utility.yul\":7089:7121   */\n      slt\n        /* \"#utility.yul\":7086:7205   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":7124:7203   */\n      tag_384\n      tag_251\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7086:7205   */\n    tag_383:\n        /* \"#utility.yul\":7244:7245   */\n      0x00\n        /* \"#utility.yul\":7269:7322   */\n      tag_385\n        /* \"#utility.yul\":7314:7321   */\n      dup6\n        /* \"#utility.yul\":7305:7311   */\n      dup3\n        /* \"#utility.yul\":7294:7303   */\n      dup7\n        /* \"#utility.yul\":7290:7312   */\n      add\n        /* \"#utility.yul\":7269:7322   */\n      tag_259\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7259:7322   */\n      swap3\n      pop\n        /* \"#utility.yul\":7215:7332   */\n      pop\n        /* \"#utility.yul\":7371:7373   */\n      0x20\n        /* \"#utility.yul\":7397:7460   */\n      tag_386\n        /* \"#utility.yul\":7452:7459   */\n      dup6\n        /* \"#utility.yul\":7443:7449   */\n      dup3\n        /* \"#utility.yul\":7432:7441   */\n      dup7\n        /* \"#utility.yul\":7428:7450   */\n      add\n        /* \"#utility.yul\":7397:7460   */\n      tag_270\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7387:7460   */\n      swap2\n      pop\n        /* \"#utility.yul\":7342:7470   */\n      pop\n        /* \"#utility.yul\":6983:7477   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7483:7812   */\n    tag_74:\n        /* \"#utility.yul\":7542:7548   */\n      0x00\n        /* \"#utility.yul\":7591:7593   */\n      0x20\n        /* \"#utility.yul\":7579:7588   */\n      dup3\n        /* \"#utility.yul\":7570:7577   */\n      dup5\n        /* \"#utility.yul\":7566:7589   */\n      sub\n        /* \"#utility.yul\":7562:7594   */\n      slt\n        /* \"#utility.yul\":7559:7678   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":7597:7676   */\n      tag_389\n      tag_251\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":7559:7678   */\n    tag_388:\n        /* \"#utility.yul\":7717:7718   */\n      0x00\n        /* \"#utility.yul\":7742:7795   */\n      tag_390\n        /* \"#utility.yul\":7787:7794   */\n      dup5\n        /* \"#utility.yul\":7778:7784   */\n      dup3\n        /* \"#utility.yul\":7767:7776   */\n      dup6\n        /* \"#utility.yul\":7763:7785   */\n      add\n        /* \"#utility.yul\":7742:7795   */\n      tag_259\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7732:7795   */\n      swap2\n      pop\n        /* \"#utility.yul\":7688:7805   */\n      pop\n        /* \"#utility.yul\":7483:7812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7818:7932   */\n    tag_271:\n        /* \"#utility.yul\":7885:7891   */\n      0x00\n        /* \"#utility.yul\":7919:7924   */\n      dup2\n        /* \"#utility.yul\":7913:7925   */\n      mload\n        /* \"#utility.yul\":7903:7925   */\n      swap1\n      pop\n        /* \"#utility.yul\":7818:7932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7938:8112   */\n    tag_272:\n        /* \"#utility.yul\":8027:8038   */\n      0x00\n        /* \"#utility.yul\":8061:8067   */\n      dup3\n        /* \"#utility.yul\":8056:8059   */\n      dup3\n        /* \"#utility.yul\":8049:8068   */\n      mstore\n        /* \"#utility.yul\":8101:8105   */\n      0x20\n        /* \"#utility.yul\":8096:8099   */\n      dup3\n        /* \"#utility.yul\":8092:8106   */\n      add\n        /* \"#utility.yul\":8077:8106   */\n      swap1\n      pop\n        /* \"#utility.yul\":7938:8112   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8118:8250   */\n    tag_273:\n        /* \"#utility.yul\":8185:8189   */\n      0x00\n        /* \"#utility.yul\":8208:8211   */\n      dup2\n        /* \"#utility.yul\":8200:8211   */\n      swap1\n      pop\n        /* \"#utility.yul\":8238:8242   */\n      0x20\n        /* \"#utility.yul\":8233:8236   */\n      dup3\n        /* \"#utility.yul\":8229:8243   */\n      add\n        /* \"#utility.yul\":8221:8243   */\n      swap1\n      pop\n        /* \"#utility.yul\":8118:8250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8364   */\n    tag_274:\n        /* \"#utility.yul\":8333:8357   */\n      tag_395\n        /* \"#utility.yul\":8351:8356   */\n      dup2\n        /* \"#utility.yul\":8333:8357   */\n      tag_254\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8328:8331   */\n      dup3\n        /* \"#utility.yul\":8321:8358   */\n      mstore\n        /* \"#utility.yul\":8256:8364   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8370:8549   */\n    tag_275:\n        /* \"#utility.yul\":8439:8449   */\n      0x00\n        /* \"#utility.yul\":8460:8506   */\n      tag_397\n        /* \"#utility.yul\":8502:8505   */\n      dup4\n        /* \"#utility.yul\":8494:8500   */\n      dup4\n        /* \"#utility.yul\":8460:8506   */\n      tag_274\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8538:8542   */\n      0x20\n        /* \"#utility.yul\":8533:8536   */\n      dup4\n        /* \"#utility.yul\":8529:8543   */\n      add\n        /* \"#utility.yul\":8515:8543   */\n      swap1\n      pop\n        /* \"#utility.yul\":8370:8549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8555:8668   */\n    tag_276:\n        /* \"#utility.yul\":8625:8629   */\n      0x00\n        /* \"#utility.yul\":8657:8661   */\n      0x20\n        /* \"#utility.yul\":8652:8655   */\n      dup3\n        /* \"#utility.yul\":8648:8662   */\n      add\n        /* \"#utility.yul\":8640:8662   */\n      swap1\n      pop\n        /* \"#utility.yul\":8555:8668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8704:9416   */\n    tag_277:\n        /* \"#utility.yul\":8813:8816   */\n      0x00\n        /* \"#utility.yul\":8842:8896   */\n      tag_400\n        /* \"#utility.yul\":8890:8895   */\n      dup3\n        /* \"#utility.yul\":8842:8896   */\n      tag_271\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":8912:8988   */\n      tag_401\n        /* \"#utility.yul\":8981:8987   */\n      dup2\n        /* \"#utility.yul\":8976:8979   */\n      dup6\n        /* \"#utility.yul\":8912:8988   */\n      tag_272\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":8905:8988   */\n      swap4\n      pop\n        /* \"#utility.yul\":9012:9068   */\n      tag_402\n        /* \"#utility.yul\":9062:9067   */\n      dup4\n        /* \"#utility.yul\":9012:9068   */\n      tag_273\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9091:9098   */\n      dup1\n        /* \"#utility.yul\":9122:9123   */\n      0x00\n        /* \"#utility.yul\":9107:9391   */\n    tag_403:\n        /* \"#utility.yul\":9132:9138   */\n      dup4\n        /* \"#utility.yul\":9129:9130   */\n      dup2\n        /* \"#utility.yul\":9126:9139   */\n      lt\n        /* \"#utility.yul\":9107:9391   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":9208:9214   */\n      dup2\n        /* \"#utility.yul\":9202:9215   */\n      mload\n        /* \"#utility.yul\":9235:9298   */\n      tag_406\n        /* \"#utility.yul\":9294:9297   */\n      dup9\n        /* \"#utility.yul\":9279:9292   */\n      dup3\n        /* \"#utility.yul\":9235:9298   */\n      tag_275\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9228:9298   */\n      swap8\n      pop\n        /* \"#utility.yul\":9321:9381   */\n      tag_407\n        /* \"#utility.yul\":9374:9380   */\n      dup4\n        /* \"#utility.yul\":9321:9381   */\n      tag_276\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":9311:9381   */\n      swap3\n      pop\n        /* \"#utility.yul\":9167:9391   */\n      pop\n        /* \"#utility.yul\":9154:9155   */\n      0x01\n        /* \"#utility.yul\":9151:9152   */\n      dup2\n        /* \"#utility.yul\":9147:9156   */\n      add\n        /* \"#utility.yul\":9142:9156   */\n      swap1\n      pop\n        /* \"#utility.yul\":9107:9391   */\n      jump(tag_403)\n    tag_405:\n        /* \"#utility.yul\":9111:9125   */\n      pop\n        /* \"#utility.yul\":9407:9410   */\n      dup6\n        /* \"#utility.yul\":9400:9410   */\n      swap4\n      pop\n        /* \"#utility.yul\":8818:9416   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8704:9416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9422:9581   */\n    tag_278:\n        /* \"#utility.yul\":9496:9507   */\n      0x00\n        /* \"#utility.yul\":9530:9536   */\n      dup3\n        /* \"#utility.yul\":9525:9528   */\n      dup3\n        /* \"#utility.yul\":9518:9537   */\n      mstore\n        /* \"#utility.yul\":9570:9574   */\n      0x20\n        /* \"#utility.yul\":9565:9568   */\n      dup3\n        /* \"#utility.yul\":9561:9575   */\n      add\n        /* \"#utility.yul\":9546:9575   */\n      swap1\n      pop\n        /* \"#utility.yul\":9422:9581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9587:9944   */\n    tag_279:\n        /* \"#utility.yul\":9665:9668   */\n      0x00\n        /* \"#utility.yul\":9693:9732   */\n      tag_410\n        /* \"#utility.yul\":9726:9731   */\n      dup3\n        /* \"#utility.yul\":9693:9732   */\n      tag_245\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":9748:9809   */\n      tag_411\n        /* \"#utility.yul\":9802:9808   */\n      dup2\n        /* \"#utility.yul\":9797:9800   */\n      dup6\n        /* \"#utility.yul\":9748:9809   */\n      tag_278\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":9741:9809   */\n      swap4\n      pop\n        /* \"#utility.yul\":9818:9883   */\n      tag_412\n        /* \"#utility.yul\":9876:9882   */\n      dup2\n        /* \"#utility.yul\":9871:9874   */\n      dup6\n        /* \"#utility.yul\":9864:9868   */\n      0x20\n        /* \"#utility.yul\":9857:9862   */\n      dup7\n        /* \"#utility.yul\":9853:9869   */\n      add\n        /* \"#utility.yul\":9818:9883   */\n      tag_247\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":9908:9937   */\n      tag_413\n        /* \"#utility.yul\":9930:9936   */\n      dup2\n        /* \"#utility.yul\":9908:9937   */\n      tag_248\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":9903:9906   */\n      dup5\n        /* \"#utility.yul\":9899:9938   */\n      add\n        /* \"#utility.yul\":9892:9938   */\n      swap2\n      pop\n        /* \"#utility.yul\":9669:9944   */\n      pop\n        /* \"#utility.yul\":9587:9944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9950:10058   */\n    tag_280:\n        /* \"#utility.yul\":10027:10051   */\n      tag_415\n        /* \"#utility.yul\":10045:10050   */\n      dup2\n        /* \"#utility.yul\":10027:10051   */\n      tag_257\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10022:10025   */\n      dup3\n        /* \"#utility.yul\":10015:10052   */\n      mstore\n        /* \"#utility.yul\":9950:10058   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10064:10163   */\n    tag_281:\n        /* \"#utility.yul\":10135:10156   */\n      tag_417\n        /* \"#utility.yul\":10150:10155   */\n      dup2\n        /* \"#utility.yul\":10135:10156   */\n      tag_260\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10130:10133   */\n      dup3\n        /* \"#utility.yul\":10123:10157   */\n      mstore\n        /* \"#utility.yul\":10064:10163   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10243:12205   */\n    tag_282:\n        /* \"#utility.yul\":10366:10369   */\n      0x00\n        /* \"#utility.yul\":10402:10408   */\n      0x0120\n        /* \"#utility.yul\":10397:10400   */\n      dup4\n        /* \"#utility.yul\":10393:10409   */\n      add\n        /* \"#utility.yul\":10493:10497   */\n      0x00\n        /* \"#utility.yul\":10486:10491   */\n      dup4\n        /* \"#utility.yul\":10482:10498   */\n      add\n        /* \"#utility.yul\":10476:10499   */\n      mload\n        /* \"#utility.yul\":10546:10549   */\n      dup5\n        /* \"#utility.yul\":10540:10544   */\n      dup3\n        /* \"#utility.yul\":10536:10550   */\n      sub\n        /* \"#utility.yul\":10529:10533   */\n      0x00\n        /* \"#utility.yul\":10524:10527   */\n      dup7\n        /* \"#utility.yul\":10520:10534   */\n      add\n        /* \"#utility.yul\":10513:10551   */\n      mstore\n        /* \"#utility.yul\":10572:10675   */\n      tag_419\n        /* \"#utility.yul\":10670:10674   */\n      dup3\n        /* \"#utility.yul\":10656:10668   */\n      dup3\n        /* \"#utility.yul\":10572:10675   */\n      tag_277\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":10564:10675   */\n      swap2\n      pop\n        /* \"#utility.yul\":10419:10686   */\n      pop\n        /* \"#utility.yul\":10773:10777   */\n      0x20\n        /* \"#utility.yul\":10766:10771   */\n      dup4\n        /* \"#utility.yul\":10762:10778   */\n      add\n        /* \"#utility.yul\":10756:10779   */\n      mload\n        /* \"#utility.yul\":10826:10829   */\n      dup5\n        /* \"#utility.yul\":10820:10824   */\n      dup3\n        /* \"#utility.yul\":10816:10830   */\n      sub\n        /* \"#utility.yul\":10809:10813   */\n      0x20\n        /* \"#utility.yul\":10804:10807   */\n      dup7\n        /* \"#utility.yul\":10800:10814   */\n      add\n        /* \"#utility.yul\":10793:10831   */\n      mstore\n        /* \"#utility.yul\":10852:10925   */\n      tag_420\n        /* \"#utility.yul\":10920:10924   */\n      dup3\n        /* \"#utility.yul\":10906:10918   */\n      dup3\n        /* \"#utility.yul\":10852:10925   */\n      tag_279\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10844:10925   */\n      swap2\n      pop\n        /* \"#utility.yul\":10696:10936   */\n      pop\n        /* \"#utility.yul\":11022:11026   */\n      0x40\n        /* \"#utility.yul\":11015:11020   */\n      dup4\n        /* \"#utility.yul\":11011:11027   */\n      add\n        /* \"#utility.yul\":11005:11028   */\n      mload\n        /* \"#utility.yul\":11041:11104   */\n      tag_421\n        /* \"#utility.yul\":11098:11102   */\n      0x40\n        /* \"#utility.yul\":11093:11096   */\n      dup7\n        /* \"#utility.yul\":11089:11103   */\n      add\n        /* \"#utility.yul\":11075:11087   */\n      dup3\n        /* \"#utility.yul\":11041:11104   */\n      tag_280\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":10946:11114   */\n      pop\n        /* \"#utility.yul\":11204:11208   */\n      0x60\n        /* \"#utility.yul\":11197:11202   */\n      dup4\n        /* \"#utility.yul\":11193:11209   */\n      add\n        /* \"#utility.yul\":11187:11210   */\n      mload\n        /* \"#utility.yul\":11223:11286   */\n      tag_422\n        /* \"#utility.yul\":11280:11284   */\n      0x60\n        /* \"#utility.yul\":11275:11278   */\n      dup7\n        /* \"#utility.yul\":11271:11285   */\n      add\n        /* \"#utility.yul\":11257:11269   */\n      dup3\n        /* \"#utility.yul\":11223:11286   */\n      tag_280\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":11124:11296   */\n      pop\n        /* \"#utility.yul\":11386:11390   */\n      0x80\n        /* \"#utility.yul\":11379:11384   */\n      dup4\n        /* \"#utility.yul\":11375:11391   */\n      add\n        /* \"#utility.yul\":11369:11392   */\n      mload\n        /* \"#utility.yul\":11405:11468   */\n      tag_423\n        /* \"#utility.yul\":11462:11466   */\n      0x80\n        /* \"#utility.yul\":11457:11460   */\n      dup7\n        /* \"#utility.yul\":11453:11467   */\n      add\n        /* \"#utility.yul\":11439:11451   */\n      dup3\n        /* \"#utility.yul\":11405:11468   */\n      tag_280\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":11306:11478   */\n      pop\n        /* \"#utility.yul\":11566:11570   */\n      0xa0\n        /* \"#utility.yul\":11559:11564   */\n      dup4\n        /* \"#utility.yul\":11555:11571   */\n      add\n        /* \"#utility.yul\":11549:11572   */\n      mload\n        /* \"#utility.yul\":11585:11648   */\n      tag_424\n        /* \"#utility.yul\":11642:11646   */\n      0xa0\n        /* \"#utility.yul\":11637:11640   */\n      dup7\n        /* \"#utility.yul\":11633:11647   */\n      add\n        /* \"#utility.yul\":11619:11631   */\n      dup3\n        /* \"#utility.yul\":11585:11648   */\n      tag_280\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":11488:11658   */\n      pop\n        /* \"#utility.yul\":11742:11746   */\n      0xc0\n        /* \"#utility.yul\":11735:11740   */\n      dup4\n        /* \"#utility.yul\":11731:11747   */\n      add\n        /* \"#utility.yul\":11725:11748   */\n      mload\n        /* \"#utility.yul\":11761:11824   */\n      tag_425\n        /* \"#utility.yul\":11818:11822   */\n      0xc0\n        /* \"#utility.yul\":11813:11816   */\n      dup7\n        /* \"#utility.yul\":11809:11823   */\n      add\n        /* \"#utility.yul\":11795:11807   */\n      dup3\n        /* \"#utility.yul\":11761:11824   */\n      tag_280\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11668:11834   */\n      pop\n        /* \"#utility.yul\":11918:11922   */\n      0xe0\n        /* \"#utility.yul\":11911:11916   */\n      dup4\n        /* \"#utility.yul\":11907:11923   */\n      add\n        /* \"#utility.yul\":11901:11924   */\n      mload\n        /* \"#utility.yul\":11937:11994   */\n      tag_426\n        /* \"#utility.yul\":11988:11992   */\n      0xe0\n        /* \"#utility.yul\":11983:11986   */\n      dup7\n        /* \"#utility.yul\":11979:11993   */\n      add\n        /* \"#utility.yul\":11965:11977   */\n      dup3\n        /* \"#utility.yul\":11937:11994   */\n      tag_281\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":11844:12004   */\n      pop\n        /* \"#utility.yul\":12088:12094   */\n      0x0100\n        /* \"#utility.yul\":12081:12086   */\n      dup4\n        /* \"#utility.yul\":12077:12095   */\n      add\n        /* \"#utility.yul\":12071:12096   */\n      mload\n        /* \"#utility.yul\":12109:12168   */\n      tag_427\n        /* \"#utility.yul\":12160:12166   */\n      0x0100\n        /* \"#utility.yul\":12155:12158   */\n      dup7\n        /* \"#utility.yul\":12151:12167   */\n      add\n        /* \"#utility.yul\":12137:12149   */\n      dup3\n        /* \"#utility.yul\":12109:12168   */\n      tag_281\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12014:12178   */\n      pop\n        /* \"#utility.yul\":12195:12199   */\n      dup1\n        /* \"#utility.yul\":12188:12199   */\n      swap2\n      pop\n        /* \"#utility.yul\":10371:12205   */\n      pop\n        /* \"#utility.yul\":10243:12205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12211:12592   */\n    tag_77:\n        /* \"#utility.yul\":12358:12362   */\n      0x00\n        /* \"#utility.yul\":12396:12398   */\n      0x20\n        /* \"#utility.yul\":12385:12394   */\n      dup3\n        /* \"#utility.yul\":12381:12399   */\n      add\n        /* \"#utility.yul\":12373:12399   */\n      swap1\n      pop\n        /* \"#utility.yul\":12445:12454   */\n      dup2\n        /* \"#utility.yul\":12439:12443   */\n      dup2\n        /* \"#utility.yul\":12435:12455   */\n      sub\n        /* \"#utility.yul\":12431:12432   */\n      0x00\n        /* \"#utility.yul\":12420:12429   */\n      dup4\n        /* \"#utility.yul\":12416:12433   */\n      add\n        /* \"#utility.yul\":12409:12456   */\n      mstore\n        /* \"#utility.yul\":12473:12585   */\n      tag_429\n        /* \"#utility.yul\":12580:12584   */\n      dup2\n        /* \"#utility.yul\":12571:12577   */\n      dup5\n        /* \"#utility.yul\":12473:12585   */\n      tag_282\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":12465:12585   */\n      swap1\n      pop\n        /* \"#utility.yul\":12211:12592   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12598:13072   */\n    tag_87:\n        /* \"#utility.yul\":12666:12672   */\n      0x00\n        /* \"#utility.yul\":12674:12680   */\n      dup1\n        /* \"#utility.yul\":12723:12725   */\n      0x40\n        /* \"#utility.yul\":12711:12720   */\n      dup4\n        /* \"#utility.yul\":12702:12709   */\n      dup6\n        /* \"#utility.yul\":12698:12721   */\n      sub\n        /* \"#utility.yul\":12694:12726   */\n      slt\n        /* \"#utility.yul\":12691:12810   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":12729:12808   */\n      tag_432\n      tag_251\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":12691:12810   */\n    tag_431:\n        /* \"#utility.yul\":12849:12850   */\n      0x00\n        /* \"#utility.yul\":12874:12927   */\n      tag_433\n        /* \"#utility.yul\":12919:12926   */\n      dup6\n        /* \"#utility.yul\":12910:12916   */\n      dup3\n        /* \"#utility.yul\":12899:12908   */\n      dup7\n        /* \"#utility.yul\":12895:12917   */\n      add\n        /* \"#utility.yul\":12874:12927   */\n      tag_256\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":12864:12927   */\n      swap3\n      pop\n        /* \"#utility.yul\":12820:12937   */\n      pop\n        /* \"#utility.yul\":12976:12978   */\n      0x20\n        /* \"#utility.yul\":13002:13055   */\n      tag_434\n        /* \"#utility.yul\":13047:13054   */\n      dup6\n        /* \"#utility.yul\":13038:13044   */\n      dup3\n        /* \"#utility.yul\":13027:13036   */\n      dup7\n        /* \"#utility.yul\":13023:13045   */\n      add\n        /* \"#utility.yul\":13002:13055   */\n      tag_256\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12992:13055   */\n      swap2\n      pop\n        /* \"#utility.yul\":12947:13065   */\n      pop\n        /* \"#utility.yul\":12598:13072   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13078:13258   */\n    tag_283:\n        /* \"#utility.yul\":13126:13203   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13123:13124   */\n      0x00\n        /* \"#utility.yul\":13116:13204   */\n      mstore\n        /* \"#utility.yul\":13223:13227   */\n      0x22\n        /* \"#utility.yul\":13220:13221   */\n      0x04\n        /* \"#utility.yul\":13213:13228   */\n      mstore\n        /* \"#utility.yul\":13247:13251   */\n      0x24\n        /* \"#utility.yul\":13244:13245   */\n      0x00\n        /* \"#utility.yul\":13237:13252   */\n      revert\n        /* \"#utility.yul\":13264:13584   */\n    tag_92:\n        /* \"#utility.yul\":13308:13314   */\n      0x00\n        /* \"#utility.yul\":13345:13346   */\n      0x02\n        /* \"#utility.yul\":13339:13343   */\n      dup3\n        /* \"#utility.yul\":13335:13347   */\n      div\n        /* \"#utility.yul\":13325:13347   */\n      swap1\n      pop\n        /* \"#utility.yul\":13392:13393   */\n      0x01\n        /* \"#utility.yul\":13386:13390   */\n      dup3\n        /* \"#utility.yul\":13382:13394   */\n      and\n        /* \"#utility.yul\":13413:13431   */\n      dup1\n        /* \"#utility.yul\":13403:13484   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":13469:13473   */\n      0x7f\n        /* \"#utility.yul\":13461:13467   */\n      dup3\n        /* \"#utility.yul\":13457:13474   */\n      and\n        /* \"#utility.yul\":13447:13474   */\n      swap2\n      pop\n        /* \"#utility.yul\":13403:13484   */\n    tag_437:\n        /* \"#utility.yul\":13531:13533   */\n      0x20\n        /* \"#utility.yul\":13523:13529   */\n      dup3\n        /* \"#utility.yul\":13520:13534   */\n      lt\n        /* \"#utility.yul\":13500:13518   */\n      dup2\n        /* \"#utility.yul\":13497:13535   */\n      sub\n        /* \"#utility.yul\":13494:13578   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":13550:13568   */\n      tag_439\n      tag_283\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13494:13578   */\n    tag_438:\n        /* \"#utility.yul\":13315:13584   */\n      pop\n        /* \"#utility.yul\":13264:13584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13590:13687   */\n    tag_284:\n        /* \"#utility.yul\":13649:13655   */\n      0x00\n        /* \"#utility.yul\":13677:13680   */\n      dup3\n        /* \"#utility.yul\":13667:13680   */\n      swap1\n      pop\n        /* \"#utility.yul\":13590:13687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13693:13873   */\n    tag_285:\n        /* \"#utility.yul\":13741:13818   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13738:13739   */\n      0x00\n        /* \"#utility.yul\":13731:13819   */\n      mstore\n        /* \"#utility.yul\":13838:13842   */\n      0x41\n        /* \"#utility.yul\":13835:13836   */\n      0x04\n        /* \"#utility.yul\":13828:13843   */\n      mstore\n        /* \"#utility.yul\":13862:13866   */\n      0x24\n        /* \"#utility.yul\":13859:13860   */\n      0x00\n        /* \"#utility.yul\":13852:13867   */\n      revert\n        /* \"#utility.yul\":13879:14020   */\n    tag_286:\n        /* \"#utility.yul\":13928:13932   */\n      0x00\n        /* \"#utility.yul\":13951:13954   */\n      dup2\n        /* \"#utility.yul\":13943:13954   */\n      swap1\n      pop\n        /* \"#utility.yul\":13974:13977   */\n      dup2\n        /* \"#utility.yul\":13971:13972   */\n      0x00\n        /* \"#utility.yul\":13964:13978   */\n      mstore\n        /* \"#utility.yul\":14008:14012   */\n      0x20\n        /* \"#utility.yul\":14005:14006   */\n      0x00\n        /* \"#utility.yul\":13995:14013   */\n      keccak256\n        /* \"#utility.yul\":13987:14013   */\n      swap1\n      pop\n        /* \"#utility.yul\":13879:14020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14026:14119   */\n    tag_287:\n        /* \"#utility.yul\":14063:14069   */\n      0x00\n        /* \"#utility.yul\":14110:14112   */\n      0x20\n        /* \"#utility.yul\":14105:14107   */\n      0x1f\n        /* \"#utility.yul\":14098:14103   */\n      dup4\n        /* \"#utility.yul\":14094:14108   */\n      add\n        /* \"#utility.yul\":14090:14113   */\n      div\n        /* \"#utility.yul\":14080:14113   */\n      swap1\n      pop\n        /* \"#utility.yul\":14026:14119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14125:14232   */\n    tag_288:\n        /* \"#utility.yul\":14169:14177   */\n      0x00\n        /* \"#utility.yul\":14219:14224   */\n      dup3\n        /* \"#utility.yul\":14213:14217   */\n      dup3\n        /* \"#utility.yul\":14209:14225   */\n      shl\n        /* \"#utility.yul\":14188:14225   */\n      swap1\n      pop\n        /* \"#utility.yul\":14125:14232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14238:14631   */\n    tag_289:\n        /* \"#utility.yul\":14307:14313   */\n      0x00\n        /* \"#utility.yul\":14357:14358   */\n      0x08\n        /* \"#utility.yul\":14345:14355   */\n      dup4\n        /* \"#utility.yul\":14341:14359   */\n      mul\n        /* \"#utility.yul\":14380:14477   */\n      tag_446\n        /* \"#utility.yul\":14410:14476   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14399:14408   */\n      dup3\n        /* \"#utility.yul\":14380:14477   */\n      tag_288\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":14498:14537   */\n      tag_447\n        /* \"#utility.yul\":14528:14536   */\n      dup7\n        /* \"#utility.yul\":14517:14526   */\n      dup4\n        /* \"#utility.yul\":14498:14537   */\n      tag_288\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":14486:14537   */\n      swap6\n      pop\n        /* \"#utility.yul\":14570:14574   */\n      dup1\n        /* \"#utility.yul\":14566:14575   */\n      not\n        /* \"#utility.yul\":14559:14564   */\n      dup5\n        /* \"#utility.yul\":14555:14576   */\n      and\n        /* \"#utility.yul\":14546:14576   */\n      swap4\n      pop\n        /* \"#utility.yul\":14619:14623   */\n      dup1\n        /* \"#utility.yul\":14609:14617   */\n      dup7\n        /* \"#utility.yul\":14605:14624   */\n      and\n        /* \"#utility.yul\":14598:14603   */\n      dup5\n        /* \"#utility.yul\":14595:14625   */\n      or\n        /* \"#utility.yul\":14585:14625   */\n      swap3\n      pop\n        /* \"#utility.yul\":14314:14631   */\n      pop\n      pop\n        /* \"#utility.yul\":14238:14631   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14637:14697   */\n    tag_290:\n        /* \"#utility.yul\":14665:14668   */\n      0x00\n        /* \"#utility.yul\":14686:14691   */\n      dup2\n        /* \"#utility.yul\":14679:14691   */\n      swap1\n      pop\n        /* \"#utility.yul\":14637:14697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14703:14845   */\n    tag_291:\n        /* \"#utility.yul\":14753:14762   */\n      0x00\n        /* \"#utility.yul\":14786:14839   */\n      tag_450\n        /* \"#utility.yul\":14804:14838   */\n      tag_451\n        /* \"#utility.yul\":14813:14837   */\n      tag_452\n        /* \"#utility.yul\":14831:14836   */\n      dup5\n        /* \"#utility.yul\":14813:14837   */\n      tag_257\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14804:14838   */\n      tag_290\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":14786:14839   */\n      tag_257\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":14773:14839   */\n      swap1\n      pop\n        /* \"#utility.yul\":14703:14845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14851:14926   */\n    tag_292:\n        /* \"#utility.yul\":14894:14897   */\n      0x00\n        /* \"#utility.yul\":14915:14920   */\n      dup2\n        /* \"#utility.yul\":14908:14920   */\n      swap1\n      pop\n        /* \"#utility.yul\":14851:14926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14932:15201   */\n    tag_293:\n        /* \"#utility.yul\":15042:15081   */\n      tag_455\n        /* \"#utility.yul\":15073:15080   */\n      dup4\n        /* \"#utility.yul\":15042:15081   */\n      tag_291\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":15103:15194   */\n      tag_456\n        /* \"#utility.yul\":15152:15193   */\n      tag_457\n        /* \"#utility.yul\":15176:15192   */\n      dup3\n        /* \"#utility.yul\":15152:15193   */\n      tag_292\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":15144:15150   */\n      dup5\n        /* \"#utility.yul\":15137:15141   */\n      dup5\n        /* \"#utility.yul\":15131:15142   */\n      sload\n        /* \"#utility.yul\":15103:15194   */\n      tag_289\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":15097:15101   */\n      dup3\n        /* \"#utility.yul\":15090:15195   */\n      sstore\n        /* \"#utility.yul\":15008:15201   */\n      pop\n        /* \"#utility.yul\":14932:15201   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15207:15280   */\n    tag_294:\n        /* \"#utility.yul\":15252:15255   */\n      0x00\n        /* \"#utility.yul\":15207:15280   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15286:15475   */\n    tag_295:\n        /* \"#utility.yul\":15363:15395   */\n      tag_460\n      tag_294\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":15404:15469   */\n      tag_461\n        /* \"#utility.yul\":15462:15468   */\n      dup2\n        /* \"#utility.yul\":15454:15460   */\n      dup5\n        /* \"#utility.yul\":15448:15452   */\n      dup5\n        /* \"#utility.yul\":15404:15469   */\n      tag_293\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15339:15475   */\n      pop\n        /* \"#utility.yul\":15286:15475   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15481:15667   */\n    tag_296:\n        /* \"#utility.yul\":15541:15661   */\n    tag_463:\n        /* \"#utility.yul\":15558:15561   */\n      dup2\n        /* \"#utility.yul\":15551:15556   */\n      dup2\n        /* \"#utility.yul\":15548:15562   */\n      lt\n        /* \"#utility.yul\":15541:15661   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":15612:15651   */\n      tag_466\n        /* \"#utility.yul\":15649:15650   */\n      0x00\n        /* \"#utility.yul\":15642:15647   */\n      dup3\n        /* \"#utility.yul\":15612:15651   */\n      tag_295\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":15585:15586   */\n      0x01\n        /* \"#utility.yul\":15578:15583   */\n      dup2\n        /* \"#utility.yul\":15574:15587   */\n      add\n        /* \"#utility.yul\":15565:15587   */\n      swap1\n      pop\n        /* \"#utility.yul\":15541:15661   */\n      jump(tag_463)\n    tag_465:\n        /* \"#utility.yul\":15481:15667   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15673:16216   */\n    tag_297:\n        /* \"#utility.yul\":15774:15776   */\n      0x1f\n        /* \"#utility.yul\":15769:15772   */\n      dup3\n        /* \"#utility.yul\":15766:15777   */\n      gt\n        /* \"#utility.yul\":15763:16209   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":15808:15846   */\n      tag_469\n        /* \"#utility.yul\":15840:15845   */\n      dup2\n        /* \"#utility.yul\":15808:15846   */\n      tag_286\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15892:15921   */\n      tag_470\n        /* \"#utility.yul\":15910:15920   */\n      dup5\n        /* \"#utility.yul\":15892:15921   */\n      tag_287\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":15882:15890   */\n      dup2\n        /* \"#utility.yul\":15878:15922   */\n      add\n        /* \"#utility.yul\":16075:16077   */\n      0x20\n        /* \"#utility.yul\":16063:16073   */\n      dup6\n        /* \"#utility.yul\":16060:16078   */\n      lt\n        /* \"#utility.yul\":16057:16106   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":16096:16104   */\n      dup2\n        /* \"#utility.yul\":16081:16104   */\n      swap1\n      pop\n        /* \"#utility.yul\":16057:16106   */\n    tag_471:\n        /* \"#utility.yul\":16119:16199   */\n      tag_472\n        /* \"#utility.yul\":16175:16197   */\n      tag_473\n        /* \"#utility.yul\":16193:16196   */\n      dup6\n        /* \"#utility.yul\":16175:16197   */\n      tag_287\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":16165:16173   */\n      dup4\n        /* \"#utility.yul\":16161:16198   */\n      add\n        /* \"#utility.yul\":16148:16159   */\n      dup3\n        /* \"#utility.yul\":16119:16199   */\n      tag_296\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":15778:16209   */\n      pop\n      pop\n        /* \"#utility.yul\":15763:16209   */\n    tag_468:\n        /* \"#utility.yul\":15673:16216   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16222:16339   */\n    tag_298:\n        /* \"#utility.yul\":16276:16284   */\n      0x00\n        /* \"#utility.yul\":16326:16331   */\n      dup3\n        /* \"#utility.yul\":16320:16324   */\n      dup3\n        /* \"#utility.yul\":16316:16332   */\n      shr\n        /* \"#utility.yul\":16295:16332   */\n      swap1\n      pop\n        /* \"#utility.yul\":16222:16339   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16345:16514   */\n    tag_299:\n        /* \"#utility.yul\":16389:16395   */\n      0x00\n        /* \"#utility.yul\":16422:16473   */\n      tag_476\n        /* \"#utility.yul\":16470:16471   */\n      0x00\n        /* \"#utility.yul\":16466:16472   */\n      not\n        /* \"#utility.yul\":16458:16463   */\n      dup5\n        /* \"#utility.yul\":16455:16456   */\n      0x08\n        /* \"#utility.yul\":16451:16464   */\n      mul\n        /* \"#utility.yul\":16422:16473   */\n      tag_298\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":16418:16474   */\n      not\n        /* \"#utility.yul\":16503:16507   */\n      dup1\n        /* \"#utility.yul\":16497:16501   */\n      dup4\n        /* \"#utility.yul\":16493:16508   */\n      and\n        /* \"#utility.yul\":16483:16508   */\n      swap2\n      pop\n        /* \"#utility.yul\":16396:16514   */\n      pop\n        /* \"#utility.yul\":16345:16514   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16519:16814   */\n    tag_300:\n        /* \"#utility.yul\":16595:16599   */\n      0x00\n        /* \"#utility.yul\":16741:16770   */\n      tag_478\n        /* \"#utility.yul\":16766:16769   */\n      dup4\n        /* \"#utility.yul\":16760:16764   */\n      dup4\n        /* \"#utility.yul\":16741:16770   */\n      tag_299\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16733:16770   */\n      swap2\n      pop\n        /* \"#utility.yul\":16803:16806   */\n      dup3\n        /* \"#utility.yul\":16800:16801   */\n      0x02\n        /* \"#utility.yul\":16796:16807   */\n      mul\n        /* \"#utility.yul\":16790:16794   */\n      dup3\n        /* \"#utility.yul\":16787:16808   */\n      or\n        /* \"#utility.yul\":16779:16808   */\n      swap1\n      pop\n        /* \"#utility.yul\":16519:16814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16819:18222   */\n    tag_125:\n        /* \"#utility.yul\":16943:16987   */\n      tag_480\n        /* \"#utility.yul\":16983:16986   */\n      dup4\n        /* \"#utility.yul\":16978:16981   */\n      dup4\n        /* \"#utility.yul\":16943:16987   */\n      tag_284\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":17052:17070   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17044:17050   */\n      dup2\n        /* \"#utility.yul\":17041:17071   */\n      gt\n        /* \"#utility.yul\":17038:17094   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":17074:17092   */\n      tag_482\n      tag_285\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":17038:17094   */\n    tag_481:\n        /* \"#utility.yul\":17118:17156   */\n      tag_483\n        /* \"#utility.yul\":17150:17154   */\n      dup3\n        /* \"#utility.yul\":17144:17155   */\n      sload\n        /* \"#utility.yul\":17118:17156   */\n      tag_92\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":17203:17270   */\n      tag_484\n        /* \"#utility.yul\":17263:17269   */\n      dup3\n        /* \"#utility.yul\":17255:17261   */\n      dup3\n        /* \"#utility.yul\":17249:17253   */\n      dup6\n        /* \"#utility.yul\":17203:17270   */\n      tag_297\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17297:17298   */\n      0x00\n        /* \"#utility.yul\":17326:17328   */\n      0x1f\n        /* \"#utility.yul\":17318:17324   */\n      dup4\n        /* \"#utility.yul\":17315:17329   */\n      gt\n        /* \"#utility.yul\":17343:17344   */\n      0x01\n        /* \"#utility.yul\":17338:17970   */\n      dup2\n      eq\n      tag_486\n      jumpi\n        /* \"#utility.yul\":18014:18015   */\n      0x00\n        /* \"#utility.yul\":18031:18037   */\n      dup5\n        /* \"#utility.yul\":18028:18112   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":18087:18096   */\n      dup3\n        /* \"#utility.yul\":18082:18085   */\n      dup8\n        /* \"#utility.yul\":18078:18097   */\n      add\n        /* \"#utility.yul\":18065:18098   */\n      calldataload\n        /* \"#utility.yul\":18056:18098   */\n      swap1\n      pop\n        /* \"#utility.yul\":18028:18112   */\n    tag_487:\n        /* \"#utility.yul\":18138:18205   */\n      tag_488\n        /* \"#utility.yul\":18198:18204   */\n      dup6\n        /* \"#utility.yul\":18191:18196   */\n      dup3\n        /* \"#utility.yul\":18138:18205   */\n      tag_300\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":18132:18136   */\n      dup7\n        /* \"#utility.yul\":18125:18206   */\n      sstore\n        /* \"#utility.yul\":17987:18216   */\n      pop\n        /* \"#utility.yul\":17308:18216   */\n      jump(tag_485)\n        /* \"#utility.yul\":17338:17970   */\n    tag_486:\n        /* \"#utility.yul\":17390:17394   */\n      0x1f\n        /* \"#utility.yul\":17386:17395   */\n      not\n        /* \"#utility.yul\":17378:17384   */\n      dup5\n        /* \"#utility.yul\":17374:17396   */\n      and\n        /* \"#utility.yul\":17424:17461   */\n      tag_489\n        /* \"#utility.yul\":17456:17460   */\n      dup7\n        /* \"#utility.yul\":17424:17461   */\n      tag_286\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":17483:17484   */\n      0x00\n        /* \"#utility.yul\":17497:17712   */\n    tag_490:\n        /* \"#utility.yul\":17511:17518   */\n      dup3\n        /* \"#utility.yul\":17508:17509   */\n      dup2\n        /* \"#utility.yul\":17505:17519   */\n      lt\n        /* \"#utility.yul\":17497:17712   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":17597:17606   */\n      dup5\n        /* \"#utility.yul\":17592:17595   */\n      dup10\n        /* \"#utility.yul\":17588:17607   */\n      add\n        /* \"#utility.yul\":17575:17608   */\n      calldataload\n        /* \"#utility.yul\":17567:17573   */\n      dup3\n        /* \"#utility.yul\":17560:17609   */\n      sstore\n        /* \"#utility.yul\":17648:17649   */\n      0x01\n        /* \"#utility.yul\":17640:17646   */\n      dup3\n        /* \"#utility.yul\":17636:17650   */\n      add\n        /* \"#utility.yul\":17626:17650   */\n      swap2\n      pop\n        /* \"#utility.yul\":17695:17697   */\n      0x20\n        /* \"#utility.yul\":17684:17693   */\n      dup6\n        /* \"#utility.yul\":17680:17698   */\n      add\n        /* \"#utility.yul\":17667:17698   */\n      swap5\n      pop\n        /* \"#utility.yul\":17534:17538   */\n      0x20\n        /* \"#utility.yul\":17531:17532   */\n      dup2\n        /* \"#utility.yul\":17527:17539   */\n      add\n        /* \"#utility.yul\":17522:17539   */\n      swap1\n      pop\n        /* \"#utility.yul\":17497:17712   */\n      jump(tag_490)\n    tag_492:\n        /* \"#utility.yul\":17740:17746   */\n      dup7\n        /* \"#utility.yul\":17731:17738   */\n      dup4\n        /* \"#utility.yul\":17728:17747   */\n      lt\n        /* \"#utility.yul\":17725:17911   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":17805:17814   */\n      dup5\n        /* \"#utility.yul\":17800:17803   */\n      dup10\n        /* \"#utility.yul\":17796:17815   */\n      add\n        /* \"#utility.yul\":17783:17816   */\n      calldataload\n        /* \"#utility.yul\":17848:17896   */\n      tag_494\n        /* \"#utility.yul\":17890:17894   */\n      0x1f\n        /* \"#utility.yul\":17882:17888   */\n      dup10\n        /* \"#utility.yul\":17878:17895   */\n      and\n        /* \"#utility.yul\":17867:17876   */\n      dup3\n        /* \"#utility.yul\":17848:17896   */\n      tag_299\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":17840:17846   */\n      dup4\n        /* \"#utility.yul\":17833:17897   */\n      sstore\n        /* \"#utility.yul\":17748:17911   */\n      pop\n        /* \"#utility.yul\":17725:17911   */\n    tag_493:\n        /* \"#utility.yul\":17957:17958   */\n      0x01\n        /* \"#utility.yul\":17953:17954   */\n      0x02\n        /* \"#utility.yul\":17945:17951   */\n      dup9\n        /* \"#utility.yul\":17941:17955   */\n      mul\n        /* \"#utility.yul\":17937:17959   */\n      add\n        /* \"#utility.yul\":17931:17935   */\n      dup9\n        /* \"#utility.yul\":17924:17960   */\n      sstore\n        /* \"#utility.yul\":17345:17970   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17308:18216   */\n    tag_485:\n      pop\n        /* \"#utility.yul\":16918:18222   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16819:18222   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18228:18408   */\n    tag_301:\n        /* \"#utility.yul\":18276:18353   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18273:18274   */\n      0x00\n        /* \"#utility.yul\":18266:18354   */\n      mstore\n        /* \"#utility.yul\":18373:18377   */\n      0x11\n        /* \"#utility.yul\":18370:18371   */\n      0x04\n        /* \"#utility.yul\":18363:18378   */\n      mstore\n        /* \"#utility.yul\":18397:18401   */\n      0x24\n        /* \"#utility.yul\":18394:18395   */\n      0x00\n        /* \"#utility.yul\":18387:18402   */\n      revert\n        /* \"#utility.yul\":18414:18608   */\n    tag_127:\n        /* \"#utility.yul\":18454:18458   */\n      0x00\n        /* \"#utility.yul\":18474:18494   */\n      tag_497\n        /* \"#utility.yul\":18492:18493   */\n      dup3\n        /* \"#utility.yul\":18474:18494   */\n      tag_257\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":18469:18494   */\n      swap2\n      pop\n        /* \"#utility.yul\":18508:18528   */\n      tag_498\n        /* \"#utility.yul\":18526:18527   */\n      dup4\n        /* \"#utility.yul\":18508:18528   */\n      tag_257\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":18503:18528   */\n      swap3\n      pop\n        /* \"#utility.yul\":18552:18553   */\n      dup3\n        /* \"#utility.yul\":18549:18550   */\n      dup3\n        /* \"#utility.yul\":18545:18554   */\n      sub\n        /* \"#utility.yul\":18537:18554   */\n      swap1\n      pop\n        /* \"#utility.yul\":18576:18577   */\n      dup2\n        /* \"#utility.yul\":18570:18574   */\n      dup2\n        /* \"#utility.yul\":18567:18578   */\n      gt\n        /* \"#utility.yul\":18564:18601   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":18581:18599   */\n      tag_500\n      tag_301\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":18564:18601   */\n    tag_499:\n        /* \"#utility.yul\":18414:18608   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18614:18794   */\n    tag_131:\n        /* \"#utility.yul\":18662:18739   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18659:18660   */\n      0x00\n        /* \"#utility.yul\":18652:18740   */\n      mstore\n        /* \"#utility.yul\":18759:18763   */\n      0x32\n        /* \"#utility.yul\":18756:18757   */\n      0x04\n        /* \"#utility.yul\":18749:18764   */\n      mstore\n        /* \"#utility.yul\":18783:18787   */\n      0x24\n        /* \"#utility.yul\":18780:18781   */\n      0x00\n        /* \"#utility.yul\":18773:18788   */\n      revert\n        /* \"#utility.yul\":18800:18991   */\n    tag_143:\n        /* \"#utility.yul\":18840:18843   */\n      0x00\n        /* \"#utility.yul\":18859:18879   */\n      tag_503\n        /* \"#utility.yul\":18877:18878   */\n      dup3\n        /* \"#utility.yul\":18859:18879   */\n      tag_257\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":18854:18879   */\n      swap2\n      pop\n        /* \"#utility.yul\":18893:18913   */\n      tag_504\n        /* \"#utility.yul\":18911:18912   */\n      dup4\n        /* \"#utility.yul\":18893:18913   */\n      tag_257\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":18888:18913   */\n      swap3\n      pop\n        /* \"#utility.yul\":18936:18937   */\n      dup3\n        /* \"#utility.yul\":18933:18934   */\n      dup3\n        /* \"#utility.yul\":18929:18938   */\n      add\n        /* \"#utility.yul\":18922:18938   */\n      swap1\n      pop\n        /* \"#utility.yul\":18957:18960   */\n      dup1\n        /* \"#utility.yul\":18954:18955   */\n      dup3\n        /* \"#utility.yul\":18951:18961   */\n      gt\n        /* \"#utility.yul\":18948:18984   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":18964:18982   */\n      tag_506\n      tag_301\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":18948:18984   */\n    tag_505:\n        /* \"#utility.yul\":18800:18991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18997:19177   */\n    tag_146:\n        /* \"#utility.yul\":19045:19122   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19042:19043   */\n      0x00\n        /* \"#utility.yul\":19035:19123   */\n      mstore\n        /* \"#utility.yul\":19142:19146   */\n      0x21\n        /* \"#utility.yul\":19139:19140   */\n      0x04\n        /* \"#utility.yul\":19132:19147   */\n      mstore\n        /* \"#utility.yul\":19166:19170   */\n      0x24\n        /* \"#utility.yul\":19163:19164   */\n      0x00\n        /* \"#utility.yul\":19156:19171   */\n      revert\n        /* \"#utility.yul\":19183:19301   */\n    tag_302:\n        /* \"#utility.yul\":19270:19294   */\n      tag_509\n        /* \"#utility.yul\":19288:19293   */\n      dup2\n        /* \"#utility.yul\":19270:19294   */\n      tag_254\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":19265:19268   */\n      dup3\n        /* \"#utility.yul\":19258:19295   */\n      mstore\n        /* \"#utility.yul\":19183:19301   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19307:19749   */\n    tag_197:\n        /* \"#utility.yul\":19456:19460   */\n      0x00\n        /* \"#utility.yul\":19494:19496   */\n      0x60\n        /* \"#utility.yul\":19483:19492   */\n      dup3\n        /* \"#utility.yul\":19479:19497   */\n      add\n        /* \"#utility.yul\":19471:19497   */\n      swap1\n      pop\n        /* \"#utility.yul\":19507:19578   */\n      tag_511\n        /* \"#utility.yul\":19575:19576   */\n      0x00\n        /* \"#utility.yul\":19564:19573   */\n      dup4\n        /* \"#utility.yul\":19560:19577   */\n      add\n        /* \"#utility.yul\":19551:19557   */\n      dup7\n        /* \"#utility.yul\":19507:19578   */\n      tag_302\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":19588:19660   */\n      tag_512\n        /* \"#utility.yul\":19656:19658   */\n      0x20\n        /* \"#utility.yul\":19645:19654   */\n      dup4\n        /* \"#utility.yul\":19641:19659   */\n      add\n        /* \"#utility.yul\":19632:19638   */\n      dup6\n        /* \"#utility.yul\":19588:19660   */\n      tag_262\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":19670:19742   */\n      tag_513\n        /* \"#utility.yul\":19738:19740   */\n      0x40\n        /* \"#utility.yul\":19727:19736   */\n      dup4\n        /* \"#utility.yul\":19723:19741   */\n      add\n        /* \"#utility.yul\":19714:19720   */\n      dup5\n        /* \"#utility.yul\":19670:19742   */\n      tag_262\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":19307:19749   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19755:19977   */\n    tag_202:\n        /* \"#utility.yul\":19848:19852   */\n      0x00\n        /* \"#utility.yul\":19886:19888   */\n      0x20\n        /* \"#utility.yul\":19875:19884   */\n      dup3\n        /* \"#utility.yul\":19871:19889   */\n      add\n        /* \"#utility.yul\":19863:19889   */\n      swap1\n      pop\n        /* \"#utility.yul\":19899:19970   */\n      tag_515\n        /* \"#utility.yul\":19967:19968   */\n      0x00\n        /* \"#utility.yul\":19956:19965   */\n      dup4\n        /* \"#utility.yul\":19952:19969   */\n      add\n        /* \"#utility.yul\":19943:19949   */\n      dup5\n        /* \"#utility.yul\":19899:19970   */\n      tag_302\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":19755:19977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a58d705dc4b11aad11379170d684ea87aae7a10ae03138ecb1e5e0a968831d0964736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1510": {
									"entryPoint": null,
									"id": 1510,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:7",
										"nodeType": "YulBlock",
										"src": "0:5231:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "140:152:7",
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:7",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nativeSrc": "150:88:7",
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nativeSrc": "150:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nativeSrc": "247:15:7",
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nativeSrc": "247:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nativeSrc": "271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nativeSrc": "271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nativeSrc": "326:152:7",
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:7",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nativeSrc": "336:88:7",
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nativeSrc": "336:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:7",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:15:7",
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nativeSrc": "433:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nativeSrc": "457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nativeSrc": "457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nativeSrc": "535:269:7",
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nativeSrc": "545:22:7",
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nativeSrc": "555:12:7",
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nativeSrc": "576:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nativeSrc": "602:12:7",
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:7",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:7",
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nativeSrc": "667:27:7",
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:7",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nativeSrc": "677:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nativeSrc": "626:26:7",
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nativeSrc": "623:81:7",
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nativeSrc": "756:42:7",
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nativeSrc": "770:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nativeSrc": "770:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nativeSrc": "740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nativeSrc": "717:38:7",
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nativeSrc": "714:84:7",
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:7",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:7",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nativeSrc": "864:87:7",
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nativeSrc": "874:11:7",
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:7",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nativeSrc": "895:14:7",
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nativeSrc": "895:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nativeSrc": "918:26:7",
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:7",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nativeSrc": "926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:7",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:7",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nativeSrc": "1001:49:7",
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nativeSrc": "1011:33:7",
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nativeSrc": "1025:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nativeSrc": "1021:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:7",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:7",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nativeSrc": "1109:54:7",
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nativeSrc": "1119:37:7",
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nativeSrc": "1140:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:7",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:7",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:7",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nativeSrc": "1245:317:7",
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nativeSrc": "1255:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nativeSrc": "1272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nativeSrc": "1311:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:7",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:7",
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nativeSrc": "1429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nativeSrc": "1477:30:7",
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nativeSrc": "1497:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nativeSrc": "1486:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nativeSrc": "1516:40:7",
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nativeSrc": "1536:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nativeSrc": "1526:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:7",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:7",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:7",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:7",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nativeSrc": "1613:32:7",
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nativeSrc": "1623:16:7",
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:7",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:7",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nativeSrc": "1683:28:7",
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nativeSrc": "1693:12:7",
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:7",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:7",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:7",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nativeSrc": "1777:82:7",
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nativeSrc": "1787:66:7",
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nativeSrc": "1827:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nativeSrc": "1818:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nativeSrc": "1800:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:7",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:7",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nativeSrc": "1912:28:7",
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nativeSrc": "1922:12:7",
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:7",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:7",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:7",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nativeSrc": "2022:193:7",
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nativeSrc": "2032:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nativeSrc": "2056:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nativeSrc": "2145:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nativeSrc": "2166:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nativeSrc": "2117:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nativeSrc": "2104:105:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nativeSrc": "2104:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:7",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:7",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:7",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nativeSrc": "2270:24:7",
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nativeSrc": "2280:8:7",
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:7",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:7",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nativeSrc": "2353:136:7",
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nativeSrc": "2363:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nativeSrc": "2377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nativeSrc": "2418:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:7",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nativeSrc": "2545:136:7",
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:7",
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nativeSrc": "2626:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nativeSrc": "2626:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nativeSrc": "2562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nativeSrc": "2555:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:7",
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nativeSrc": "2579:22:7",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nativeSrc": "2588:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:7",
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:7",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:7",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nativeSrc": "2766:464:7",
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:7",
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nativeSrc": "2806:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nativeSrc": "2822:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:7",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nativeSrc": "2906:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nativeSrc": "2892:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:7",
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:7",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nativeSrc": "3074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nativeSrc": "3071:49:7",
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nativeSrc": "3189:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nativeSrc": "3175:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nativeSrc": "3133:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nativeSrc": "3133:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nativeSrc": "2780:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nativeSrc": "2777:446:7",
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:7",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:7",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:7",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nativeSrc": "3299:54:7",
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nativeSrc": "3309:37:7",
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nativeSrc": "3330:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:7",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:7",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nativeSrc": "3410:118:7",
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nativeSrc": "3420:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nativeSrc": "3465:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nativeSrc": "3480:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nativeSrc": "3436:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nativeSrc": "3432:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:7",
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nativeSrc": "3507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:7",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:7",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:7",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nativeSrc": "3614:214:7",
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nativeSrc": "3747:37:7",
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nativeSrc": "3755:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nativeSrc": "3793:29:7",
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nativeSrc": "3810:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nativeSrc": "3801:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:7",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:7",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:7",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:7",
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nativeSrc": "3936:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nativeSrc": "3950:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:7",
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nativeSrc": "4074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nativeSrc": "4074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nativeSrc": "4041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nativeSrc": "4038:56:7",
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nativeSrc": "4104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nativeSrc": "4144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nativeSrc": "4118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nativeSrc": "4203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nativeSrc": "4203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nativeSrc": "4280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:7",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:7",
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:7",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:7",
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nativeSrc": "4413:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nativeSrc": "4401:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:7",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nativeSrc": "4451:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:7",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:7",
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nativeSrc": "4608:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nativeSrc": "4602:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nativeSrc": "4587:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nativeSrc": "4587:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nativeSrc": "4646:24:7",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nativeSrc": "4656:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:7",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:7",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nativeSrc": "4700:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nativeSrc": "4532:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nativeSrc": "4524:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:7",
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:7",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nativeSrc": "4554:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:7",
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nativeSrc": "4809:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nativeSrc": "4803:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:7",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nativeSrc": "4891:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nativeSrc": "4861:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nativeSrc": "4846:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nativeSrc": "4846:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nativeSrc": "4748:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nativeSrc": "4745:179:7",
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nativeSrc": "4954:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nativeSrc": "4950:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nativeSrc": "4937:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nativeSrc": "4937:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:7",
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:7",
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:7",
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:7",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nativeSrc": "5084:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nativeSrc": "5078:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nativeSrc": "5041:77:7",
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nativeSrc": "5144:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nativeSrc": "5131:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nativeSrc": "5131:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:7",
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nativeSrc": "4342:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nativeSrc": "4335:887:7",
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:7",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:7",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0xF4240 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5765696768746564566F74696E67000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5756000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x8 PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6275726E74000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP PUSH2 0x439 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BE JUMPI PUSH2 0x1BD PUSH2 0x167 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x220 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1E5 JUMP JUMPDEST PUSH2 0x22A DUP7 DUP4 PUSH2 0x1E5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26E PUSH2 0x269 PUSH2 0x264 DUP5 PUSH2 0x242 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x287 DUP4 PUSH2 0x254 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x293 DUP3 PUSH2 0x275 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1F1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x2BA DUP2 DUP5 DUP5 PUSH2 0x27E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DD JUMPI PUSH2 0x2D2 PUSH0 DUP3 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x322 JUMPI PUSH2 0x2F3 DUP2 PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x2FC DUP5 PUSH2 0x1D6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x30B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x31F PUSH2 0x317 DUP6 PUSH2 0x1D6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2BF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x342 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x327 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x35A DUP4 DUP4 PUSH2 0x333 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x373 DUP3 PUSH2 0x130 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38C JUMPI PUSH2 0x38B PUSH2 0x13A JUMP JUMPDEST JUMPDEST PUSH2 0x396 DUP3 SLOAD PUSH2 0x194 JUMP JUMPDEST PUSH2 0x3A1 DUP3 DUP3 DUP6 PUSH2 0x2E1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3D2 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x3C0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3CA DUP6 DUP3 PUSH2 0x34F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3E0 DUP7 PUSH2 0x1C4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x407 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3E2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x424 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x420 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x333 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1DD3 DUP1 PUSH2 0x446 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73B2E80E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x976B3113 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x976B3113 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x33E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x73B2E80E EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8615D855 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x943E8216 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A2 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x27E235E3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH2 0x474 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH2 0x93C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x37D SWAP1 PUSH2 0x1982 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A9 SWAP1 PUSH2 0x1982 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x408 PUSH2 0xBB6 JUMP JUMPDEST SWAP1 POP PUSH2 0x415 DUP2 DUP6 DUP6 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x433 PUSH2 0xBB6 JUMP JUMPDEST SWAP1 POP PUSH2 0x440 DUP6 DUP3 DUP6 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x44B DUP6 DUP6 DUP6 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB1327A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x500 PUSH2 0x420 JUMP JUMPDEST LT PUSH2 0x537 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCBE2483100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x597 CALLER PUSH1 0x64 PUSH2 0xD51 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x606 CALLER PUSH2 0x599 JUMP JUMPDEST SUB PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8439960D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x645 PUSH2 0x420 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x689 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x589A495200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x680 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP5 DUP5 DUP3 PUSH1 0x2 ADD SWAP2 DUP3 PUSH2 0x6BD SWAP3 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP DUP3 DUP2 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6F8 JUMPI PUSH2 0x6F7 PUSH2 0x1CB3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP1 PUSH1 0x8 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x74F JUMPI PUSH1 0x40 MLOAD PUSH32 0x66B6CB4A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x764 CALLER DUP3 PUSH0 ADD PUSH2 0xDD0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x7C9A1CF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7A5 CALLER PUSH2 0x599 JUMP JUMPDEST SUB PUSH2 0x7DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8439960D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F1 CALLER DUP3 PUSH0 ADD PUSH2 0xDFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x7FB CALLER PUSH2 0x599 JUMP JUMPDEST DUP2 PUSH1 0x6 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x80D SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x827 JUMPI PUSH2 0x826 PUSH2 0x1D13 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x83A JUMPI PUSH2 0x839 PUSH2 0x1D13 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x866 JUMPI PUSH2 0x848 CALLER PUSH2 0x599 JUMP JUMPDEST DUP2 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x85A SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x87A JUMPI PUSH2 0x879 PUSH2 0x1D13 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x88D JUMPI PUSH2 0x88C PUSH2 0x1D13 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x8B9 JUMPI PUSH2 0x89B CALLER PUSH2 0x599 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8DC JUMP JUMPDEST PUSH2 0x8C2 CALLER PUSH2 0x599 JUMP JUMPDEST DUP2 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8D4 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 PUSH1 0x7 ADD SLOAD DUP2 PUSH1 0x6 ADD SLOAD LT PUSH2 0x937 JUMPI DUP1 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x919 JUMPI PUSH1 0x1 DUP2 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x94B SWAP1 PUSH2 0x1982 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x977 SWAP1 PUSH2 0x1982 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x999 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D4 PUSH2 0x1311 JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9E9 JUMPI PUSH2 0x9E8 PUSH2 0x1CB3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xA0E DUP4 PUSH0 ADD PUSH2 0xE2A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xA22 SWAP1 PUSH2 0x1982 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA4E SWAP1 PUSH2 0x1982 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA99 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA70 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA99 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA7C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x6 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x7 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x8 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB16 PUSH2 0xBB6 JUMP JUMPDEST SWAP1 POP PUSH2 0xB23 DUP2 DUP6 DUP6 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBCA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE49 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBDA DUP5 DUP5 PUSH2 0xB34 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC5B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC4C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC43 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE49 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC8 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD41 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD38 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD4C DUP4 DUP4 DUP4 PUSH2 0x1018 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDCC PUSH0 DUP4 DUP4 PUSH2 0x1018 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDF5 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE22 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1251 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE38 DUP4 PUSH0 ADD PUSH2 0x12B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEB9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF29 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1012 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1009 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1068 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x105C SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1136 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10F1 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11C7 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x125C DUP4 DUP4 PUSH2 0x1231 JUMP JUMPDEST PUSH2 0x12AE JUMPI DUP3 PUSH0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x12B2 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1305 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x12F1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x139C DUP3 PUSH2 0x135A JUMP JUMPDEST PUSH2 0x13A6 DUP2 DUP6 PUSH2 0x1364 JUMP JUMPDEST SWAP4 POP PUSH2 0x13B6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x13BF DUP2 PUSH2 0x1382 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13E2 DUP2 DUP5 PUSH2 0x1392 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x141B DUP3 PUSH2 0x13F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x142B DUP2 PUSH2 0x1411 JUMP JUMPDEST DUP2 EQ PUSH2 0x1435 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1446 DUP2 PUSH2 0x1422 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145E DUP2 PUSH2 0x144C JUMP JUMPDEST DUP2 EQ PUSH2 0x1468 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1479 DUP2 PUSH2 0x1455 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1495 JUMPI PUSH2 0x1494 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14A2 DUP6 DUP3 DUP7 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14B3 DUP6 DUP3 DUP7 ADD PUSH2 0x146B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x14BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14EA PUSH0 DUP4 ADD DUP5 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F9 DUP2 PUSH2 0x144C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1512 PUSH0 DUP4 ADD DUP5 PUSH2 0x14F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x152F JUMPI PUSH2 0x152E PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x153C DUP7 DUP3 DUP8 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x154D DUP7 DUP3 DUP8 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x155E DUP7 DUP3 DUP8 ADD PUSH2 0x146B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157D JUMPI PUSH2 0x157C PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x158A DUP5 DUP3 DUP6 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A8 DUP2 PUSH2 0x1593 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C1 PUSH0 DUP4 ADD DUP5 PUSH2 0x159F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15E8 JUMPI PUSH2 0x15E7 PUSH2 0x15C7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1605 JUMPI PUSH2 0x1604 PUSH2 0x15CB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1621 JUMPI PUSH2 0x1620 PUSH2 0x15CF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163F JUMPI PUSH2 0x163E PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH2 0x1668 DUP7 DUP3 DUP8 ADD PUSH2 0x15D3 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x167B DUP7 DUP3 DUP8 ADD PUSH2 0x146B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1691 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A2 DUP2 PUSH2 0x1685 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16CB DUP6 DUP3 DUP7 ADD PUSH2 0x146B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16DC DUP6 DUP3 DUP7 ADD PUSH2 0x1694 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16FB JUMPI PUSH2 0x16FA PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1708 DUP5 DUP3 DUP6 ADD PUSH2 0x146B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1743 DUP2 PUSH2 0x1411 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1754 DUP4 DUP4 PUSH2 0x173A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1776 DUP3 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x1780 DUP2 DUP6 PUSH2 0x171B JUMP JUMPDEST SWAP4 POP PUSH2 0x178B DUP4 PUSH2 0x172B JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17BB JUMPI DUP2 MLOAD PUSH2 0x17A2 DUP9 DUP3 PUSH2 0x1749 JUMP JUMPDEST SWAP8 POP PUSH2 0x17AD DUP4 PUSH2 0x1760 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x178E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17E2 DUP3 PUSH2 0x135A JUMP JUMPDEST PUSH2 0x17EC DUP2 DUP6 PUSH2 0x17C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x17FC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x1805 DUP2 PUSH2 0x1382 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1819 DUP2 PUSH2 0x144C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1828 DUP2 PUSH2 0x14BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1849 DUP3 DUP3 PUSH2 0x176C JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1863 DUP3 DUP3 PUSH2 0x17D8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1878 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1810 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x188B PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x1810 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x189E PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x1810 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x18B1 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x1810 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x18C4 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x1810 JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x18D7 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x181F JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x18EC PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x181F JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x190F DUP2 DUP5 PUSH2 0x182E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x192D JUMPI PUSH2 0x192C PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x193A DUP6 DUP3 DUP7 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x194B DUP6 DUP3 DUP7 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1999 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19AC JUMPI PUSH2 0x19AB PUSH2 0x1955 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A45 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x1A4F DUP7 DUP4 PUSH2 0x1A0A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A8A PUSH2 0x1A85 PUSH2 0x1A80 DUP5 PUSH2 0x144C JUMP JUMPDEST PUSH2 0x1A67 JUMP JUMPDEST PUSH2 0x144C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA3 DUP4 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0x1AB7 PUSH2 0x1AAF DUP3 PUSH2 0x1A91 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1A16 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1ACB PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x1AD6 DUP2 DUP5 DUP5 PUSH2 0x1A9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AF9 JUMPI PUSH2 0x1AEE PUSH0 DUP3 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1ADC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B3E JUMPI PUSH2 0x1B0F DUP2 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x1B18 DUP5 PUSH2 0x19FB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B27 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1B3B PUSH2 0x1B33 DUP6 PUSH2 0x19FB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1ADB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1B43 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B76 DUP4 DUP4 PUSH2 0x1B4F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B90 DUP4 DUP4 PUSH2 0x19B2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x19BC JUMP JUMPDEST JUMPDEST PUSH2 0x1BB3 DUP3 SLOAD PUSH2 0x1982 JUMP JUMPDEST PUSH2 0x1BBE DUP3 DUP3 DUP6 PUSH2 0x1AFD JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BEB JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1BD9 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x1BE3 DUP6 DUP3 PUSH2 0x1B6B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1C4A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1BF9 DUP7 PUSH2 0x19E9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C20 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BFB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1C3D JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x1C39 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1B4F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C8A DUP3 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C95 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CAD JUMPI PUSH2 0x1CAC PUSH2 0x1C53 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CEA DUP3 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF5 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D0D JUMPI PUSH2 0x1D0C PUSH2 0x1C53 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D49 DUP2 PUSH2 0x1411 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D62 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D40 JUMP JUMPDEST PUSH2 0x1D6F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0x1D7C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14F0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D97 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 DUP14 PUSH17 0x5DC4B11AAD11379170D684EA87AAE7A10A 0xE0 BALANCE CODESIZE 0xEC 0xB1 0xE5 0xE0 0xA9 PUSH9 0x831D0964736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "279:4403:6:-:0;;;1277:9;1250:36;;1545:173;;;;;;;;;;1896:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1600:22:6::1;1625:6;:13;;;;;;;;;;;;;;;;;;;;;;;;1600:38;;1649:28;;;;;;;;;;;;;;;;::::0;:8:::1;:18;;:28;;;;;;:::i;:::-;;1706:4;1688:8;:15;;;:22;;;;;;;;;;;;;;;;;;1589:129;279:4403:::0;;7:99:7;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;279:4403:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_add_838": {
									"entryPoint": 4689,
									"id": 838,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_approve_542": {
									"entryPoint": 3005,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 3657,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_contains_941": {
									"entryPoint": 4657,
									"id": 941,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_491": {
									"entryPoint": 3409,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 2998,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 3023,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 3169,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 4120,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_values_986": {
									"entryPoint": 4792,
									"id": 986,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@add_1138": {
									"entryPoint": 3581,
									"id": 1138,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_278": {
									"entryPoint": 2868,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1022,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1433,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balances_1458": {
									"entryPoint": 1111,
									"id": 1458,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_1543": {
									"entryPoint": 1140,
									"id": 1543,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contains_1192": {
									"entryPoint": 3536,
									"id": 1192,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createIssue_1596": {
									"entryPoint": 1531,
									"id": 1596,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1132,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getIssue_1635": {
									"entryPoint": 2508,
									"id": 1635,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasClaimed_1462": {
									"entryPoint": 1502,
									"id": 1462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxSupply_1465": {
									"entryPoint": 2862,
									"id": 1465,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 878,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 2364,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 1056,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1065,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 2828,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@values_1264": {
									"entryPoint": 3626,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@vote_1761": {
									"entryPoint": 1763,
									"id": 1761,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_Votes_$1454": {
									"entryPoint": 5780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 5587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_calldata_ptrt_uint256": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_enum$_Votes_$1454": {
									"entryPoint": 5800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 5946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 6175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 6104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_IssueView_$1450_memory_ptr_to_t_struct$_IssueView_$1450_memory_ptr_fromStack": {
									"entryPoint": 6190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7503,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_IssueView_$1450_memory_ptr__to_t_struct$_IssueView_$1450_memory_ptr__fromStack_reversed": {
									"entryPoint": 6391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 6633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_calldata_ptr": {
									"entryPoint": 6578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 6088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 6909,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 6875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 6768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4980,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 7019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 6991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7443,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7347,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6588,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 6801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5579,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5102,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5098,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 6666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 6979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 6678,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 6810,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_Votes_$1454": {
									"entryPoint": 5765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19980:7",
										"nodeType": "YulBlock",
										"src": "0:19980:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4382:263:7",
													"nodeType": "YulBlock",
													"src": "4382:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4428:83:7",
																"nodeType": "YulBlock",
																"src": "4428:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4430:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4430:77:7"
																			},
																			"nativeSrc": "4430:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4430:79:7"
																		},
																		"nativeSrc": "4430:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4430:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4403:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4403:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4412:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4412:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4399:3:7"
																		},
																		"nativeSrc": "4399:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4399:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4424:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4395:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4395:3:7"
																},
																"nativeSrc": "4395:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4395:32:7"
															},
															"nativeSrc": "4392:119:7",
															"nodeType": "YulIf",
															"src": "4392:119:7"
														},
														{
															"nativeSrc": "4521:117:7",
															"nodeType": "YulBlock",
															"src": "4521:117:7",
															"statements": [
																{
																	"nativeSrc": "4536:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4536:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4550:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4550:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4540:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4540:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:7"
																				},
																				"nativeSrc": "4596:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4575:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:7"
																		},
																		"nativeSrc": "4575:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4565:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4316:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4352:9:7",
														"nodeType": "YulTypedName",
														"src": "4352:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4363:7:7",
														"nodeType": "YulTypedName",
														"src": "4363:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4375:6:7",
														"nodeType": "YulTypedName",
														"src": "4375:6:7",
														"type": ""
													}
												],
												"src": "4316:329:7"
											},
											{
												"body": {
													"nativeSrc": "4694:43:7",
													"nodeType": "YulBlock",
													"src": "4694:43:7",
													"statements": [
														{
															"nativeSrc": "4704:27:7",
															"nodeType": "YulAssignment",
															"src": "4704:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:7"
																},
																"nativeSrc": "4715:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:7",
														"nodeType": "YulTypedName",
														"src": "4676:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:7",
														"nodeType": "YulTypedName",
														"src": "4686:7:7",
														"type": ""
													}
												],
												"src": "4651:86:7"
											},
											{
												"body": {
													"nativeSrc": "4804:51:7",
													"nodeType": "YulBlock",
													"src": "4804:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:7"
																		},
																		"nativeSrc": "4826:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:7"
																},
																"nativeSrc": "4814:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:7"
															},
															"nativeSrc": "4814:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:7",
														"nodeType": "YulTypedName",
														"src": "4792:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:7",
														"nodeType": "YulTypedName",
														"src": "4799:3:7",
														"type": ""
													}
												],
												"src": "4743:112:7"
											},
											{
												"body": {
													"nativeSrc": "4955:120:7",
													"nodeType": "YulBlock",
													"src": "4955:120:7",
													"statements": [
														{
															"nativeSrc": "4965:26:7",
															"nodeType": "YulAssignment",
															"src": "4965:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:7"
																},
																"nativeSrc": "4973:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:7"
																		},
																		"nativeSrc": "5050:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:7"
																},
																"nativeSrc": "5001:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:7"
															},
															"nativeSrc": "5001:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:7",
														"nodeType": "YulTypedName",
														"src": "4927:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:7",
														"nodeType": "YulTypedName",
														"src": "4939:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:7",
														"nodeType": "YulTypedName",
														"src": "4950:4:7",
														"type": ""
													}
												],
												"src": "4861:214:7"
											},
											{
												"body": {
													"nativeSrc": "5170:28:7",
													"nodeType": "YulBlock",
													"src": "5170:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5187:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5187:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5190:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5190:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5180:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5180:6:7"
																},
																"nativeSrc": "5180:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5180:12:7"
															},
															"nativeSrc": "5180:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5180:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5081:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5081:117:7"
											},
											{
												"body": {
													"nativeSrc": "5293:28:7",
													"nodeType": "YulBlock",
													"src": "5293:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5310:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5310:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5313:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5313:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5303:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5303:6:7"
																},
																"nativeSrc": "5303:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5303:12:7"
															},
															"nativeSrc": "5303:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5303:12:7"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "5204:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5204:117:7"
											},
											{
												"body": {
													"nativeSrc": "5416:28:7",
													"nodeType": "YulBlock",
													"src": "5416:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5433:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5433:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5436:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5436:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5426:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5426:6:7"
																},
																"nativeSrc": "5426:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5426:12:7"
															},
															"nativeSrc": "5426:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5426:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5327:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5327:117:7"
											},
											{
												"body": {
													"nativeSrc": "5539:478:7",
													"nodeType": "YulBlock",
													"src": "5539:478:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5588:83:7",
																"nodeType": "YulBlock",
																"src": "5588:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5590:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5590:77:7"
																			},
																			"nativeSrc": "5590:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5590:79:7"
																		},
																		"nativeSrc": "5590:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5590:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5567:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5567:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5575:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5575:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5563:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5563:3:7"
																				},
																				"nativeSrc": "5563:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5563:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5582:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5582:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5559:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5559:3:7"
																		},
																		"nativeSrc": "5559:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5559:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5552:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5552:6:7"
																},
																"nativeSrc": "5552:35:7",
																"nodeType": "YulFunctionCall",
																"src": "5552:35:7"
															},
															"nativeSrc": "5549:122:7",
															"nodeType": "YulIf",
															"src": "5549:122:7"
														},
														{
															"nativeSrc": "5680:30:7",
															"nodeType": "YulAssignment",
															"src": "5680:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5703:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5703:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5690:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "5690:12:7"
																},
																"nativeSrc": "5690:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5690:20:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5680:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5680:6:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5753:83:7",
																"nodeType": "YulBlock",
																"src": "5753:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "5755:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5755:77:7"
																			},
																			"nativeSrc": "5755:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5755:79:7"
																		},
																		"nativeSrc": "5755:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5755:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5725:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5725:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5733:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5733:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5722:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5722:2:7"
																},
																"nativeSrc": "5722:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5722:30:7"
															},
															"nativeSrc": "5719:117:7",
															"nodeType": "YulIf",
															"src": "5719:117:7"
														},
														{
															"nativeSrc": "5845:29:7",
															"nodeType": "YulAssignment",
															"src": "5845:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5861:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5861:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5869:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5869:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5857:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5857:3:7"
																},
																"nativeSrc": "5857:17:7",
																"nodeType": "YulFunctionCall",
																"src": "5857:17:7"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "5845:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5845:8:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5928:83:7",
																"nodeType": "YulBlock",
																"src": "5928:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5930:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5930:77:7"
																			},
																			"nativeSrc": "5930:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5930:79:7"
																		},
																		"nativeSrc": "5930:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5930:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "5893:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5893:8:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "5907:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5907:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5915:4:7",
																						"nodeType": "YulLiteral",
																						"src": "5915:4:7",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5903:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5903:3:7"
																				},
																				"nativeSrc": "5903:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5903:17:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5889:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5889:3:7"
																		},
																		"nativeSrc": "5889:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5889:32:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5923:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5923:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5886:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5886:2:7"
																},
																"nativeSrc": "5886:41:7",
																"nodeType": "YulFunctionCall",
																"src": "5886:41:7"
															},
															"nativeSrc": "5883:128:7",
															"nodeType": "YulIf",
															"src": "5883:128:7"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "5464:553:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5506:6:7",
														"nodeType": "YulTypedName",
														"src": "5506:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5514:3:7",
														"nodeType": "YulTypedName",
														"src": "5514:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "5522:8:7",
														"nodeType": "YulTypedName",
														"src": "5522:8:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5532:6:7",
														"nodeType": "YulTypedName",
														"src": "5532:6:7",
														"type": ""
													}
												],
												"src": "5464:553:7"
											},
											{
												"body": {
													"nativeSrc": "6126:571:7",
													"nodeType": "YulBlock",
													"src": "6126:571:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6172:83:7",
																"nodeType": "YulBlock",
																"src": "6172:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6174:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6174:77:7"
																			},
																			"nativeSrc": "6174:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6174:79:7"
																		},
																		"nativeSrc": "6174:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6174:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6147:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6147:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6156:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6156:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6143:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6143:3:7"
																		},
																		"nativeSrc": "6143:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6143:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6168:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6139:3:7"
																},
																"nativeSrc": "6139:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6139:32:7"
															},
															"nativeSrc": "6136:119:7",
															"nodeType": "YulIf",
															"src": "6136:119:7"
														},
														{
															"nativeSrc": "6265:297:7",
															"nodeType": "YulBlock",
															"src": "6265:297:7",
															"statements": [
																{
																	"nativeSrc": "6280:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6280:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6311:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6311:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6322:1:7",
																						"nodeType": "YulLiteral",
																						"src": "6322:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6307:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6307:3:7"
																				},
																				"nativeSrc": "6307:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6307:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6294:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "6294:12:7"
																		},
																		"nativeSrc": "6294:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6294:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6284:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6284:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6372:83:7",
																		"nodeType": "YulBlock",
																		"src": "6372:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6374:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "6374:77:7"
																					},
																					"nativeSrc": "6374:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6374:79:7"
																				},
																				"nativeSrc": "6374:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6374:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6344:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6344:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6352:18:7",
																				"nodeType": "YulLiteral",
																				"src": "6352:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6341:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6341:2:7"
																		},
																		"nativeSrc": "6341:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6341:30:7"
																	},
																	"nativeSrc": "6338:117:7",
																	"nodeType": "YulIf",
																	"src": "6338:117:7"
																},
																{
																	"nativeSrc": "6469:83:7",
																	"nodeType": "YulAssignment",
																	"src": "6469:83:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6524:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6524:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6535:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6535:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6520:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:7"
																				},
																				"nativeSrc": "6520:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6520:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6544:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6544:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "6487:32:7",
																			"nodeType": "YulIdentifier",
																			"src": "6487:32:7"
																		},
																		"nativeSrc": "6487:65:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6487:65:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6469:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6469:6:7"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "6477:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6477:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6572:118:7",
															"nodeType": "YulBlock",
															"src": "6572:118:7",
															"statements": [
																{
																	"nativeSrc": "6587:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6587:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6601:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6601:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6591:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6591:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6617:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6617:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6652:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6652:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6663:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6663:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6648:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6648:3:7"
																				},
																				"nativeSrc": "6648:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6648:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6672:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6672:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6627:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6627:20:7"
																		},
																		"nativeSrc": "6627:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6617:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6617:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptrt_uint256",
												"nativeSrc": "6023:674:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6080:9:7",
														"nodeType": "YulTypedName",
														"src": "6080:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6091:7:7",
														"nodeType": "YulTypedName",
														"src": "6091:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6103:6:7",
														"nodeType": "YulTypedName",
														"src": "6103:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6111:6:7",
														"nodeType": "YulTypedName",
														"src": "6111:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6119:6:7",
														"nodeType": "YulTypedName",
														"src": "6119:6:7",
														"type": ""
													}
												],
												"src": "6023:674:7"
											},
											{
												"body": {
													"nativeSrc": "6756:56:7",
													"nodeType": "YulBlock",
													"src": "6756:56:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6790:16:7",
																"nodeType": "YulBlock",
																"src": "6790:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6799:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6799:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6802:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6802:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6792:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6792:6:7"
																			},
																			"nativeSrc": "6792:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6792:12:7"
																		},
																		"nativeSrc": "6792:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6792:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6779:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6779:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6786:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6786:1:7",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6776:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6776:2:7"
																		},
																		"nativeSrc": "6776:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6776:12:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6769:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6769:6:7"
																},
																"nativeSrc": "6769:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6769:20:7"
															},
															"nativeSrc": "6766:40:7",
															"nodeType": "YulIf",
															"src": "6766:40:7"
														}
													]
												},
												"name": "validator_revert_t_enum$_Votes_$1454",
												"nativeSrc": "6703:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6749:5:7",
														"nodeType": "YulTypedName",
														"src": "6749:5:7",
														"type": ""
													}
												],
												"src": "6703:109:7"
											},
											{
												"body": {
													"nativeSrc": "6880:97:7",
													"nodeType": "YulBlock",
													"src": "6880:97:7",
													"statements": [
														{
															"nativeSrc": "6890:29:7",
															"nodeType": "YulAssignment",
															"src": "6890:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6912:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6912:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6899:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "6899:12:7"
																},
																"nativeSrc": "6899:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6899:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6890:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6890:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6965:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6965:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Votes_$1454",
																	"nativeSrc": "6928:36:7",
																	"nodeType": "YulIdentifier",
																	"src": "6928:36:7"
																},
																"nativeSrc": "6928:43:7",
																"nodeType": "YulFunctionCall",
																"src": "6928:43:7"
															},
															"nativeSrc": "6928:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "6928:43:7"
														}
													]
												},
												"name": "abi_decode_t_enum$_Votes_$1454",
												"nativeSrc": "6818:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6858:6:7",
														"nodeType": "YulTypedName",
														"src": "6858:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6866:3:7",
														"nodeType": "YulTypedName",
														"src": "6866:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6874:5:7",
														"nodeType": "YulTypedName",
														"src": "6874:5:7",
														"type": ""
													}
												],
												"src": "6818:159:7"
											},
											{
												"body": {
													"nativeSrc": "7076:401:7",
													"nodeType": "YulBlock",
													"src": "7076:401:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7122:83:7",
																"nodeType": "YulBlock",
																"src": "7122:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7124:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7124:77:7"
																			},
																			"nativeSrc": "7124:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7124:79:7"
																		},
																		"nativeSrc": "7124:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7124:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7097:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7097:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7106:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7106:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7093:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7093:3:7"
																		},
																		"nativeSrc": "7093:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7093:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7118:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7118:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7089:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:7"
																},
																"nativeSrc": "7089:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7089:32:7"
															},
															"nativeSrc": "7086:119:7",
															"nodeType": "YulIf",
															"src": "7086:119:7"
														},
														{
															"nativeSrc": "7215:117:7",
															"nodeType": "YulBlock",
															"src": "7215:117:7",
															"statements": [
																{
																	"nativeSrc": "7230:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7230:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7244:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7244:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7234:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7234:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7259:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7259:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7294:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7294:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7305:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7305:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7290:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7290:3:7"
																				},
																				"nativeSrc": "7290:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7290:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7314:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7314:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7269:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7269:20:7"
																		},
																		"nativeSrc": "7269:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7269:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7259:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7259:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7342:128:7",
															"nodeType": "YulBlock",
															"src": "7342:128:7",
															"statements": [
																{
																	"nativeSrc": "7357:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7357:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7371:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7371:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7361:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7361:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7387:73:7",
																	"nodeType": "YulAssignment",
																	"src": "7387:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7432:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7432:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7443:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7443:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7428:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7428:3:7"
																				},
																				"nativeSrc": "7428:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7428:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7452:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7452:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Votes_$1454",
																			"nativeSrc": "7397:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "7397:30:7"
																		},
																		"nativeSrc": "7397:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7397:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7387:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7387:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_enum$_Votes_$1454",
												"nativeSrc": "6983:494:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7038:9:7",
														"nodeType": "YulTypedName",
														"src": "7038:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7049:7:7",
														"nodeType": "YulTypedName",
														"src": "7049:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7061:6:7",
														"nodeType": "YulTypedName",
														"src": "7061:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7069:6:7",
														"nodeType": "YulTypedName",
														"src": "7069:6:7",
														"type": ""
													}
												],
												"src": "6983:494:7"
											},
											{
												"body": {
													"nativeSrc": "7549:263:7",
													"nodeType": "YulBlock",
													"src": "7549:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7595:83:7",
																"nodeType": "YulBlock",
																"src": "7595:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7597:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7597:77:7"
																			},
																			"nativeSrc": "7597:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7597:79:7"
																		},
																		"nativeSrc": "7597:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7597:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7570:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7570:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7579:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7579:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7566:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7566:3:7"
																		},
																		"nativeSrc": "7566:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7566:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7591:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7591:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7562:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7562:3:7"
																},
																"nativeSrc": "7562:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7562:32:7"
															},
															"nativeSrc": "7559:119:7",
															"nodeType": "YulIf",
															"src": "7559:119:7"
														},
														{
															"nativeSrc": "7688:117:7",
															"nodeType": "YulBlock",
															"src": "7688:117:7",
															"statements": [
																{
																	"nativeSrc": "7703:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7703:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7717:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7717:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7707:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7707:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7732:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7732:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7767:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7767:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7778:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7778:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7763:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7763:3:7"
																				},
																				"nativeSrc": "7763:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7763:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7787:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7787:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7742:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7742:20:7"
																		},
																		"nativeSrc": "7742:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7742:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7732:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7732:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7483:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7519:9:7",
														"nodeType": "YulTypedName",
														"src": "7519:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7530:7:7",
														"nodeType": "YulTypedName",
														"src": "7530:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7542:6:7",
														"nodeType": "YulTypedName",
														"src": "7542:6:7",
														"type": ""
													}
												],
												"src": "7483:329:7"
											},
											{
												"body": {
													"nativeSrc": "7892:40:7",
													"nodeType": "YulBlock",
													"src": "7892:40:7",
													"statements": [
														{
															"nativeSrc": "7903:22:7",
															"nodeType": "YulAssignment",
															"src": "7903:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7919:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7919:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7913:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7913:5:7"
																},
																"nativeSrc": "7913:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7913:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7903:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7903:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "7818:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7875:5:7",
														"nodeType": "YulTypedName",
														"src": "7875:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7885:6:7",
														"nodeType": "YulTypedName",
														"src": "7885:6:7",
														"type": ""
													}
												],
												"src": "7818:114:7"
											},
											{
												"body": {
													"nativeSrc": "8039:73:7",
													"nodeType": "YulBlock",
													"src": "8039:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8056:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8056:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8061:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8061:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8049:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8049:6:7"
																},
																"nativeSrc": "8049:19:7",
																"nodeType": "YulFunctionCall",
																"src": "8049:19:7"
															},
															"nativeSrc": "8049:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "8049:19:7"
														},
														{
															"nativeSrc": "8077:29:7",
															"nodeType": "YulAssignment",
															"src": "8077:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8096:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8096:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8101:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8101:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8092:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8092:3:7"
																},
																"nativeSrc": "8092:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8092:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8077:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8077:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "7938:174:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8011:3:7",
														"nodeType": "YulTypedName",
														"src": "8011:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8016:6:7",
														"nodeType": "YulTypedName",
														"src": "8016:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8027:11:7",
														"nodeType": "YulTypedName",
														"src": "8027:11:7",
														"type": ""
													}
												],
												"src": "7938:174:7"
											},
											{
												"body": {
													"nativeSrc": "8190:60:7",
													"nodeType": "YulBlock",
													"src": "8190:60:7",
													"statements": [
														{
															"nativeSrc": "8200:11:7",
															"nodeType": "YulAssignment",
															"src": "8200:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "8208:3:7",
																"nodeType": "YulIdentifier",
																"src": "8208:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8200:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8200:4:7"
																}
															]
														},
														{
															"nativeSrc": "8221:22:7",
															"nodeType": "YulAssignment",
															"src": "8221:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8233:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8233:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8238:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8238:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8229:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8229:3:7"
																},
																"nativeSrc": "8229:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8229:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8221:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8221:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8118:132:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8177:3:7",
														"nodeType": "YulTypedName",
														"src": "8177:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "8185:4:7",
														"nodeType": "YulTypedName",
														"src": "8185:4:7",
														"type": ""
													}
												],
												"src": "8118:132:7"
											},
											{
												"body": {
													"nativeSrc": "8311:53:7",
													"nodeType": "YulBlock",
													"src": "8311:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8328:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8328:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8351:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8351:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8333:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8333:17:7"
																		},
																		"nativeSrc": "8333:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8333:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8321:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8321:6:7"
																},
																"nativeSrc": "8321:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8321:37:7"
															},
															"nativeSrc": "8321:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8321:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "8256:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8299:5:7",
														"nodeType": "YulTypedName",
														"src": "8299:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8306:3:7",
														"nodeType": "YulTypedName",
														"src": "8306:3:7",
														"type": ""
													}
												],
												"src": "8256:108:7"
											},
											{
												"body": {
													"nativeSrc": "8450:99:7",
													"nodeType": "YulBlock",
													"src": "8450:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8494:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8494:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8502:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8502:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "8460:33:7",
																	"nodeType": "YulIdentifier",
																	"src": "8460:33:7"
																},
																"nativeSrc": "8460:46:7",
																"nodeType": "YulFunctionCall",
																"src": "8460:46:7"
															},
															"nativeSrc": "8460:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "8460:46:7"
														},
														{
															"nativeSrc": "8515:28:7",
															"nodeType": "YulAssignment",
															"src": "8515:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8533:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8533:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8538:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8538:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8529:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:7"
																},
																"nativeSrc": "8529:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8529:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "8515:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8515:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "8370:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "8423:6:7",
														"nodeType": "YulTypedName",
														"src": "8423:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8431:3:7",
														"nodeType": "YulTypedName",
														"src": "8431:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "8439:10:7",
														"nodeType": "YulTypedName",
														"src": "8439:10:7",
														"type": ""
													}
												],
												"src": "8370:179:7"
											},
											{
												"body": {
													"nativeSrc": "8630:38:7",
													"nodeType": "YulBlock",
													"src": "8630:38:7",
													"statements": [
														{
															"nativeSrc": "8640:22:7",
															"nodeType": "YulAssignment",
															"src": "8640:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "8652:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8652:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8657:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8657:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8648:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8648:3:7"
																},
																"nativeSrc": "8648:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8648:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "8640:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8640:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8555:113:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "8617:3:7",
														"nodeType": "YulTypedName",
														"src": "8617:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "8625:4:7",
														"nodeType": "YulTypedName",
														"src": "8625:4:7",
														"type": ""
													}
												],
												"src": "8555:113:7"
											},
											{
												"body": {
													"nativeSrc": "8818:598:7",
													"nodeType": "YulBlock",
													"src": "8818:598:7",
													"statements": [
														{
															"nativeSrc": "8828:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8828:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8890:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8890:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "8842:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "8842:47:7"
																},
																"nativeSrc": "8842:54:7",
																"nodeType": "YulFunctionCall",
																"src": "8842:54:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8832:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8832:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8905:83:7",
															"nodeType": "YulAssignment",
															"src": "8905:83:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8976:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8976:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8981:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8981:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "8912:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "8912:63:7"
																},
																"nativeSrc": "8912:76:7",
																"nodeType": "YulFunctionCall",
																"src": "8912:76:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8905:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8905:3:7"
																}
															]
														},
														{
															"nativeSrc": "8997:71:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8997:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9062:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9062:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "9012:49:7",
																	"nodeType": "YulIdentifier",
																	"src": "9012:49:7"
																},
																"nativeSrc": "9012:56:7",
																"nodeType": "YulFunctionCall",
																"src": "9012:56:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "9001:7:7",
																	"nodeType": "YulTypedName",
																	"src": "9001:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9077:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9077:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "9091:7:7",
																"nodeType": "YulIdentifier",
																"src": "9091:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "9081:6:7",
																	"nodeType": "YulTypedName",
																	"src": "9081:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9167:224:7",
																"nodeType": "YulBlock",
																"src": "9167:224:7",
																"statements": [
																	{
																		"nativeSrc": "9181:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9181:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9208:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9208:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:7"
																			},
																			"nativeSrc": "9202:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "9185:13:7",
																				"nodeType": "YulTypedName",
																				"src": "9185:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9228:70:7",
																		"nodeType": "YulAssignment",
																		"src": "9228:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "9279:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "9279:13:7"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "9294:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9294:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "9235:43:7",
																				"nodeType": "YulIdentifier",
																				"src": "9235:43:7"
																			},
																			"nativeSrc": "9235:63:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9235:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "9228:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9228:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9311:70:7",
																		"nodeType": "YulAssignment",
																		"src": "9311:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9374:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9374:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "9321:52:7",
																				"nodeType": "YulIdentifier",
																				"src": "9321:52:7"
																			},
																			"nativeSrc": "9321:60:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9321:60:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "9311:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9311:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "9129:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9129:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9132:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9132:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9126:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9126:2:7"
																},
																"nativeSrc": "9126:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9126:13:7"
															},
															"nativeSrc": "9107:284:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9140:18:7",
																"nodeType": "YulBlock",
																"src": "9140:18:7",
																"statements": [
																	{
																		"nativeSrc": "9142:14:7",
																		"nodeType": "YulAssignment",
																		"src": "9142:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "9151:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "9151:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9154:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9154:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9147:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9147:3:7"
																			},
																			"nativeSrc": "9147:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9147:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "9142:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "9142:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9111:14:7",
																"nodeType": "YulBlock",
																"src": "9111:14:7",
																"statements": [
																	{
																		"nativeSrc": "9113:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9113:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9122:1:7",
																			"nodeType": "YulLiteral",
																			"src": "9122:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "9117:1:7",
																				"nodeType": "YulTypedName",
																				"src": "9117:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9107:284:7"
														},
														{
															"nativeSrc": "9400:10:7",
															"nodeType": "YulAssignment",
															"src": "9400:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "9407:3:7",
																"nodeType": "YulIdentifier",
																"src": "9407:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9400:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "8704:712:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8797:5:7",
														"nodeType": "YulTypedName",
														"src": "8797:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8804:3:7",
														"nodeType": "YulTypedName",
														"src": "8804:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8813:3:7",
														"nodeType": "YulTypedName",
														"src": "8813:3:7",
														"type": ""
													}
												],
												"src": "8704:712:7"
											},
											{
												"body": {
													"nativeSrc": "9508:73:7",
													"nodeType": "YulBlock",
													"src": "9508:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9525:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9525:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9530:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9530:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9518:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9518:6:7"
																},
																"nativeSrc": "9518:19:7",
																"nodeType": "YulFunctionCall",
																"src": "9518:19:7"
															},
															"nativeSrc": "9518:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "9518:19:7"
														},
														{
															"nativeSrc": "9546:29:7",
															"nodeType": "YulAssignment",
															"src": "9546:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9565:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9565:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9570:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9570:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9561:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9561:3:7"
																},
																"nativeSrc": "9561:14:7",
																"nodeType": "YulFunctionCall",
																"src": "9561:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9546:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9546:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nativeSrc": "9422:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9480:3:7",
														"nodeType": "YulTypedName",
														"src": "9480:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9485:6:7",
														"nodeType": "YulTypedName",
														"src": "9485:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9496:11:7",
														"nodeType": "YulTypedName",
														"src": "9496:11:7",
														"type": ""
													}
												],
												"src": "9422:159:7"
											},
											{
												"body": {
													"nativeSrc": "9669:275:7",
													"nodeType": "YulBlock",
													"src": "9669:275:7",
													"statements": [
														{
															"nativeSrc": "9679:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9679:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9726:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9726:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "9693:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "9693:32:7"
																},
																"nativeSrc": "9693:39:7",
																"nodeType": "YulFunctionCall",
																"src": "9693:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9683:6:7",
																	"nodeType": "YulTypedName",
																	"src": "9683:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9741:68:7",
															"nodeType": "YulAssignment",
															"src": "9741:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9797:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9797:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9802:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9802:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nativeSrc": "9748:48:7",
																	"nodeType": "YulIdentifier",
																	"src": "9748:48:7"
																},
																"nativeSrc": "9748:61:7",
																"nodeType": "YulFunctionCall",
																"src": "9748:61:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9741:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9741:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9857:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9857:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9864:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9864:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9853:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9853:3:7"
																		},
																		"nativeSrc": "9853:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9853:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9871:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9871:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9876:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9876:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9818:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "9818:34:7"
																},
																"nativeSrc": "9818:65:7",
																"nodeType": "YulFunctionCall",
																"src": "9818:65:7"
															},
															"nativeSrc": "9818:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "9818:65:7"
														},
														{
															"nativeSrc": "9892:46:7",
															"nodeType": "YulAssignment",
															"src": "9892:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9903:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9903:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9930:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9930:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9908:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "9908:21:7"
																		},
																		"nativeSrc": "9908:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9908:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9899:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9899:3:7"
																},
																"nativeSrc": "9899:39:7",
																"nodeType": "YulFunctionCall",
																"src": "9899:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9892:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9892:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "9587:357:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9650:5:7",
														"nodeType": "YulTypedName",
														"src": "9650:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9657:3:7",
														"nodeType": "YulTypedName",
														"src": "9657:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9665:3:7",
														"nodeType": "YulTypedName",
														"src": "9665:3:7",
														"type": ""
													}
												],
												"src": "9587:357:7"
											},
											{
												"body": {
													"nativeSrc": "10005:53:7",
													"nodeType": "YulBlock",
													"src": "10005:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10022:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10022:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10045:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10045:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10027:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10027:17:7"
																		},
																		"nativeSrc": "10027:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10027:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10015:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10015:6:7"
																},
																"nativeSrc": "10015:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10015:37:7"
															},
															"nativeSrc": "10015:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10015:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "9950:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9993:5:7",
														"nodeType": "YulTypedName",
														"src": "9993:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10000:3:7",
														"nodeType": "YulTypedName",
														"src": "10000:3:7",
														"type": ""
													}
												],
												"src": "9950:108:7"
											},
											{
												"body": {
													"nativeSrc": "10113:50:7",
													"nodeType": "YulBlock",
													"src": "10113:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10130:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10130:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10150:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10150:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "10135:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "10135:14:7"
																		},
																		"nativeSrc": "10135:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10135:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10123:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10123:6:7"
																},
																"nativeSrc": "10123:34:7",
																"nodeType": "YulFunctionCall",
																"src": "10123:34:7"
															},
															"nativeSrc": "10123:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "10123:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "10064:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10101:5:7",
														"nodeType": "YulTypedName",
														"src": "10101:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10108:3:7",
														"nodeType": "YulTypedName",
														"src": "10108:3:7",
														"type": ""
													}
												],
												"src": "10064:99:7"
											},
											{
												"body": {
													"nativeSrc": "10371:1834:7",
													"nodeType": "YulBlock",
													"src": "10371:1834:7",
													"statements": [
														{
															"nativeSrc": "10381:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10381:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10397:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10397:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10402:6:7",
																		"nodeType": "YulLiteral",
																		"src": "10402:6:7",
																		"type": "",
																		"value": "0x0120"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10393:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10393:3:7"
																},
																"nativeSrc": "10393:16:7",
																"nodeType": "YulFunctionCall",
																"src": "10393:16:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "10385:4:7",
																	"nodeType": "YulTypedName",
																	"src": "10385:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10419:267:7",
															"nodeType": "YulBlock",
															"src": "10419:267:7",
															"statements": [
																{
																	"nativeSrc": "10456:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10456:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10486:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10486:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10493:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10493:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10482:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10482:3:7"
																				},
																				"nativeSrc": "10482:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10482:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10476:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "10476:5:7"
																		},
																		"nativeSrc": "10476:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10476:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10460:12:7",
																			"nodeType": "YulTypedName",
																			"src": "10460:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10524:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10524:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10529:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10529:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10520:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10520:3:7"
																				},
																				"nativeSrc": "10520:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10520:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "10540:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "10540:4:7"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "10546:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10546:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10536:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10536:3:7"
																				},
																				"nativeSrc": "10536:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10536:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "10513:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10513:6:7"
																		},
																		"nativeSrc": "10513:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10513:38:7"
																	},
																	"nativeSrc": "10513:38:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "10513:38:7"
																},
																{
																	"nativeSrc": "10564:111:7",
																	"nodeType": "YulAssignment",
																	"src": "10564:111:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10656:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "10656:12:7"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "10670:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10670:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "10572:83:7",
																			"nodeType": "YulIdentifier",
																			"src": "10572:83:7"
																		},
																		"nativeSrc": "10572:103:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10572:103:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "10564:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "10564:4:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10696:240:7",
															"nodeType": "YulBlock",
															"src": "10696:240:7",
															"statements": [
																{
																	"nativeSrc": "10736:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10736:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10766:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10766:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10773:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10773:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10762:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10762:3:7"
																				},
																				"nativeSrc": "10762:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10762:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10756:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "10756:5:7"
																		},
																		"nativeSrc": "10756:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10756:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10740:12:7",
																			"nodeType": "YulTypedName",
																			"src": "10740:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10804:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10804:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10809:4:7",
																						"nodeType": "YulLiteral",
																						"src": "10809:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10800:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10800:3:7"
																				},
																				"nativeSrc": "10800:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10800:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "10820:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "10820:4:7"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "10826:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10826:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10816:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10816:3:7"
																				},
																				"nativeSrc": "10816:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10816:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "10793:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10793:6:7"
																		},
																		"nativeSrc": "10793:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10793:38:7"
																	},
																	"nativeSrc": "10793:38:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "10793:38:7"
																},
																{
																	"nativeSrc": "10844:81:7",
																	"nodeType": "YulAssignment",
																	"src": "10844:81:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10906:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "10906:12:7"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "10920:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10920:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "10852:53:7",
																			"nodeType": "YulIdentifier",
																			"src": "10852:53:7"
																		},
																		"nativeSrc": "10852:73:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10852:73:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "10844:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "10844:4:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10946:168:7",
															"nodeType": "YulBlock",
															"src": "10946:168:7",
															"statements": [
																{
																	"nativeSrc": "10985:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10985:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11015:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11015:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11022:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11022:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11011:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11011:3:7"
																				},
																				"nativeSrc": "11011:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11011:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11005:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11005:5:7"
																		},
																		"nativeSrc": "11005:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11005:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10989:12:7",
																			"nodeType": "YulTypedName",
																			"src": "10989:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11075:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11075:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11093:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11093:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11098:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11098:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11089:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11089:3:7"
																				},
																				"nativeSrc": "11089:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11089:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11041:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11041:33:7"
																		},
																		"nativeSrc": "11041:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11041:63:7"
																	},
																	"nativeSrc": "11041:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11041:63:7"
																}
															]
														},
														{
															"nativeSrc": "11124:172:7",
															"nodeType": "YulBlock",
															"src": "11124:172:7",
															"statements": [
																{
																	"nativeSrc": "11167:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11167:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11197:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11197:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11204:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11204:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11193:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11193:3:7"
																				},
																				"nativeSrc": "11193:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11193:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11187:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11187:5:7"
																		},
																		"nativeSrc": "11187:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11187:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11171:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11171:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11257:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11257:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11275:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11275:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11280:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11280:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11271:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11271:3:7"
																				},
																				"nativeSrc": "11271:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11271:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11223:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11223:33:7"
																		},
																		"nativeSrc": "11223:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11223:63:7"
																	},
																	"nativeSrc": "11223:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11223:63:7"
																}
															]
														},
														{
															"nativeSrc": "11306:172:7",
															"nodeType": "YulBlock",
															"src": "11306:172:7",
															"statements": [
																{
																	"nativeSrc": "11349:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11349:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11379:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11379:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11386:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11386:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11375:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11375:3:7"
																				},
																				"nativeSrc": "11375:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11375:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11369:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11369:5:7"
																		},
																		"nativeSrc": "11369:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11369:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11353:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11353:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11439:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11439:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11457:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11457:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11462:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11462:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11453:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11453:3:7"
																				},
																				"nativeSrc": "11453:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11453:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11405:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11405:33:7"
																		},
																		"nativeSrc": "11405:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11405:63:7"
																	},
																	"nativeSrc": "11405:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11405:63:7"
																}
															]
														},
														{
															"nativeSrc": "11488:170:7",
															"nodeType": "YulBlock",
															"src": "11488:170:7",
															"statements": [
																{
																	"nativeSrc": "11529:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11529:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11559:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11559:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11566:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11566:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11555:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11555:3:7"
																				},
																				"nativeSrc": "11555:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11555:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11549:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11549:5:7"
																		},
																		"nativeSrc": "11549:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11549:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11533:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11533:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11619:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11619:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11637:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11637:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11642:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11642:4:7",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11633:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11633:3:7"
																				},
																				"nativeSrc": "11633:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11633:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11585:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11585:33:7"
																		},
																		"nativeSrc": "11585:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11585:63:7"
																	},
																	"nativeSrc": "11585:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11585:63:7"
																}
															]
														},
														{
															"nativeSrc": "11668:166:7",
															"nodeType": "YulBlock",
															"src": "11668:166:7",
															"statements": [
																{
																	"nativeSrc": "11705:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11705:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11735:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11735:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11742:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11742:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11731:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11731:3:7"
																				},
																				"nativeSrc": "11731:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11731:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11725:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11725:5:7"
																		},
																		"nativeSrc": "11725:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11725:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11709:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11709:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11795:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11795:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11813:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11813:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11818:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11818:4:7",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11809:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11809:3:7"
																				},
																				"nativeSrc": "11809:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11809:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "11761:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "11761:33:7"
																		},
																		"nativeSrc": "11761:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11761:63:7"
																	},
																	"nativeSrc": "11761:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11761:63:7"
																}
															]
														},
														{
															"nativeSrc": "11844:160:7",
															"nodeType": "YulBlock",
															"src": "11844:160:7",
															"statements": [
																{
																	"nativeSrc": "11881:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11881:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11911:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11911:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11918:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11918:4:7",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11907:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11907:3:7"
																				},
																				"nativeSrc": "11907:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11907:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11901:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "11901:5:7"
																		},
																		"nativeSrc": "11901:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11901:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "11885:12:7",
																			"nodeType": "YulTypedName",
																			"src": "11885:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11965:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "11965:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "11983:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "11983:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11988:4:7",
																						"nodeType": "YulLiteral",
																						"src": "11988:4:7",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11979:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11979:3:7"
																				},
																				"nativeSrc": "11979:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11979:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "11937:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "11937:27:7"
																		},
																		"nativeSrc": "11937:57:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11937:57:7"
																	},
																	"nativeSrc": "11937:57:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "11937:57:7"
																}
															]
														},
														{
															"nativeSrc": "12014:164:7",
															"nodeType": "YulBlock",
															"src": "12014:164:7",
															"statements": [
																{
																	"nativeSrc": "12051:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12051:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12081:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "12081:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12088:6:7",
																						"nodeType": "YulLiteral",
																						"src": "12088:6:7",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12077:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12077:3:7"
																				},
																				"nativeSrc": "12077:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12077:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12071:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "12071:5:7"
																		},
																		"nativeSrc": "12071:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12071:25:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12055:12:7",
																			"nodeType": "YulTypedName",
																			"src": "12055:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12137:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "12137:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12155:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "12155:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12160:6:7",
																						"nodeType": "YulLiteral",
																						"src": "12160:6:7",
																						"type": "",
																						"value": "0x0100"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12151:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12151:3:7"
																				},
																				"nativeSrc": "12151:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12151:16:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "12109:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "12109:27:7"
																		},
																		"nativeSrc": "12109:59:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12109:59:7"
																	},
																	"nativeSrc": "12109:59:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "12109:59:7"
																}
															]
														},
														{
															"nativeSrc": "12188:11:7",
															"nodeType": "YulAssignment",
															"src": "12188:11:7",
															"value": {
																"name": "tail",
																"nativeSrc": "12195:4:7",
																"nodeType": "YulIdentifier",
																"src": "12195:4:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12188:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12188:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_IssueView_$1450_memory_ptr_to_t_struct$_IssueView_$1450_memory_ptr_fromStack",
												"nativeSrc": "10243:1962:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10350:5:7",
														"nodeType": "YulTypedName",
														"src": "10350:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10357:3:7",
														"nodeType": "YulTypedName",
														"src": "10357:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10366:3:7",
														"nodeType": "YulTypedName",
														"src": "10366:3:7",
														"type": ""
													}
												],
												"src": "10243:1962:7"
											},
											{
												"body": {
													"nativeSrc": "12363:229:7",
													"nodeType": "YulBlock",
													"src": "12363:229:7",
													"statements": [
														{
															"nativeSrc": "12373:26:7",
															"nodeType": "YulAssignment",
															"src": "12373:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12385:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12385:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12396:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12396:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12381:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12381:3:7"
																},
																"nativeSrc": "12381:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12381:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12373:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12373:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12420:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12420:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12431:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12431:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12416:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12416:3:7"
																		},
																		"nativeSrc": "12416:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12416:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12439:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12439:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12445:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12445:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12435:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12435:3:7"
																		},
																		"nativeSrc": "12435:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12435:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12409:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12409:6:7"
																},
																"nativeSrc": "12409:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12409:47:7"
															},
															"nativeSrc": "12409:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12409:47:7"
														},
														{
															"nativeSrc": "12465:120:7",
															"nodeType": "YulAssignment",
															"src": "12465:120:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12571:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12571:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "12580:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12580:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_IssueView_$1450_memory_ptr_to_t_struct$_IssueView_$1450_memory_ptr_fromStack",
																	"nativeSrc": "12473:97:7",
																	"nodeType": "YulIdentifier",
																	"src": "12473:97:7"
																},
																"nativeSrc": "12473:112:7",
																"nodeType": "YulFunctionCall",
																"src": "12473:112:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12465:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12465:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_IssueView_$1450_memory_ptr__to_t_struct$_IssueView_$1450_memory_ptr__fromStack_reversed",
												"nativeSrc": "12211:381:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12335:9:7",
														"nodeType": "YulTypedName",
														"src": "12335:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12347:6:7",
														"nodeType": "YulTypedName",
														"src": "12347:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12358:4:7",
														"nodeType": "YulTypedName",
														"src": "12358:4:7",
														"type": ""
													}
												],
												"src": "12211:381:7"
											},
											{
												"body": {
													"nativeSrc": "12681:391:7",
													"nodeType": "YulBlock",
													"src": "12681:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12727:83:7",
																"nodeType": "YulBlock",
																"src": "12727:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12729:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "12729:77:7"
																			},
																			"nativeSrc": "12729:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12729:79:7"
																		},
																		"nativeSrc": "12729:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12729:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12702:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12702:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12711:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12711:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12698:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12698:3:7"
																		},
																		"nativeSrc": "12698:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12698:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12723:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12723:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12694:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12694:3:7"
																},
																"nativeSrc": "12694:32:7",
																"nodeType": "YulFunctionCall",
																"src": "12694:32:7"
															},
															"nativeSrc": "12691:119:7",
															"nodeType": "YulIf",
															"src": "12691:119:7"
														},
														{
															"nativeSrc": "12820:117:7",
															"nodeType": "YulBlock",
															"src": "12820:117:7",
															"statements": [
																{
																	"nativeSrc": "12835:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12835:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12849:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12849:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12839:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12839:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12864:63:7",
																	"nodeType": "YulAssignment",
																	"src": "12864:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12899:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12899:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12910:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12910:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12895:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12895:3:7"
																				},
																				"nativeSrc": "12895:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12895:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12919:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12919:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12874:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "12874:20:7"
																		},
																		"nativeSrc": "12874:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12874:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12864:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12864:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12947:118:7",
															"nodeType": "YulBlock",
															"src": "12947:118:7",
															"statements": [
																{
																	"nativeSrc": "12962:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12962:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12976:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12976:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12966:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12966:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12992:63:7",
																	"nodeType": "YulAssignment",
																	"src": "12992:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13027:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "13027:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13038:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "13038:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13023:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13023:3:7"
																				},
																				"nativeSrc": "13023:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13023:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13047:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13047:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13002:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "13002:20:7"
																		},
																		"nativeSrc": "13002:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13002:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12992:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12992:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12598:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12643:9:7",
														"nodeType": "YulTypedName",
														"src": "12643:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12654:7:7",
														"nodeType": "YulTypedName",
														"src": "12654:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12666:6:7",
														"nodeType": "YulTypedName",
														"src": "12666:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12674:6:7",
														"nodeType": "YulTypedName",
														"src": "12674:6:7",
														"type": ""
													}
												],
												"src": "12598:474:7"
											},
											{
												"body": {
													"nativeSrc": "13106:152:7",
													"nodeType": "YulBlock",
													"src": "13106:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13123:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13123:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13126:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13126:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13116:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13116:6:7"
																},
																"nativeSrc": "13116:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13116:88:7"
															},
															"nativeSrc": "13116:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13116:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13220:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13220:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13223:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13223:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13213:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13213:6:7"
																},
																"nativeSrc": "13213:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13213:15:7"
															},
															"nativeSrc": "13213:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13213:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13244:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13244:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13247:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13247:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13237:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13237:6:7"
																},
																"nativeSrc": "13237:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13237:15:7"
															},
															"nativeSrc": "13237:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13237:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13078:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13078:180:7"
											},
											{
												"body": {
													"nativeSrc": "13315:269:7",
													"nodeType": "YulBlock",
													"src": "13315:269:7",
													"statements": [
														{
															"nativeSrc": "13325:22:7",
															"nodeType": "YulAssignment",
															"src": "13325:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13339:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13339:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13345:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13345:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13335:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13335:3:7"
																},
																"nativeSrc": "13335:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13335:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13325:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13325:6:7"
																}
															]
														},
														{
															"nativeSrc": "13356:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13356:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13386:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13386:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13392:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13392:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13382:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13382:3:7"
																},
																"nativeSrc": "13382:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13382:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13360:18:7",
																	"nodeType": "YulTypedName",
																	"src": "13360:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13433:51:7",
																"nodeType": "YulBlock",
																"src": "13433:51:7",
																"statements": [
																	{
																		"nativeSrc": "13447:27:7",
																		"nodeType": "YulAssignment",
																		"src": "13447:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13461:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "13461:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13469:4:7",
																					"nodeType": "YulLiteral",
																					"src": "13469:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13457:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "13457:3:7"
																			},
																			"nativeSrc": "13457:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13457:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13447:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13447:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13413:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "13413:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13406:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13406:6:7"
																},
																"nativeSrc": "13406:26:7",
																"nodeType": "YulFunctionCall",
																"src": "13406:26:7"
															},
															"nativeSrc": "13403:81:7",
															"nodeType": "YulIf",
															"src": "13403:81:7"
														},
														{
															"body": {
																"nativeSrc": "13536:42:7",
																"nodeType": "YulBlock",
																"src": "13536:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13550:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13550:16:7"
																			},
																			"nativeSrc": "13550:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13550:18:7"
																		},
																		"nativeSrc": "13550:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13550:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13500:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "13500:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13523:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13523:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13531:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13531:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13520:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "13520:2:7"
																		},
																		"nativeSrc": "13520:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13520:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13497:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13497:2:7"
																},
																"nativeSrc": "13497:38:7",
																"nodeType": "YulFunctionCall",
																"src": "13497:38:7"
															},
															"nativeSrc": "13494:84:7",
															"nodeType": "YulIf",
															"src": "13494:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13264:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13299:4:7",
														"nodeType": "YulTypedName",
														"src": "13299:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13308:6:7",
														"nodeType": "YulTypedName",
														"src": "13308:6:7",
														"type": ""
													}
												],
												"src": "13264:320:7"
											},
											{
												"body": {
													"nativeSrc": "13656:31:7",
													"nodeType": "YulBlock",
													"src": "13656:31:7",
													"statements": [
														{
															"nativeSrc": "13667:13:7",
															"nodeType": "YulAssignment",
															"src": "13667:13:7",
															"value": {
																"name": "len",
																"nativeSrc": "13677:3:7",
																"nodeType": "YulIdentifier",
																"src": "13677:3:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13667:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13667:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_calldata_ptr",
												"nativeSrc": "13590:97:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13634:5:7",
														"nodeType": "YulTypedName",
														"src": "13634:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "13641:3:7",
														"nodeType": "YulTypedName",
														"src": "13641:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13649:6:7",
														"nodeType": "YulTypedName",
														"src": "13649:6:7",
														"type": ""
													}
												],
												"src": "13590:97:7"
											},
											{
												"body": {
													"nativeSrc": "13721:152:7",
													"nodeType": "YulBlock",
													"src": "13721:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13738:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13738:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13741:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13741:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13731:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13731:6:7"
																},
																"nativeSrc": "13731:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13731:88:7"
															},
															"nativeSrc": "13731:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13731:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13835:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13835:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13838:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13838:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13828:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13828:6:7"
																},
																"nativeSrc": "13828:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13828:15:7"
															},
															"nativeSrc": "13828:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13828:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13859:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13859:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13862:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13862:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13852:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13852:6:7"
																},
																"nativeSrc": "13852:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13852:15:7"
															},
															"nativeSrc": "13852:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13852:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "13693:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13693:180:7"
											},
											{
												"body": {
													"nativeSrc": "13933:87:7",
													"nodeType": "YulBlock",
													"src": "13933:87:7",
													"statements": [
														{
															"nativeSrc": "13943:11:7",
															"nodeType": "YulAssignment",
															"src": "13943:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "13951:3:7",
																"nodeType": "YulIdentifier",
																"src": "13951:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13943:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13943:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13971:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13971:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "13974:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13974:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13964:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13964:6:7"
																},
																"nativeSrc": "13964:14:7",
																"nodeType": "YulFunctionCall",
																"src": "13964:14:7"
															},
															"nativeSrc": "13964:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "13964:14:7"
														},
														{
															"nativeSrc": "13987:26:7",
															"nodeType": "YulAssignment",
															"src": "13987:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14005:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14005:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14008:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14008:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "13995:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "13995:9:7"
																},
																"nativeSrc": "13995:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13995:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13987:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13987:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "13879:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13920:3:7",
														"nodeType": "YulTypedName",
														"src": "13920:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13928:4:7",
														"nodeType": "YulTypedName",
														"src": "13928:4:7",
														"type": ""
													}
												],
												"src": "13879:141:7"
											},
											{
												"body": {
													"nativeSrc": "14070:49:7",
													"nodeType": "YulBlock",
													"src": "14070:49:7",
													"statements": [
														{
															"nativeSrc": "14080:33:7",
															"nodeType": "YulAssignment",
															"src": "14080:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14098:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "14098:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14105:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14105:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14094:3:7"
																		},
																		"nativeSrc": "14094:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14094:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14110:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14110:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14090:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14090:3:7"
																},
																"nativeSrc": "14090:23:7",
																"nodeType": "YulFunctionCall",
																"src": "14090:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14080:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14080:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "14026:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14053:5:7",
														"nodeType": "YulTypedName",
														"src": "14053:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14063:6:7",
														"nodeType": "YulTypedName",
														"src": "14063:6:7",
														"type": ""
													}
												],
												"src": "14026:93:7"
											},
											{
												"body": {
													"nativeSrc": "14178:54:7",
													"nodeType": "YulBlock",
													"src": "14178:54:7",
													"statements": [
														{
															"nativeSrc": "14188:37:7",
															"nodeType": "YulAssignment",
															"src": "14188:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "14213:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14213:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14219:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14219:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "14209:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14209:3:7"
																},
																"nativeSrc": "14209:16:7",
																"nodeType": "YulFunctionCall",
																"src": "14209:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14188:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "14188:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "14125:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "14153:4:7",
														"nodeType": "YulTypedName",
														"src": "14153:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "14159:5:7",
														"nodeType": "YulTypedName",
														"src": "14159:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14169:8:7",
														"nodeType": "YulTypedName",
														"src": "14169:8:7",
														"type": ""
													}
												],
												"src": "14125:107:7"
											},
											{
												"body": {
													"nativeSrc": "14314:317:7",
													"nodeType": "YulBlock",
													"src": "14314:317:7",
													"statements": [
														{
															"nativeSrc": "14324:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14324:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "14345:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "14345:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14357:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14357:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14341:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14341:3:7"
																},
																"nativeSrc": "14341:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14341:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "14328:9:7",
																	"nodeType": "YulTypedName",
																	"src": "14328:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14368:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14368:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14399:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14399:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14410:66:7",
																		"nodeType": "YulLiteral",
																		"src": "14410:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14380:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "14380:18:7"
																},
																"nativeSrc": "14380:97:7",
																"nodeType": "YulFunctionCall",
																"src": "14380:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14372:4:7",
																	"nodeType": "YulTypedName",
																	"src": "14372:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14486:51:7",
															"nodeType": "YulAssignment",
															"src": "14486:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "14517:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14517:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "14528:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "14528:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "14498:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "14498:18:7"
																},
																"nativeSrc": "14498:39:7",
																"nodeType": "YulFunctionCall",
																"src": "14498:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "14486:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "14486:8:7"
																}
															]
														},
														{
															"nativeSrc": "14546:30:7",
															"nodeType": "YulAssignment",
															"src": "14546:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14559:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14559:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "14570:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14570:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14566:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14566:3:7"
																		},
																		"nativeSrc": "14566:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14566:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14555:3:7"
																},
																"nativeSrc": "14555:21:7",
																"nodeType": "YulFunctionCall",
																"src": "14555:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14546:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "14546:5:7"
																}
															]
														},
														{
															"nativeSrc": "14585:40:7",
															"nodeType": "YulAssignment",
															"src": "14585:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14598:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14598:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "14609:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "14609:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "14619:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14619:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14605:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14605:3:7"
																		},
																		"nativeSrc": "14605:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14605:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14595:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14595:2:7"
																},
																"nativeSrc": "14595:30:7",
																"nodeType": "YulFunctionCall",
																"src": "14595:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14585:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14585:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "14238:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14275:5:7",
														"nodeType": "YulTypedName",
														"src": "14275:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "14282:10:7",
														"nodeType": "YulTypedName",
														"src": "14282:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "14294:8:7",
														"nodeType": "YulTypedName",
														"src": "14294:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14307:6:7",
														"nodeType": "YulTypedName",
														"src": "14307:6:7",
														"type": ""
													}
												],
												"src": "14238:393:7"
											},
											{
												"body": {
													"nativeSrc": "14669:28:7",
													"nodeType": "YulBlock",
													"src": "14669:28:7",
													"statements": [
														{
															"nativeSrc": "14679:12:7",
															"nodeType": "YulAssignment",
															"src": "14679:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "14686:5:7",
																"nodeType": "YulIdentifier",
																"src": "14686:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14679:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14679:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "14637:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14655:5:7",
														"nodeType": "YulTypedName",
														"src": "14655:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14665:3:7",
														"nodeType": "YulTypedName",
														"src": "14665:3:7",
														"type": ""
													}
												],
												"src": "14637:60:7"
											},
											{
												"body": {
													"nativeSrc": "14763:82:7",
													"nodeType": "YulBlock",
													"src": "14763:82:7",
													"statements": [
														{
															"nativeSrc": "14773:66:7",
															"nodeType": "YulAssignment",
															"src": "14773:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14831:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "14831:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "14813:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "14813:17:7"
																				},
																				"nativeSrc": "14813:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14813:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14804:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "14804:8:7"
																		},
																		"nativeSrc": "14804:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14804:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14786:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14786:17:7"
																},
																"nativeSrc": "14786:53:7",
																"nodeType": "YulFunctionCall",
																"src": "14786:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14773:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "14773:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "14703:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14743:5:7",
														"nodeType": "YulTypedName",
														"src": "14743:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14753:9:7",
														"nodeType": "YulTypedName",
														"src": "14753:9:7",
														"type": ""
													}
												],
												"src": "14703:142:7"
											},
											{
												"body": {
													"nativeSrc": "14898:28:7",
													"nodeType": "YulBlock",
													"src": "14898:28:7",
													"statements": [
														{
															"nativeSrc": "14908:12:7",
															"nodeType": "YulAssignment",
															"src": "14908:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "14915:5:7",
																"nodeType": "YulIdentifier",
																"src": "14915:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14908:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14908:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "14851:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14884:5:7",
														"nodeType": "YulTypedName",
														"src": "14884:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14894:3:7",
														"nodeType": "YulTypedName",
														"src": "14894:3:7",
														"type": ""
													}
												],
												"src": "14851:75:7"
											},
											{
												"body": {
													"nativeSrc": "15008:193:7",
													"nodeType": "YulBlock",
													"src": "15008:193:7",
													"statements": [
														{
															"nativeSrc": "15018:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "15018:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "15073:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "15073:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "15042:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "15042:30:7"
																},
																"nativeSrc": "15042:39:7",
																"nodeType": "YulFunctionCall",
																"src": "15042:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "15022:16:7",
																	"nodeType": "YulTypedName",
																	"src": "15022:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15097:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15097:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "15137:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "15137:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "15131:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "15131:5:7"
																				},
																				"nativeSrc": "15131:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15131:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "15144:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15144:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "15176:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "15176:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "15152:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "15152:23:7"
																				},
																				"nativeSrc": "15152:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15152:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "15103:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "15103:27:7"
																		},
																		"nativeSrc": "15103:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15103:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "15090:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15090:6:7"
																},
																"nativeSrc": "15090:105:7",
																"nodeType": "YulFunctionCall",
																"src": "15090:105:7"
															},
															"nativeSrc": "15090:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "15090:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "14932:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14985:4:7",
														"nodeType": "YulTypedName",
														"src": "14985:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "14991:6:7",
														"nodeType": "YulTypedName",
														"src": "14991:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "14999:7:7",
														"nodeType": "YulTypedName",
														"src": "14999:7:7",
														"type": ""
													}
												],
												"src": "14932:269:7"
											},
											{
												"body": {
													"nativeSrc": "15256:24:7",
													"nodeType": "YulBlock",
													"src": "15256:24:7",
													"statements": [
														{
															"nativeSrc": "15266:8:7",
															"nodeType": "YulAssignment",
															"src": "15266:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "15273:1:7",
																"nodeType": "YulLiteral",
																"src": "15273:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15266:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15266:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "15207:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15252:3:7",
														"nodeType": "YulTypedName",
														"src": "15252:3:7",
														"type": ""
													}
												],
												"src": "15207:73:7"
											},
											{
												"body": {
													"nativeSrc": "15339:136:7",
													"nodeType": "YulBlock",
													"src": "15339:136:7",
													"statements": [
														{
															"nativeSrc": "15349:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "15349:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "15363:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "15363:30:7"
																},
																"nativeSrc": "15363:32:7",
																"nodeType": "YulFunctionCall",
																"src": "15363:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "15353:6:7",
																	"nodeType": "YulTypedName",
																	"src": "15353:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15448:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15448:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "15454:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15454:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "15462:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15462:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "15404:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15404:43:7"
																},
																"nativeSrc": "15404:65:7",
																"nodeType": "YulFunctionCall",
																"src": "15404:65:7"
															},
															"nativeSrc": "15404:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "15404:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "15286:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15325:4:7",
														"nodeType": "YulTypedName",
														"src": "15325:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "15331:6:7",
														"nodeType": "YulTypedName",
														"src": "15331:6:7",
														"type": ""
													}
												],
												"src": "15286:189:7"
											},
											{
												"body": {
													"nativeSrc": "15531:136:7",
													"nodeType": "YulBlock",
													"src": "15531:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "15598:63:7",
																"nodeType": "YulBlock",
																"src": "15598:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15642:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "15642:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15649:1:7",
																					"nodeType": "YulLiteral",
																					"src": "15649:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "15612:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "15612:29:7"
																			},
																			"nativeSrc": "15612:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15612:39:7"
																		},
																		"nativeSrc": "15612:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15612:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "15551:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15551:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15558:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15558:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15548:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15548:2:7"
																},
																"nativeSrc": "15548:14:7",
																"nodeType": "YulFunctionCall",
																"src": "15548:14:7"
															},
															"nativeSrc": "15541:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15563:26:7",
																"nodeType": "YulBlock",
																"src": "15563:26:7",
																"statements": [
																	{
																		"nativeSrc": "15565:22:7",
																		"nodeType": "YulAssignment",
																		"src": "15565:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "15578:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "15578:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15585:1:7",
																					"nodeType": "YulLiteral",
																					"src": "15585:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15574:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "15574:3:7"
																			},
																			"nativeSrc": "15574:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15574:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "15565:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "15565:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15545:2:7",
																"nodeType": "YulBlock",
																"src": "15545:2:7",
																"statements": []
															},
															"src": "15541:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "15481:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "15519:5:7",
														"nodeType": "YulTypedName",
														"src": "15519:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15526:3:7",
														"nodeType": "YulTypedName",
														"src": "15526:3:7",
														"type": ""
													}
												],
												"src": "15481:186:7"
											},
											{
												"body": {
													"nativeSrc": "15752:464:7",
													"nodeType": "YulBlock",
													"src": "15752:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "15778:431:7",
																"nodeType": "YulBlock",
																"src": "15778:431:7",
																"statements": [
																	{
																		"nativeSrc": "15792:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15792:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "15840:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "15840:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "15808:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "15808:31:7"
																			},
																			"nativeSrc": "15808:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15808:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "15796:8:7",
																				"nodeType": "YulTypedName",
																				"src": "15796:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15859:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15859:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "15882:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "15882:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "15910:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "15910:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "15892:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "15892:17:7"
																					},
																					"nativeSrc": "15892:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "15892:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15878:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "15878:3:7"
																			},
																			"nativeSrc": "15878:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15878:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "15863:11:7",
																				"nodeType": "YulTypedName",
																				"src": "15863:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "16079:27:7",
																			"nodeType": "YulBlock",
																			"src": "16079:27:7",
																			"statements": [
																				{
																					"nativeSrc": "16081:23:7",
																					"nodeType": "YulAssignment",
																					"src": "16081:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "16096:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "16096:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "16081:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "16081:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "16063:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "16063:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16075:2:7",
																					"nodeType": "YulLiteral",
																					"src": "16075:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "16060:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "16060:2:7"
																			},
																			"nativeSrc": "16060:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16060:18:7"
																		},
																		"nativeSrc": "16057:49:7",
																		"nodeType": "YulIf",
																		"src": "16057:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "16148:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "16148:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "16165:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "16165:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "16193:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "16193:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "16175:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "16175:17:7"
																							},
																							"nativeSrc": "16175:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "16175:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16161:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "16161:3:7"
																					},
																					"nativeSrc": "16161:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "16161:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "16119:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "16119:28:7"
																			},
																			"nativeSrc": "16119:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16119:80:7"
																		},
																		"nativeSrc": "16119:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16119:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "15769:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15769:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15774:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15774:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15766:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15766:2:7"
																},
																"nativeSrc": "15766:11:7",
																"nodeType": "YulFunctionCall",
																"src": "15766:11:7"
															},
															"nativeSrc": "15763:446:7",
															"nodeType": "YulIf",
															"src": "15763:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "15673:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "15728:5:7",
														"nodeType": "YulTypedName",
														"src": "15728:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15735:3:7",
														"nodeType": "YulTypedName",
														"src": "15735:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "15740:10:7",
														"nodeType": "YulTypedName",
														"src": "15740:10:7",
														"type": ""
													}
												],
												"src": "15673:543:7"
											},
											{
												"body": {
													"nativeSrc": "16285:54:7",
													"nodeType": "YulBlock",
													"src": "16285:54:7",
													"statements": [
														{
															"nativeSrc": "16295:37:7",
															"nodeType": "YulAssignment",
															"src": "16295:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16320:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16320:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16326:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "16326:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "16316:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16316:3:7"
																},
																"nativeSrc": "16316:16:7",
																"nodeType": "YulFunctionCall",
																"src": "16316:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16295:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "16295:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "16222:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16260:4:7",
														"nodeType": "YulTypedName",
														"src": "16260:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16266:5:7",
														"nodeType": "YulTypedName",
														"src": "16266:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16276:8:7",
														"nodeType": "YulTypedName",
														"src": "16276:8:7",
														"type": ""
													}
												],
												"src": "16222:117:7"
											},
											{
												"body": {
													"nativeSrc": "16396:118:7",
													"nodeType": "YulBlock",
													"src": "16396:118:7",
													"statements": [
														{
															"nativeSrc": "16406:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16406:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16455:1:7",
																						"nodeType": "YulLiteral",
																						"src": "16455:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "16458:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "16458:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "16451:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16451:3:7"
																				},
																				"nativeSrc": "16451:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16451:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16470:1:7",
																						"nodeType": "YulLiteral",
																						"src": "16470:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16466:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16466:3:7"
																				},
																				"nativeSrc": "16466:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16466:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "16422:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "16422:28:7"
																		},
																		"nativeSrc": "16422:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16422:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "16418:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16418:3:7"
																},
																"nativeSrc": "16418:56:7",
																"nodeType": "YulFunctionCall",
																"src": "16418:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16410:4:7",
																	"nodeType": "YulTypedName",
																	"src": "16410:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16483:25:7",
															"nodeType": "YulAssignment",
															"src": "16483:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16497:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16497:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "16503:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16503:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16493:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16493:3:7"
																},
																"nativeSrc": "16493:15:7",
																"nodeType": "YulFunctionCall",
																"src": "16493:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16483:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16483:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "16345:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16373:4:7",
														"nodeType": "YulTypedName",
														"src": "16373:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "16379:5:7",
														"nodeType": "YulTypedName",
														"src": "16379:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16389:6:7",
														"nodeType": "YulTypedName",
														"src": "16389:6:7",
														"type": ""
													}
												],
												"src": "16345:169:7"
											},
											{
												"body": {
													"nativeSrc": "16600:214:7",
													"nodeType": "YulBlock",
													"src": "16600:214:7",
													"statements": [
														{
															"nativeSrc": "16733:37:7",
															"nodeType": "YulAssignment",
															"src": "16733:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16760:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16760:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "16766:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16766:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "16741:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "16741:18:7"
																},
																"nativeSrc": "16741:29:7",
																"nodeType": "YulFunctionCall",
																"src": "16741:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16733:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16733:4:7"
																}
															]
														},
														{
															"nativeSrc": "16779:29:7",
															"nodeType": "YulAssignment",
															"src": "16779:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "16790:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16790:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16800:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16800:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "16803:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "16803:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "16796:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16796:3:7"
																		},
																		"nativeSrc": "16796:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16796:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16787:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16787:2:7"
																},
																"nativeSrc": "16787:21:7",
																"nodeType": "YulFunctionCall",
																"src": "16787:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "16779:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16779:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "16519:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16581:4:7",
														"nodeType": "YulTypedName",
														"src": "16581:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16587:3:7",
														"nodeType": "YulTypedName",
														"src": "16587:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "16595:4:7",
														"nodeType": "YulTypedName",
														"src": "16595:4:7",
														"type": ""
													}
												],
												"src": "16519:295:7"
											},
											{
												"body": {
													"nativeSrc": "16918:1304:7",
													"nodeType": "YulBlock",
													"src": "16918:1304:7",
													"statements": [
														{
															"nativeSrc": "16929:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16929:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "16978:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16978:3:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "16983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_calldata_ptr",
																	"nativeSrc": "16943:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "16943:34:7"
																},
																"nativeSrc": "16943:44:7",
																"nodeType": "YulFunctionCall",
																"src": "16943:44:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "16933:6:7",
																	"nodeType": "YulTypedName",
																	"src": "16933:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17072:22:7",
																"nodeType": "YulBlock",
																"src": "17072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "17074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "17074:16:7"
																			},
																			"nativeSrc": "17074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17074:18:7"
																		},
																		"nativeSrc": "17074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "17052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17041:2:7"
																},
																"nativeSrc": "17041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "17041:30:7"
															},
															"nativeSrc": "17038:56:7",
															"nodeType": "YulIf",
															"src": "17038:56:7"
														},
														{
															"nativeSrc": "17104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "17150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "17144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "17144:5:7"
																		},
																		"nativeSrc": "17144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "17118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "17118:25:7"
																},
																"nativeSrc": "17118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "17118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "17108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "17108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "17255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "17263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "17203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "17203:45:7"
																},
																"nativeSrc": "17203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "17203:67:7"
															},
															"nativeSrc": "17203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "17203:67:7"
														},
														{
															"nativeSrc": "17280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "17297:1:7",
																"nodeType": "YulLiteral",
																"src": "17297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "17284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "17284:9:7",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "17345:625:7",
																		"nodeType": "YulBlock",
																		"src": "17345:625:7",
																		"statements": [
																			{
																				"nativeSrc": "17359:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17359:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "17378:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "17378:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "17390:4:7",
																									"nodeType": "YulLiteral",
																									"src": "17390:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "17386:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "17386:3:7"
																							},
																							"nativeSrc": "17386:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "17386:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "17374:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "17374:3:7"
																					},
																					"nativeSrc": "17374:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17374:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "17363:7:7",
																						"nodeType": "YulTypedName",
																						"src": "17363:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17410:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17410:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17456:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "17456:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "17424:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "17424:31:7"
																					},
																					"nativeSrc": "17424:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17424:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "17414:6:7",
																						"nodeType": "YulTypedName",
																						"src": "17414:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "17474:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "17474:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "17483:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17483:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "17478:1:7",
																						"nodeType": "YulTypedName",
																						"src": "17478:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "17542:170:7",
																					"nodeType": "YulBlock",
																					"src": "17542:170:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17567:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "17567:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "17592:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "17592:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "17597:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "17597:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "17588:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "17588:3:7"
																												},
																												"nativeSrc": "17588:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "17588:19:7"
																											}
																										],
																										"functionName": {
																											"name": "calldataload",
																											"nativeSrc": "17575:12:7",
																											"nodeType": "YulIdentifier",
																											"src": "17575:12:7"
																										},
																										"nativeSrc": "17575:33:7",
																										"nodeType": "YulFunctionCall",
																										"src": "17575:33:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17560:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "17560:6:7"
																								},
																								"nativeSrc": "17560:49:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17560:49:7"
																							},
																							"nativeSrc": "17560:49:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "17560:49:7"
																						},
																						{
																							"nativeSrc": "17626:24:7",
																							"nodeType": "YulAssignment",
																							"src": "17626:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17640:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "17640:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17648:1:7",
																										"nodeType": "YulLiteral",
																										"src": "17648:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17636:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "17636:3:7"
																								},
																								"nativeSrc": "17636:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17636:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "17626:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "17626:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "17667:31:7",
																							"nodeType": "YulAssignment",
																							"src": "17667:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "17684:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "17684:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17695:2:7",
																										"nodeType": "YulLiteral",
																										"src": "17695:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17680:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "17680:3:7"
																								},
																								"nativeSrc": "17680:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17680:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "17667:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "17667:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "17508:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "17508:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17511:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "17511:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17505:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "17505:2:7"
																					},
																					"nativeSrc": "17505:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17505:14:7"
																				},
																				"nativeSrc": "17497:215:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "17520:21:7",
																					"nodeType": "YulBlock",
																					"src": "17520:21:7",
																					"statements": [
																						{
																							"nativeSrc": "17522:17:7",
																							"nodeType": "YulAssignment",
																							"src": "17522:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "17531:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "17531:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "17534:4:7",
																										"nodeType": "YulLiteral",
																										"src": "17534:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "17527:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "17527:3:7"
																								},
																								"nativeSrc": "17527:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17527:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "17522:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "17522:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "17501:3:7",
																					"nodeType": "YulBlock",
																					"src": "17501:3:7",
																					"statements": []
																				},
																				"src": "17497:215:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "17748:163:7",
																					"nodeType": "YulBlock",
																					"src": "17748:163:7",
																					"statements": [
																						{
																							"nativeSrc": "17766:50:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "17766:50:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "17800:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "17800:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "17805:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "17805:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "17796:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "17796:3:7"
																										},
																										"nativeSrc": "17796:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "17796:19:7"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nativeSrc": "17783:12:7",
																									"nodeType": "YulIdentifier",
																									"src": "17783:12:7"
																								},
																								"nativeSrc": "17783:33:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17783:33:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "17770:9:7",
																									"nodeType": "YulTypedName",
																									"src": "17770:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "17840:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "17840:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "17867:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "17867:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "17882:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "17882:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "17890:4:7",
																														"nodeType": "YulLiteral",
																														"src": "17890:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "17878:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "17878:3:7"
																												},
																												"nativeSrc": "17878:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "17878:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "17848:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "17848:18:7"
																										},
																										"nativeSrc": "17848:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "17848:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "17833:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "17833:6:7"
																								},
																								"nativeSrc": "17833:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "17833:64:7"
																							},
																							"nativeSrc": "17833:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "17833:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "17731:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "17731:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "17740:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "17740:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "17728:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "17728:2:7"
																					},
																					"nativeSrc": "17728:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17728:19:7"
																				},
																				"nativeSrc": "17725:186:7",
																				"nodeType": "YulIf",
																				"src": "17725:186:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "17931:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "17931:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "17945:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "17945:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "17953:1:7",
																											"nodeType": "YulLiteral",
																											"src": "17953:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "17941:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "17941:3:7"
																									},
																									"nativeSrc": "17941:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "17941:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "17957:1:7",
																									"nodeType": "YulLiteral",
																									"src": "17957:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "17937:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "17937:3:7"
																							},
																							"nativeSrc": "17937:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "17937:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "17924:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "17924:6:7"
																					},
																					"nativeSrc": "17924:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17924:36:7"
																				},
																				"nativeSrc": "17924:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "17924:36:7"
																			}
																		]
																	},
																	"nativeSrc": "17338:632:7",
																	"nodeType": "YulCase",
																	"src": "17338:632:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17343:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "17987:229:7",
																		"nodeType": "YulBlock",
																		"src": "17987:229:7",
																		"statements": [
																			{
																				"nativeSrc": "18001:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "18001:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "18014:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18014:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "18005:5:7",
																						"nodeType": "YulTypedName",
																						"src": "18005:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "18038:74:7",
																					"nodeType": "YulBlock",
																					"src": "18038:74:7",
																					"statements": [
																						{
																							"nativeSrc": "18056:42:7",
																							"nodeType": "YulAssignment",
																							"src": "18056:42:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "18082:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "18082:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "18087:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "18087:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "18078:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "18078:3:7"
																										},
																										"nativeSrc": "18078:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "18078:19:7"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nativeSrc": "18065:12:7",
																									"nodeType": "YulIdentifier",
																									"src": "18065:12:7"
																								},
																								"nativeSrc": "18065:33:7",
																								"nodeType": "YulFunctionCall",
																								"src": "18065:33:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "18056:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "18056:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "18031:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "18031:6:7"
																				},
																				"nativeSrc": "18028:84:7",
																				"nodeType": "YulIf",
																				"src": "18028:84:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "18132:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "18132:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "18191:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "18191:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "18198:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "18198:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "18138:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "18138:52:7"
																							},
																							"nativeSrc": "18138:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "18138:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "18125:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "18125:6:7"
																					},
																					"nativeSrc": "18125:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18125:81:7"
																				},
																				"nativeSrc": "18125:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "18125:81:7"
																			}
																		]
																	},
																	"nativeSrc": "17979:237:7",
																	"nodeType": "YulCase",
																	"src": "17979:237:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "17318:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17318:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17326:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17326:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17315:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17315:2:7"
																},
																"nativeSrc": "17315:14:7",
																"nodeType": "YulFunctionCall",
																"src": "17315:14:7"
															},
															"nativeSrc": "17308:908:7",
															"nodeType": "YulSwitch",
															"src": "17308:908:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage",
												"nativeSrc": "16819:1403:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16902:4:7",
														"nodeType": "YulTypedName",
														"src": "16902:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "16908:3:7",
														"nodeType": "YulTypedName",
														"src": "16908:3:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "16913:3:7",
														"nodeType": "YulTypedName",
														"src": "16913:3:7",
														"type": ""
													}
												],
												"src": "16819:1403:7"
											},
											{
												"body": {
													"nativeSrc": "18256:152:7",
													"nodeType": "YulBlock",
													"src": "18256:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18273:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18273:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18276:77:7",
																		"nodeType": "YulLiteral",
																		"src": "18276:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18266:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18266:6:7"
																},
																"nativeSrc": "18266:88:7",
																"nodeType": "YulFunctionCall",
																"src": "18266:88:7"
															},
															"nativeSrc": "18266:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "18266:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18370:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18373:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18373:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18363:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18363:6:7"
																},
																"nativeSrc": "18363:15:7",
																"nodeType": "YulFunctionCall",
																"src": "18363:15:7"
															},
															"nativeSrc": "18363:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "18363:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18394:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18394:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18397:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18397:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18387:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18387:6:7"
																},
																"nativeSrc": "18387:15:7",
																"nodeType": "YulFunctionCall",
																"src": "18387:15:7"
															},
															"nativeSrc": "18387:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "18387:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "18228:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "18228:180:7"
											},
											{
												"body": {
													"nativeSrc": "18459:149:7",
													"nodeType": "YulBlock",
													"src": "18459:149:7",
													"statements": [
														{
															"nativeSrc": "18469:25:7",
															"nodeType": "YulAssignment",
															"src": "18469:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18492:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18492:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18474:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "18474:17:7"
																},
																"nativeSrc": "18474:20:7",
																"nodeType": "YulFunctionCall",
																"src": "18474:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18469:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "18469:1:7"
																}
															]
														},
														{
															"nativeSrc": "18503:25:7",
															"nodeType": "YulAssignment",
															"src": "18503:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18526:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18526:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18508:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "18508:17:7"
																},
																"nativeSrc": "18508:20:7",
																"nodeType": "YulFunctionCall",
																"src": "18508:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18503:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "18503:1:7"
																}
															]
														},
														{
															"nativeSrc": "18537:17:7",
															"nodeType": "YulAssignment",
															"src": "18537:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18549:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18549:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18552:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18552:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18545:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18545:3:7"
																},
																"nativeSrc": "18545:9:7",
																"nodeType": "YulFunctionCall",
																"src": "18545:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "18537:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18537:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18579:22:7",
																"nodeType": "YulBlock",
																"src": "18579:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18581:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "18581:16:7"
																			},
																			"nativeSrc": "18581:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18581:18:7"
																		},
																		"nativeSrc": "18581:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18581:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "18570:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18570:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "18576:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18576:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18567:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18567:2:7"
																},
																"nativeSrc": "18567:11:7",
																"nodeType": "YulFunctionCall",
																"src": "18567:11:7"
															},
															"nativeSrc": "18564:37:7",
															"nodeType": "YulIf",
															"src": "18564:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "18414:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18445:1:7",
														"nodeType": "YulTypedName",
														"src": "18445:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18448:1:7",
														"nodeType": "YulTypedName",
														"src": "18448:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "18454:4:7",
														"nodeType": "YulTypedName",
														"src": "18454:4:7",
														"type": ""
													}
												],
												"src": "18414:194:7"
											},
											{
												"body": {
													"nativeSrc": "18642:152:7",
													"nodeType": "YulBlock",
													"src": "18642:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18659:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18659:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18662:77:7",
																		"nodeType": "YulLiteral",
																		"src": "18662:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18652:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18652:6:7"
																},
																"nativeSrc": "18652:88:7",
																"nodeType": "YulFunctionCall",
																"src": "18652:88:7"
															},
															"nativeSrc": "18652:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "18652:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18756:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18756:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18759:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18759:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18749:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18749:6:7"
																},
																"nativeSrc": "18749:15:7",
																"nodeType": "YulFunctionCall",
																"src": "18749:15:7"
															},
															"nativeSrc": "18749:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "18749:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18780:1:7",
																		"nodeType": "YulLiteral",
																		"src": "18780:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18783:4:7",
																		"nodeType": "YulLiteral",
																		"src": "18783:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18773:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18773:6:7"
																},
																"nativeSrc": "18773:15:7",
																"nodeType": "YulFunctionCall",
																"src": "18773:15:7"
															},
															"nativeSrc": "18773:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "18773:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "18614:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "18614:180:7"
											},
											{
												"body": {
													"nativeSrc": "18844:147:7",
													"nodeType": "YulBlock",
													"src": "18844:147:7",
													"statements": [
														{
															"nativeSrc": "18854:25:7",
															"nodeType": "YulAssignment",
															"src": "18854:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18877:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18877:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18859:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "18859:17:7"
																},
																"nativeSrc": "18859:20:7",
																"nodeType": "YulFunctionCall",
																"src": "18859:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18854:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "18854:1:7"
																}
															]
														},
														{
															"nativeSrc": "18888:25:7",
															"nodeType": "YulAssignment",
															"src": "18888:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18911:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18911:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18893:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "18893:17:7"
																},
																"nativeSrc": "18893:20:7",
																"nodeType": "YulFunctionCall",
																"src": "18893:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18888:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "18888:1:7"
																}
															]
														},
														{
															"nativeSrc": "18922:16:7",
															"nodeType": "YulAssignment",
															"src": "18922:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18933:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18933:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18936:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18936:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18929:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18929:3:7"
																},
																"nativeSrc": "18929:9:7",
																"nodeType": "YulFunctionCall",
																"src": "18929:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "18922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18922:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18962:22:7",
																"nodeType": "YulBlock",
																"src": "18962:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18964:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "18964:16:7"
																			},
																			"nativeSrc": "18964:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18964:18:7"
																		},
																		"nativeSrc": "18964:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18964:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18954:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "18954:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "18957:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18957:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18951:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18951:2:7"
																},
																"nativeSrc": "18951:10:7",
																"nodeType": "YulFunctionCall",
																"src": "18951:10:7"
															},
															"nativeSrc": "18948:36:7",
															"nodeType": "YulIf",
															"src": "18948:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "18800:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18831:1:7",
														"nodeType": "YulTypedName",
														"src": "18831:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18834:1:7",
														"nodeType": "YulTypedName",
														"src": "18834:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "18840:3:7",
														"nodeType": "YulTypedName",
														"src": "18840:3:7",
														"type": ""
													}
												],
												"src": "18800:191:7"
											},
											{
												"body": {
													"nativeSrc": "19025:152:7",
													"nodeType": "YulBlock",
													"src": "19025:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19042:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19042:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19045:77:7",
																		"nodeType": "YulLiteral",
																		"src": "19045:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19035:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19035:6:7"
																},
																"nativeSrc": "19035:88:7",
																"nodeType": "YulFunctionCall",
																"src": "19035:88:7"
															},
															"nativeSrc": "19035:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "19035:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19139:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19139:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19142:4:7",
																		"nodeType": "YulLiteral",
																		"src": "19142:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19132:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19132:6:7"
																},
																"nativeSrc": "19132:15:7",
																"nodeType": "YulFunctionCall",
																"src": "19132:15:7"
															},
															"nativeSrc": "19132:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "19132:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19163:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19163:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19166:4:7",
																		"nodeType": "YulLiteral",
																		"src": "19166:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19156:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19156:6:7"
																},
																"nativeSrc": "19156:15:7",
																"nodeType": "YulFunctionCall",
																"src": "19156:15:7"
															},
															"nativeSrc": "19156:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "19156:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "18997:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "18997:180:7"
											},
											{
												"body": {
													"nativeSrc": "19248:53:7",
													"nodeType": "YulBlock",
													"src": "19248:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19265:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19288:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "19288:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "19270:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "19270:17:7"
																		},
																		"nativeSrc": "19270:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19270:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19258:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19258:6:7"
																},
																"nativeSrc": "19258:37:7",
																"nodeType": "YulFunctionCall",
																"src": "19258:37:7"
															},
															"nativeSrc": "19258:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "19258:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "19183:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19236:5:7",
														"nodeType": "YulTypedName",
														"src": "19236:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19243:3:7",
														"nodeType": "YulTypedName",
														"src": "19243:3:7",
														"type": ""
													}
												],
												"src": "19183:118:7"
											},
											{
												"body": {
													"nativeSrc": "19461:288:7",
													"nodeType": "YulBlock",
													"src": "19461:288:7",
													"statements": [
														{
															"nativeSrc": "19471:26:7",
															"nodeType": "YulAssignment",
															"src": "19471:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19483:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19483:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19494:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19494:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19479:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19479:3:7"
																},
																"nativeSrc": "19479:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19479:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19471:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19471:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19551:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19551:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19564:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19564:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19575:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19575:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19560:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19560:3:7"
																		},
																		"nativeSrc": "19560:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19560:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19507:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19507:43:7"
																},
																"nativeSrc": "19507:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19507:71:7"
															},
															"nativeSrc": "19507:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19507:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19632:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19632:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19645:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19645:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19656:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19656:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19641:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19641:3:7"
																		},
																		"nativeSrc": "19641:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19641:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19588:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19588:43:7"
																},
																"nativeSrc": "19588:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19588:72:7"
															},
															"nativeSrc": "19588:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19588:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19714:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19714:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19727:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19727:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19738:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19738:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19723:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19723:3:7"
																		},
																		"nativeSrc": "19723:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19723:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19670:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19670:43:7"
																},
																"nativeSrc": "19670:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19670:72:7"
															},
															"nativeSrc": "19670:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19670:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19307:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19417:9:7",
														"nodeType": "YulTypedName",
														"src": "19417:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19429:6:7",
														"nodeType": "YulTypedName",
														"src": "19429:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19437:6:7",
														"nodeType": "YulTypedName",
														"src": "19437:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19445:6:7",
														"nodeType": "YulTypedName",
														"src": "19445:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19456:4:7",
														"nodeType": "YulTypedName",
														"src": "19456:4:7",
														"type": ""
													}
												],
												"src": "19307:442:7"
											},
											{
												"body": {
													"nativeSrc": "19853:124:7",
													"nodeType": "YulBlock",
													"src": "19853:124:7",
													"statements": [
														{
															"nativeSrc": "19863:26:7",
															"nodeType": "YulAssignment",
															"src": "19863:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19875:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19875:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19886:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19886:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19871:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19871:3:7"
																},
																"nativeSrc": "19871:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19871:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19863:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19863:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19943:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19943:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19956:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19956:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19967:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19967:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19952:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19952:3:7"
																		},
																		"nativeSrc": "19952:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19952:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19899:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19899:43:7"
																},
																"nativeSrc": "19899:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19899:71:7"
															},
															"nativeSrc": "19899:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19899:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "19755:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19825:9:7",
														"nodeType": "YulTypedName",
														"src": "19825:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19837:6:7",
														"nodeType": "YulTypedName",
														"src": "19837:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19848:4:7",
														"nodeType": "YulTypedName",
														"src": "19848:4:7",
														"type": ""
													}
												],
												"src": "19755:222:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_enum$_Votes_$1454(value) {\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Votes_$1454(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Votes_$1454(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_Votes_$1454(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Votes_$1454(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct WeightedVoting.IssueView -> struct WeightedVoting.IssueView\n    function abi_encode_t_struct$_IssueView_$1450_memory_ptr_to_t_struct$_IssueView_$1450_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x0120)\n\n        {\n            // voters\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // issueDesc\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // votesFor\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // votesAgainst\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // votesAbstain\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // totalVotes\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // quorum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // passed\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // closed\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0100))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_IssueView_$1450_memory_ptr__to_t_struct$_IssueView_$1450_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_IssueView_$1450_memory_ptr_to_t_struct$_IssueView_$1450_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_length_t_string_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len) {\n\n        let newLen := array_length_t_string_calldata_ptr(src, len)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := calldataload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c806373b2e80e11610095578063976b311311610064578063976b3113146102c0578063a9059cbb146102f0578063d5abeb0114610320578063dd62ed3e1461033e576100fe565b806373b2e80e146102265780638615d85514610256578063943e82161461028657806395d89b41146102a2576100fe565b806327e235e3116100d157806327e235e31461019e578063313ce567146101ce5780634e71d92d146101ec57806370a08231146101f6576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a61036e565b60405161011791906113ca565b60405180910390f35b61013a6004803603810190610135919061147f565b6103fe565b60405161014791906114d7565b60405180910390f35b610158610420565b60405161016591906114ff565b60405180910390f35b61018860048036038101906101839190611518565b610429565b60405161019591906114d7565b60405180910390f35b6101b860048036038101906101b39190611568565b610457565b6040516101c591906114ff565b60405180910390f35b6101d661046c565b6040516101e391906115ae565b60405180910390f35b6101f4610474565b005b610210600480360381019061020b9190611568565b610599565b60405161021d91906114ff565b60405180910390f35b610240600480360381019061023b9190611568565b6105de565b60405161024d91906114d7565b60405180910390f35b610270600480360381019061026b9190611628565b6105fb565b60405161027d91906114ff565b60405180910390f35b6102a0600480360381019061029b91906116a8565b6106e3565b005b6102aa61093c565b6040516102b791906113ca565b60405180910390f35b6102da60048036038101906102d591906116e6565b6109cc565b6040516102e791906118f7565b60405180910390f35b61030a6004803603810190610305919061147f565b610b0c565b60405161031791906114d7565b60405180910390f35b610328610b2e565b60405161033591906114ff565b60405180910390f35b61035860048036038101906103539190611917565b610b34565b60405161036591906114ff565b60405180910390f35b60606003805461037d90611982565b80601f01602080910402602001604051908101604052809291908181526020018280546103a990611982565b80156103f45780601f106103cb576101008083540402835291602001916103f4565b820191905f5260205f20905b8154815290600101906020018083116103d757829003601f168201915b5050505050905090565b5f80610408610bb6565b9050610415818585610bbd565b600191505092915050565b5f600254905090565b5f80610433610bb6565b9050610440858285610bcf565b61044b858585610c61565b60019150509392505050565b6005602052805f5260405f205f915090505481565b5f6012905090565b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156104f5576040517f0b1327a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600754610500610420565b10610537576040517fcbe2483100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610597336064610d51565b565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6006602052805f5260405f205f915054906101000a900460ff1681565b5f8061060633610599565b0361063d576040517f8439960d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610645610420565b82111561068957816040517f589a495200000000000000000000000000000000000000000000000000000000815260040161068091906114ff565b60405180910390fd5b5f600860018160018154018082558091505003905f5260205f209060090201905084848260020191826106bd929190611b86565b5082816007018190555060016008805490506106d99190611c80565b9150509392505050565b5f600883815481106106f8576106f7611cb3565b5b905f5260205f20906009020190508060080160019054906101000a900460ff161561074f576040517f66b6cb4a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61076433825f01610dd090919063ffffffff16565b1561079b576040517f7c9a1cf900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6107a533610599565b036107dc576040517f8439960d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107f133825f01610dfd90919063ffffffff16565b506107fb33610599565b816006015f82825461080d9190611ce0565b925050819055505f600281111561082757610826611d13565b5b82600281111561083a57610839611d13565b5b036108665761084833610599565b816003015f82825461085a9190611ce0565b925050819055506108dd565b6001600281111561087a57610879611d13565b5b82600281111561088d5761088c611d13565b5b036108b95761089b33610599565b816004015f8282546108ad9190611ce0565b925050819055506108dc565b6108c233610599565b816005015f8282546108d49190611ce0565b925050819055505b5b806007015481600601541061093757806004015481600301541115610919576001816008015f6101000a81548160ff0219169083151502179055505b60018160080160016101000a81548160ff0219169083151502179055505b505050565b60606004805461094b90611982565b80601f016020809104026020016040519081016040528092919081815260200182805461097790611982565b80156109c25780601f10610999576101008083540402835291602001916109c2565b820191905f5260205f20905b8154815290600101906020018083116109a557829003601f168201915b5050505050905090565b6109d4611311565b5f600883815481106109e9576109e8611cb3565b5b905f5260205f2090600902019050604051806101200160405280610a0e835f01610e2a565b8152602001826002018054610a2290611982565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4e90611982565b8015610a995780601f10610a7057610100808354040283529160200191610a99565b820191905f5260205f20905b815481529060010190602001808311610a7c57829003601f168201915b505050505081526020018260030154815260200182600401548152602001826005015481526020018260060154815260200182600701548152602001826008015f9054906101000a900460ff16151581526020018260080160019054906101000a900460ff161515815250915050919050565b5f80610b16610bb6565b9050610b23818585610c61565b600191505092915050565b60075481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b610bca8383836001610e49565b505050565b5f610bda8484610b34565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c5b5781811015610c4c578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c4393929190611d4f565b60405180910390fd5b610c5a84848484035f610e49565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cd1575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610cc89190611d84565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d41575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d389190611d84565b60405180910390fd5b610d4c838383611018565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dc1575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610db89190611d84565b60405180910390fd5b610dcc5f8383611018565b5050565b5f610df5835f018373ffffffffffffffffffffffffffffffffffffffff165f1b611231565b905092915050565b5f610e22835f018373ffffffffffffffffffffffffffffffffffffffff165f1b611251565b905092915050565b60605f610e38835f016112b8565b905060608190508092505050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610eb9575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610eb09190611d84565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f29575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f209190611d84565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611012578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161100991906114ff565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611068578060025f82825461105c9190611ce0565b92505081905550611136565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110f1578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110e893929190611d4f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361117d578060025f82825403925050819055506111c7565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161122491906114ff565b60405180910390a3505050565b5f80836001015f8481526020019081526020015f20541415905092915050565b5f61125c8383611231565b6112ae57825f0182908060018154018082558091505060019003905f5260205f20015f9091909190915055825f0180549050836001015f8481526020019081526020015f2081905550600190506112b2565b5f90505b92915050565b6060815f0180548060200260200160405190810160405280929190818152602001828054801561130557602002820191905f5260205f20905b8154815260200190600101908083116112f1575b50505050509050919050565b60405180610120016040528060608152602001606081526020015f81526020015f81526020015f81526020015f81526020015f81526020015f151581526020015f151581525090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61139c8261135a565b6113a68185611364565b93506113b6818560208601611374565b6113bf81611382565b840191505092915050565b5f6020820190508181035f8301526113e28184611392565b905092915050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61141b826113f2565b9050919050565b61142b81611411565b8114611435575f80fd5b50565b5f8135905061144681611422565b92915050565b5f819050919050565b61145e8161144c565b8114611468575f80fd5b50565b5f8135905061147981611455565b92915050565b5f8060408385031215611495576114946113ea565b5b5f6114a285828601611438565b92505060206114b38582860161146b565b9150509250929050565b5f8115159050919050565b6114d1816114bd565b82525050565b5f6020820190506114ea5f8301846114c8565b92915050565b6114f98161144c565b82525050565b5f6020820190506115125f8301846114f0565b92915050565b5f805f6060848603121561152f5761152e6113ea565b5b5f61153c86828701611438565b935050602061154d86828701611438565b925050604061155e8682870161146b565b9150509250925092565b5f6020828403121561157d5761157c6113ea565b5b5f61158a84828501611438565b91505092915050565b5f60ff82169050919050565b6115a881611593565b82525050565b5f6020820190506115c15f83018461159f565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126115e8576115e76115c7565b5b8235905067ffffffffffffffff811115611605576116046115cb565b5b602083019150836001820283011115611621576116206115cf565b5b9250929050565b5f805f6040848603121561163f5761163e6113ea565b5b5f84013567ffffffffffffffff81111561165c5761165b6113ee565b5b611668868287016115d3565b9350935050602061167b8682870161146b565b9150509250925092565b60038110611691575f80fd5b50565b5f813590506116a281611685565b92915050565b5f80604083850312156116be576116bd6113ea565b5b5f6116cb8582860161146b565b92505060206116dc85828601611694565b9150509250929050565b5f602082840312156116fb576116fa6113ea565b5b5f6117088482850161146b565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61174381611411565b82525050565b5f611754838361173a565b60208301905092915050565b5f602082019050919050565b5f61177682611711565b611780818561171b565b935061178b8361172b565b805f5b838110156117bb5781516117a28882611749565b97506117ad83611760565b92505060018101905061178e565b5085935050505092915050565b5f82825260208201905092915050565b5f6117e28261135a565b6117ec81856117c8565b93506117fc818560208601611374565b61180581611382565b840191505092915050565b6118198161144c565b82525050565b611828816114bd565b82525050565b5f61012083015f8301518482035f860152611849828261176c565b9150506020830151848203602086015261186382826117d8565b91505060408301516118786040860182611810565b50606083015161188b6060860182611810565b50608083015161189e6080860182611810565b5060a08301516118b160a0860182611810565b5060c08301516118c460c0860182611810565b5060e08301516118d760e086018261181f565b506101008301516118ec61010086018261181f565b508091505092915050565b5f6020820190508181035f83015261190f818461182e565b905092915050565b5f806040838503121561192d5761192c6113ea565b5b5f61193a85828601611438565b925050602061194b85828601611438565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061199957607f821691505b6020821081036119ac576119ab611955565b5b50919050565b5f82905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611a457fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a0a565b611a4f8683611a0a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f611a8a611a85611a808461144c565b611a67565b61144c565b9050919050565b5f819050919050565b611aa383611a70565b611ab7611aaf82611a91565b848454611a16565b825550505050565b5f90565b611acb611abf565b611ad6818484611a9a565b505050565b5b81811015611af957611aee5f82611ac3565b600181019050611adc565b5050565b601f821115611b3e57611b0f816119e9565b611b18846119fb565b81016020851015611b27578190505b611b3b611b33856119fb565b830182611adb565b50505b505050565b5f82821c905092915050565b5f611b5e5f1984600802611b43565b1980831691505092915050565b5f611b768383611b4f565b9150826002028217905092915050565b611b9083836119b2565b67ffffffffffffffff811115611ba957611ba86119bc565b5b611bb38254611982565b611bbe828285611afd565b5f601f831160018114611beb575f8415611bd9578287013590505b611be38582611b6b565b865550611c4a565b601f198416611bf9866119e9565b5f5b82811015611c2057848901358255600182019150602085019450602081019050611bfb565b86831015611c3d5784890135611c39601f891682611b4f565b8355505b6001600288020188555050505b50505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c8a8261144c565b9150611c958361144c565b9250828203905081811115611cad57611cac611c53565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611cea8261144c565b9150611cf58361144c565b9250828201905080821115611d0d57611d0c611c53565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b611d4981611411565b82525050565b5f606082019050611d625f830186611d40565b611d6f60208301856114f0565b611d7c60408301846114f0565b949350505050565b5f602082019050611d975f830184611d40565b9291505056fea2646970667358221220a58d705dc4b11aad11379170d684ea87aae7a10ae03138ecb1e5e0a968831d0964736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73B2E80E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x976B3113 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x976B3113 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x33E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x73B2E80E EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x8615D855 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x943E8216 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A2 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x27E235E3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH2 0x46C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH2 0x474 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH2 0x93C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x37D SWAP1 PUSH2 0x1982 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A9 SWAP1 PUSH2 0x1982 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x408 PUSH2 0xBB6 JUMP JUMPDEST SWAP1 POP PUSH2 0x415 DUP2 DUP6 DUP6 PUSH2 0xBBD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x433 PUSH2 0xBB6 JUMP JUMPDEST SWAP1 POP PUSH2 0x440 DUP6 DUP3 DUP6 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x44B DUP6 DUP6 DUP6 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB1327A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x500 PUSH2 0x420 JUMP JUMPDEST LT PUSH2 0x537 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCBE2483100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x597 CALLER PUSH1 0x64 PUSH2 0xD51 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x606 CALLER PUSH2 0x599 JUMP JUMPDEST SUB PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8439960D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x645 PUSH2 0x420 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x689 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x589A495200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x680 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP5 DUP5 DUP3 PUSH1 0x2 ADD SWAP2 DUP3 PUSH2 0x6BD SWAP3 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST POP DUP3 DUP2 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0x1C80 JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6F8 JUMPI PUSH2 0x6F7 PUSH2 0x1CB3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP DUP1 PUSH1 0x8 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x74F JUMPI PUSH1 0x40 MLOAD PUSH32 0x66B6CB4A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x764 CALLER DUP3 PUSH0 ADD PUSH2 0xDD0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x7C9A1CF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7A5 CALLER PUSH2 0x599 JUMP JUMPDEST SUB PUSH2 0x7DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8439960D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F1 CALLER DUP3 PUSH0 ADD PUSH2 0xDFD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x7FB CALLER PUSH2 0x599 JUMP JUMPDEST DUP2 PUSH1 0x6 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x80D SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x827 JUMPI PUSH2 0x826 PUSH2 0x1D13 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x83A JUMPI PUSH2 0x839 PUSH2 0x1D13 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x866 JUMPI PUSH2 0x848 CALLER PUSH2 0x599 JUMP JUMPDEST DUP2 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x85A SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x87A JUMPI PUSH2 0x879 PUSH2 0x1D13 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x88D JUMPI PUSH2 0x88C PUSH2 0x1D13 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x8B9 JUMPI PUSH2 0x89B CALLER PUSH2 0x599 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8AD SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8DC JUMP JUMPDEST PUSH2 0x8C2 CALLER PUSH2 0x599 JUMP JUMPDEST DUP2 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8D4 SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 PUSH1 0x7 ADD SLOAD DUP2 PUSH1 0x6 ADD SLOAD LT PUSH2 0x937 JUMPI DUP1 PUSH1 0x4 ADD SLOAD DUP2 PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x919 JUMPI PUSH1 0x1 DUP2 PUSH1 0x8 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x8 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x94B SWAP1 PUSH2 0x1982 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x977 SWAP1 PUSH2 0x1982 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x999 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D4 PUSH2 0x1311 JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9E9 JUMPI PUSH2 0x9E8 PUSH2 0x1CB3 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x9 MUL ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xA0E DUP4 PUSH0 ADD PUSH2 0xE2A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xA22 SWAP1 PUSH2 0x1982 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA4E SWAP1 PUSH2 0x1982 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA99 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA70 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA99 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA7C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x5 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x6 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x7 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x8 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB16 PUSH2 0xBB6 JUMP JUMPDEST SWAP1 POP PUSH2 0xB23 DUP2 DUP6 DUP6 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBCA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE49 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBDA DUP5 DUP5 PUSH2 0xB34 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC5B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC4C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC43 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE49 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC8 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD41 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD38 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD4C DUP4 DUP4 DUP4 PUSH2 0x1018 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDCC PUSH0 DUP4 DUP4 PUSH2 0x1018 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDF5 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1231 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE22 DUP4 PUSH0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 SHL PUSH2 0x1251 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xE38 DUP4 PUSH0 ADD PUSH2 0x12B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEB9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF29 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1012 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1009 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1068 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x105C SWAP2 SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1136 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10F1 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11C7 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x125C DUP4 DUP4 PUSH2 0x1231 JUMP JUMPDEST PUSH2 0x12AE JUMPI DUP3 PUSH0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x12B2 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1305 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x12F1 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x139C DUP3 PUSH2 0x135A JUMP JUMPDEST PUSH2 0x13A6 DUP2 DUP6 PUSH2 0x1364 JUMP JUMPDEST SWAP4 POP PUSH2 0x13B6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x13BF DUP2 PUSH2 0x1382 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13E2 DUP2 DUP5 PUSH2 0x1392 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x141B DUP3 PUSH2 0x13F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x142B DUP2 PUSH2 0x1411 JUMP JUMPDEST DUP2 EQ PUSH2 0x1435 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1446 DUP2 PUSH2 0x1422 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145E DUP2 PUSH2 0x144C JUMP JUMPDEST DUP2 EQ PUSH2 0x1468 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1479 DUP2 PUSH2 0x1455 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1495 JUMPI PUSH2 0x1494 PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14A2 DUP6 DUP3 DUP7 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14B3 DUP6 DUP3 DUP7 ADD PUSH2 0x146B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x14BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14EA PUSH0 DUP4 ADD DUP5 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F9 DUP2 PUSH2 0x144C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1512 PUSH0 DUP4 ADD DUP5 PUSH2 0x14F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x152F JUMPI PUSH2 0x152E PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x153C DUP7 DUP3 DUP8 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x154D DUP7 DUP3 DUP8 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x155E DUP7 DUP3 DUP8 ADD PUSH2 0x146B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157D JUMPI PUSH2 0x157C PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x158A DUP5 DUP3 DUP6 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A8 DUP2 PUSH2 0x1593 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C1 PUSH0 DUP4 ADD DUP5 PUSH2 0x159F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15E8 JUMPI PUSH2 0x15E7 PUSH2 0x15C7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1605 JUMPI PUSH2 0x1604 PUSH2 0x15CB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1621 JUMPI PUSH2 0x1620 PUSH2 0x15CF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163F JUMPI PUSH2 0x163E PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x13EE JUMP JUMPDEST JUMPDEST PUSH2 0x1668 DUP7 DUP3 DUP8 ADD PUSH2 0x15D3 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x167B DUP7 DUP3 DUP8 ADD PUSH2 0x146B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1691 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A2 DUP2 PUSH2 0x1685 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16CB DUP6 DUP3 DUP7 ADD PUSH2 0x146B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16DC DUP6 DUP3 DUP7 ADD PUSH2 0x1694 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16FB JUMPI PUSH2 0x16FA PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1708 DUP5 DUP3 DUP6 ADD PUSH2 0x146B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1743 DUP2 PUSH2 0x1411 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1754 DUP4 DUP4 PUSH2 0x173A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1776 DUP3 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x1780 DUP2 DUP6 PUSH2 0x171B JUMP JUMPDEST SWAP4 POP PUSH2 0x178B DUP4 PUSH2 0x172B JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17BB JUMPI DUP2 MLOAD PUSH2 0x17A2 DUP9 DUP3 PUSH2 0x1749 JUMP JUMPDEST SWAP8 POP PUSH2 0x17AD DUP4 PUSH2 0x1760 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x178E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17E2 DUP3 PUSH2 0x135A JUMP JUMPDEST PUSH2 0x17EC DUP2 DUP6 PUSH2 0x17C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x17FC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x1805 DUP2 PUSH2 0x1382 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1819 DUP2 PUSH2 0x144C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1828 DUP2 PUSH2 0x14BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x1849 DUP3 DUP3 PUSH2 0x176C JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1863 DUP3 DUP3 PUSH2 0x17D8 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1878 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x1810 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x188B PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x1810 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x189E PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x1810 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x18B1 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x1810 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x18C4 PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x1810 JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x18D7 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x181F JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x18EC PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x181F JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x190F DUP2 DUP5 PUSH2 0x182E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x192D JUMPI PUSH2 0x192C PUSH2 0x13EA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x193A DUP6 DUP3 DUP7 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x194B DUP6 DUP3 DUP7 ADD PUSH2 0x1438 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1999 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19AC JUMPI PUSH2 0x19AB PUSH2 0x1955 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A45 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x1A4F DUP7 DUP4 PUSH2 0x1A0A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A8A PUSH2 0x1A85 PUSH2 0x1A80 DUP5 PUSH2 0x144C JUMP JUMPDEST PUSH2 0x1A67 JUMP JUMPDEST PUSH2 0x144C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA3 DUP4 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0x1AB7 PUSH2 0x1AAF DUP3 PUSH2 0x1A91 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1A16 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1ACB PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x1AD6 DUP2 DUP5 DUP5 PUSH2 0x1A9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AF9 JUMPI PUSH2 0x1AEE PUSH0 DUP3 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1ADC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1B3E JUMPI PUSH2 0x1B0F DUP2 PUSH2 0x19E9 JUMP JUMPDEST PUSH2 0x1B18 DUP5 PUSH2 0x19FB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1B27 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1B3B PUSH2 0x1B33 DUP6 PUSH2 0x19FB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1ADB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1B43 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B76 DUP4 DUP4 PUSH2 0x1B4F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B90 DUP4 DUP4 PUSH2 0x19B2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BA9 JUMPI PUSH2 0x1BA8 PUSH2 0x19BC JUMP JUMPDEST JUMPDEST PUSH2 0x1BB3 DUP3 SLOAD PUSH2 0x1982 JUMP JUMPDEST PUSH2 0x1BBE DUP3 DUP3 DUP6 PUSH2 0x1AFD JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1BEB JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1BD9 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x1BE3 DUP6 DUP3 PUSH2 0x1B6B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1C4A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1BF9 DUP7 PUSH2 0x19E9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C20 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1BFB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1C3D JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x1C39 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1B4F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C8A DUP3 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C95 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CAD JUMPI PUSH2 0x1CAC PUSH2 0x1C53 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CEA DUP3 PUSH2 0x144C JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF5 DUP4 PUSH2 0x144C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D0D JUMPI PUSH2 0x1D0C PUSH2 0x1C53 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D49 DUP2 PUSH2 0x1411 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D62 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D40 JUMP JUMPDEST PUSH2 0x1D6F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14F0 JUMP JUMPDEST PUSH2 0x1D7C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14F0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D97 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 DUP14 PUSH17 0x5DC4B11AAD11379170D684EA87AAE7A10A 0xE0 BALANCE CODESIZE 0xEC 0xB1 0xE5 0xE0 0xA9 PUSH9 0x831D0964736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "279:4403:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1048:43:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1890:236:6;;;:::i;:::-;;3299:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1156:42:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2453:400;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3801:878;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2276:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2993:540:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1250:36:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;1048:43:6:-;;;;;;;;;;;;;;;;;:::o;3002:82:1:-;3051:5;3075:2;3068:9;;3002:82;:::o;1890:236:6:-;1929:10;:22;1940:10;1929:22;;;;;;;;;;;;;;;;;;;;;;;;;1925:50;;;1960:15;;;;;;;;;;;;;;1925:50;2007:9;;1990:13;:11;:13::i;:::-;:26;1986:57;;2025:18;;;;;;;;;;;;;;1986:57;2081:4;2056:10;:22;2067:10;2056:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;2096:22;2102:10;2114:3;2096:5;:22::i;:::-;1890:236::o;3299:116:1:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;1156:42:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;2453:400::-;2537:7;2586:1;2561:21;2571:10;2561:9;:21::i;:::-;:26;2557:53;;2596:14;;;;;;;;;;;;;;2557:53;2635:13;:11;:13::i;:::-;2625:7;:23;2621:58;;;2671:7;2657:22;;;;;;;;;;;:::i;:::-;;;;;;;;2621:58;2692:22;2717:6;:13;;;;;;;;;;;;;;;;;;;;;;;;2692:38;;2762:10;;2741:8;:18;;:31;;;;;;;:::i;:::-;;2801:7;2783:8;:15;;:25;;;;2844:1;2828:6;:13;;;;:17;;;;:::i;:::-;2821:24;;;2453:400;;;;;:::o;3801:878::-;3866:19;3888:6;3895:8;3888:16;;;;;;;;:::i;:::-;;;;;;;;;;;;3866:38;;3919:5;:12;;;;;;;;;;;;3915:39;;;3940:14;;;;;;;;;;;;;;3915:39;3969:33;3991:10;3969:5;:12;;:21;;:33;;;;:::i;:::-;3965:60;;;4011:14;;;;;;;;;;;;;;3965:60;4065:1;4040:21;4050:10;4040:9;:21::i;:::-;:26;4036:53;;4075:14;;;;;;;;;;;;;;4036:53;4102:28;4119:10;4102:5;:12;;:16;;:28;;;;:::i;:::-;;4161:21;4171:10;4161:9;:21::i;:::-;4141:5;:16;;;:41;;;;;;;:::i;:::-;;;;;;;;4208:9;4199:18;;;;;;;;:::i;:::-;;:5;:18;;;;;;;;:::i;:::-;;;4195:270;;4252:21;4262:10;4252:9;:21::i;:::-;4234:5;:14;;;:39;;;;;;;:::i;:::-;;;;;;;;4195:270;;;4304:13;4295:22;;;;;;;;:::i;:::-;;:5;:22;;;;;;;;:::i;:::-;;;4291:174;;4356:21;4366:10;4356:9;:21::i;:::-;4334:5;:18;;;:43;;;;;;;:::i;:::-;;;;;;;;4291:174;;;4432:21;4442:10;4432:9;:21::i;:::-;4410:5;:18;;;:43;;;;;;;:::i;:::-;;;;;;;;4291:174;4195:270;4501:5;:12;;;4481:5;:16;;;:32;4477:195;;4551:5;:18;;;4534:5;:14;;;:35;4530:95;;;4605:4;4590:5;:12;;;:19;;;;;;;;;;;;;;;;;;4530:95;4656:4;4641:5;:12;;;:19;;;;;;;;;;;;;;;;;;4477:195;3855:824;3801:878;;:::o;2276:93:1:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;2993:540:6:-;3052:16;;:::i;:::-;3081:19;3103:6;3110:8;3103:16;;;;;;;;:::i;:::-;;;;;;;;;;;;3081:38;;3137:388;;;;;;;;3170:21;:5;:12;;:19;:21::i;:::-;3137:388;;;;3217:5;:15;;3137:388;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3335:5;:14;;;3137:388;;;;3378:5;:18;;;3137:388;;;;3425:5;:18;;;3137:388;;;;3294:5;:16;;;3137:388;;;;3255:5;:12;;;3137:388;;;;3466:5;:12;;;;;;;;;;;;3137:388;;;;;;3501:5;:12;;;;;;;;;;;;3137:388;;;;;3130:395;;;2993:540;;;:::o;3610:178:1:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1250:36:6:-;;;;:::o;3846:140:1:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8871:165:5:-;8951:4;8974:55;8984:3;:10;;9020:5;9004:23;;8996:32;;8974:9;:55::i;:::-;8967:62;;8871:165;;;;:::o;8316:150::-;8386:4;8409:50;8414:3;:10;;8450:5;8434:23;;8426:32;;8409:4;:50::i;:::-;8402:57;;8316:150;;;;:::o;10270:300::-;10333:16;10361:22;10386:19;10394:3;:10;;10386:7;:19::i;:::-;10361:44;;10415:23;10525:5;10515:15;;10557:6;10550:13;;;;10270:300;;;:::o;9949:432:1:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4264:129:5:-;4337:4;4385:1;4360:3;:14;;:21;4375:5;4360:21;;;;;;;;;;;;:26;;4353:33;;4264:129;;;;:::o;2241:406::-;2304:4;2325:21;2335:3;2340:5;2325:9;:21::i;:::-;2320:321;;2362:3;:11;;2379:5;2362:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:3;:11;;:18;;;;2520:3;:14;;:21;2535:5;2520:21;;;;;;;;;;;:42;;;;2583:4;2576:11;;;;2320:321;2625:5;2618:12;;2241:406;;;;;:::o;5581:109::-;5637:16;5672:3;:11;;5665:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5581:109;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:329::-;4375:6;4424:2;4412:9;4403:7;4399:23;4395:32;4392:119;;;4430:79;;:::i;:::-;4392:119;4550:1;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4521:117;4316:329;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:117::-;5190:1;5187;5180:12;5204:117;5313:1;5310;5303:12;5327:117;5436:1;5433;5426:12;5464:553;5522:8;5532:6;5582:3;5575:4;5567:6;5563:17;5559:27;5549:122;;5590:79;;:::i;:::-;5549:122;5703:6;5690:20;5680:30;;5733:18;5725:6;5722:30;5719:117;;;5755:79;;:::i;:::-;5719:117;5869:4;5861:6;5857:17;5845:29;;5923:3;5915:4;5907:6;5903:17;5893:8;5889:32;5886:41;5883:128;;;5930:79;;:::i;:::-;5883:128;5464:553;;;;;:::o;6023:674::-;6103:6;6111;6119;6168:2;6156:9;6147:7;6143:23;6139:32;6136:119;;;6174:79;;:::i;:::-;6136:119;6322:1;6311:9;6307:17;6294:31;6352:18;6344:6;6341:30;6338:117;;;6374:79;;:::i;:::-;6338:117;6487:65;6544:7;6535:6;6524:9;6520:22;6487:65;:::i;:::-;6469:83;;;;6265:297;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6023:674;;;;;:::o;6703:109::-;6786:1;6779:5;6776:12;6766:40;;6802:1;6799;6792:12;6766:40;6703:109;:::o;6818:159::-;6874:5;6912:6;6899:20;6890:29;;6928:43;6965:5;6928:43;:::i;:::-;6818:159;;;;:::o;6983:494::-;7061:6;7069;7118:2;7106:9;7097:7;7093:23;7089:32;7086:119;;;7124:79;;:::i;:::-;7086:119;7244:1;7269:53;7314:7;7305:6;7294:9;7290:22;7269:53;:::i;:::-;7259:63;;7215:117;7371:2;7397:63;7452:7;7443:6;7432:9;7428:22;7397:63;:::i;:::-;7387:73;;7342:128;6983:494;;;;;:::o;7483:329::-;7542:6;7591:2;7579:9;7570:7;7566:23;7562:32;7559:119;;;7597:79;;:::i;:::-;7559:119;7717:1;7742:53;7787:7;7778:6;7767:9;7763:22;7742:53;:::i;:::-;7732:63;;7688:117;7483:329;;;;:::o;7818:114::-;7885:6;7919:5;7913:12;7903:22;;7818:114;;;:::o;7938:174::-;8027:11;8061:6;8056:3;8049:19;8101:4;8096:3;8092:14;8077:29;;7938:174;;;;:::o;8118:132::-;8185:4;8208:3;8200:11;;8238:4;8233:3;8229:14;8221:22;;8118:132;;;:::o;8256:108::-;8333:24;8351:5;8333:24;:::i;:::-;8328:3;8321:37;8256:108;;:::o;8370:179::-;8439:10;8460:46;8502:3;8494:6;8460:46;:::i;:::-;8538:4;8533:3;8529:14;8515:28;;8370:179;;;;:::o;8555:113::-;8625:4;8657;8652:3;8648:14;8640:22;;8555:113;;;:::o;8704:712::-;8813:3;8842:54;8890:5;8842:54;:::i;:::-;8912:76;8981:6;8976:3;8912:76;:::i;:::-;8905:83;;9012:56;9062:5;9012:56;:::i;:::-;9091:7;9122:1;9107:284;9132:6;9129:1;9126:13;9107:284;;;9208:6;9202:13;9235:63;9294:3;9279:13;9235:63;:::i;:::-;9228:70;;9321:60;9374:6;9321:60;:::i;:::-;9311:70;;9167:224;9154:1;9151;9147:9;9142:14;;9107:284;;;9111:14;9407:3;9400:10;;8818:598;;;8704:712;;;;:::o;9422:159::-;9496:11;9530:6;9525:3;9518:19;9570:4;9565:3;9561:14;9546:29;;9422:159;;;;:::o;9587:357::-;9665:3;9693:39;9726:5;9693:39;:::i;:::-;9748:61;9802:6;9797:3;9748:61;:::i;:::-;9741:68;;9818:65;9876:6;9871:3;9864:4;9857:5;9853:16;9818:65;:::i;:::-;9908:29;9930:6;9908:29;:::i;:::-;9903:3;9899:39;9892:46;;9669:275;9587:357;;;;:::o;9950:108::-;10027:24;10045:5;10027:24;:::i;:::-;10022:3;10015:37;9950:108;;:::o;10064:99::-;10135:21;10150:5;10135:21;:::i;:::-;10130:3;10123:34;10064:99;;:::o;10243:1962::-;10366:3;10402:6;10397:3;10393:16;10493:4;10486:5;10482:16;10476:23;10546:3;10540:4;10536:14;10529:4;10524:3;10520:14;10513:38;10572:103;10670:4;10656:12;10572:103;:::i;:::-;10564:111;;10419:267;10773:4;10766:5;10762:16;10756:23;10826:3;10820:4;10816:14;10809:4;10804:3;10800:14;10793:38;10852:73;10920:4;10906:12;10852:73;:::i;:::-;10844:81;;10696:240;11022:4;11015:5;11011:16;11005:23;11041:63;11098:4;11093:3;11089:14;11075:12;11041:63;:::i;:::-;10946:168;11204:4;11197:5;11193:16;11187:23;11223:63;11280:4;11275:3;11271:14;11257:12;11223:63;:::i;:::-;11124:172;11386:4;11379:5;11375:16;11369:23;11405:63;11462:4;11457:3;11453:14;11439:12;11405:63;:::i;:::-;11306:172;11566:4;11559:5;11555:16;11549:23;11585:63;11642:4;11637:3;11633:14;11619:12;11585:63;:::i;:::-;11488:170;11742:4;11735:5;11731:16;11725:23;11761:63;11818:4;11813:3;11809:14;11795:12;11761:63;:::i;:::-;11668:166;11918:4;11911:5;11907:16;11901:23;11937:57;11988:4;11983:3;11979:14;11965:12;11937:57;:::i;:::-;11844:160;12088:6;12081:5;12077:18;12071:25;12109:59;12160:6;12155:3;12151:16;12137:12;12109:59;:::i;:::-;12014:164;12195:4;12188:11;;10371:1834;10243:1962;;;;:::o;12211:381::-;12358:4;12396:2;12385:9;12381:18;12373:26;;12445:9;12439:4;12435:20;12431:1;12420:9;12416:17;12409:47;12473:112;12580:4;12571:6;12473:112;:::i;:::-;12465:120;;12211:381;;;;:::o;12598:474::-;12666:6;12674;12723:2;12711:9;12702:7;12698:23;12694:32;12691:119;;;12729:79;;:::i;:::-;12691:119;12849:1;12874:53;12919:7;12910:6;12899:9;12895:22;12874:53;:::i;:::-;12864:63;;12820:117;12976:2;13002:53;13047:7;13038:6;13027:9;13023:22;13002:53;:::i;:::-;12992:63;;12947:118;12598:474;;;;;:::o;13078:180::-;13126:77;13123:1;13116:88;13223:4;13220:1;13213:15;13247:4;13244:1;13237:15;13264:320;13308:6;13345:1;13339:4;13335:12;13325:22;;13392:1;13386:4;13382:12;13413:18;13403:81;;13469:4;13461:6;13457:17;13447:27;;13403:81;13531:2;13523:6;13520:14;13500:18;13497:38;13494:84;;13550:18;;:::i;:::-;13494:84;13315:269;13264:320;;;:::o;13590:97::-;13649:6;13677:3;13667:13;;13590:97;;;;:::o;13693:180::-;13741:77;13738:1;13731:88;13838:4;13835:1;13828:15;13862:4;13859:1;13852:15;13879:141;13928:4;13951:3;13943:11;;13974:3;13971:1;13964:14;14008:4;14005:1;13995:18;13987:26;;13879:141;;;:::o;14026:93::-;14063:6;14110:2;14105;14098:5;14094:14;14090:23;14080:33;;14026:93;;;:::o;14125:107::-;14169:8;14219:5;14213:4;14209:16;14188:37;;14125:107;;;;:::o;14238:393::-;14307:6;14357:1;14345:10;14341:18;14380:97;14410:66;14399:9;14380:97;:::i;:::-;14498:39;14528:8;14517:9;14498:39;:::i;:::-;14486:51;;14570:4;14566:9;14559:5;14555:21;14546:30;;14619:4;14609:8;14605:19;14598:5;14595:30;14585:40;;14314:317;;14238:393;;;;;:::o;14637:60::-;14665:3;14686:5;14679:12;;14637:60;;;:::o;14703:142::-;14753:9;14786:53;14804:34;14813:24;14831:5;14813:24;:::i;:::-;14804:34;:::i;:::-;14786:53;:::i;:::-;14773:66;;14703:142;;;:::o;14851:75::-;14894:3;14915:5;14908:12;;14851:75;;;:::o;14932:269::-;15042:39;15073:7;15042:39;:::i;:::-;15103:91;15152:41;15176:16;15152:41;:::i;:::-;15144:6;15137:4;15131:11;15103:91;:::i;:::-;15097:4;15090:105;15008:193;14932:269;;;:::o;15207:73::-;15252:3;15207:73;:::o;15286:189::-;15363:32;;:::i;:::-;15404:65;15462:6;15454;15448:4;15404:65;:::i;:::-;15339:136;15286:189;;:::o;15481:186::-;15541:120;15558:3;15551:5;15548:14;15541:120;;;15612:39;15649:1;15642:5;15612:39;:::i;:::-;15585:1;15578:5;15574:13;15565:22;;15541:120;;;15481:186;;:::o;15673:543::-;15774:2;15769:3;15766:11;15763:446;;;15808:38;15840:5;15808:38;:::i;:::-;15892:29;15910:10;15892:29;:::i;:::-;15882:8;15878:44;16075:2;16063:10;16060:18;16057:49;;;16096:8;16081:23;;16057:49;16119:80;16175:22;16193:3;16175:22;:::i;:::-;16165:8;16161:37;16148:11;16119:80;:::i;:::-;15778:431;;15763:446;15673:543;;;:::o;16222:117::-;16276:8;16326:5;16320:4;16316:16;16295:37;;16222:117;;;;:::o;16345:169::-;16389:6;16422:51;16470:1;16466:6;16458:5;16455:1;16451:13;16422:51;:::i;:::-;16418:56;16503:4;16497;16493:15;16483:25;;16396:118;16345:169;;;;:::o;16519:295::-;16595:4;16741:29;16766:3;16760:4;16741:29;:::i;:::-;16733:37;;16803:3;16800:1;16796:11;16790:4;16787:21;16779:29;;16519:295;;;;:::o;16819:1403::-;16943:44;16983:3;16978;16943:44;:::i;:::-;17052:18;17044:6;17041:30;17038:56;;;17074:18;;:::i;:::-;17038:56;17118:38;17150:4;17144:11;17118:38;:::i;:::-;17203:67;17263:6;17255;17249:4;17203:67;:::i;:::-;17297:1;17326:2;17318:6;17315:14;17343:1;17338:632;;;;18014:1;18031:6;18028:84;;;18087:9;18082:3;18078:19;18065:33;18056:42;;18028:84;18138:67;18198:6;18191:5;18138:67;:::i;:::-;18132:4;18125:81;17987:229;17308:908;;17338:632;17390:4;17386:9;17378:6;17374:22;17424:37;17456:4;17424:37;:::i;:::-;17483:1;17497:215;17511:7;17508:1;17505:14;17497:215;;;17597:9;17592:3;17588:19;17575:33;17567:6;17560:49;17648:1;17640:6;17636:14;17626:24;;17695:2;17684:9;17680:18;17667:31;;17534:4;17531:1;17527:12;17522:17;;17497:215;;;17740:6;17731:7;17728:19;17725:186;;;17805:9;17800:3;17796:19;17783:33;17848:48;17890:4;17882:6;17878:17;17867:9;17848:48;:::i;:::-;17840:6;17833:64;17748:163;17725:186;17957:1;17953;17945:6;17941:14;17937:22;17931:4;17924:36;17345:625;;;17308:908;;16918:1304;;;16819:1403;;;:::o;18228:180::-;18276:77;18273:1;18266:88;18373:4;18370:1;18363:15;18397:4;18394:1;18387:15;18414:194;18454:4;18474:20;18492:1;18474:20;:::i;:::-;18469:25;;18508:20;18526:1;18508:20;:::i;:::-;18503:25;;18552:1;18549;18545:9;18537:17;;18576:1;18570:4;18567:11;18564:37;;;18581:18;;:::i;:::-;18564:37;18414:194;;;;:::o;18614:180::-;18662:77;18659:1;18652:88;18759:4;18756:1;18749:15;18783:4;18780:1;18773:15;18800:191;18840:3;18859:20;18877:1;18859:20;:::i;:::-;18854:25;;18893:20;18911:1;18893:20;:::i;:::-;18888:25;;18936:1;18933;18929:9;18922:16;;18957:3;18954:1;18951:10;18948:36;;;18964:18;;:::i;:::-;18948:36;18800:191;;;;:::o;18997:180::-;19045:77;19042:1;19035:88;19142:4;19139:1;19132:15;19166:4;19163:1;19156:15;19183:118;19270:24;19288:5;19270:24;:::i;:::-;19265:3;19258:37;19183:118;;:::o;19307:442::-;19456:4;19494:2;19483:9;19479:18;19471:26;;19507:71;19575:1;19564:9;19560:17;19551:6;19507:71;:::i;:::-;19588:72;19656:2;19645:9;19641:18;19632:6;19588:72;:::i;:::-;19670;19738:2;19727:9;19723:18;19714:6;19670:72;:::i;:::-;19307:442;;;;;;:::o;19755:222::-;19848:4;19886:2;19875:9;19871:18;19863:26;;19899:71;19967:1;19956:9;19952:17;19943:6;19899:71;:::i;:::-;19755:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1527000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"balances(address)": "2825",
								"claim()": "infinite",
								"createIssue(string,uint256)": "infinite",
								"decimals()": "383",
								"getIssue(uint256)": "infinite",
								"hasClaimed(address)": "2856",
								"maxSupply()": "2491",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"vote(uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 279,
									"end": 4682,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 279,
									"end": 4682,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 279,
									"end": 4682,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1277,
									"end": 1286,
									"name": "PUSH",
									"source": 6,
									"value": "F4240"
								},
								{
									"begin": 1250,
									"end": 1286,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1250,
									"end": 1286,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1718,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1718,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1718,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1718,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1545,
									"end": 1718,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1718,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1545,
									"end": 1718,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1718,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1718,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1545,
									"end": 1718,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1545,
									"end": 1718,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "5765696768746564566F74696E67000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "5756000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1600,
									"end": 1622,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1625,
									"end": 1631,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1638,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1600,
									"end": 1638,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1600,
									"end": 1638,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "6275726E74000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1657,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1667,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1649,
									"end": 1667,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1649,
									"end": 1677,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1649,
									"end": 1677,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1706,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1688,
									"end": 1696,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1688,
									"end": 1703,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1688,
									"end": 1710,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1589,
									"end": 1718,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 279,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 279,
									"end": 4682,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 279,
									"end": 4682,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 279,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 279,
									"end": 4682,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 279,
									"end": 4682,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 279,
									"end": 4682,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 279,
									"end": 4682,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 4682,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 279,
									"end": 4682,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 279,
									"end": 4682,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a58d705dc4b11aad11379170d684ea87aae7a10ae03138ecb1e5e0a968831d0964736f6c63430008190033",
									".code": [
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "73B2E80E"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "976B3113"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "976B3113"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "D5ABEB01"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "73B2E80E"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "8615D855"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "943E8216"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "27E235E3"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "27E235E3"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "4E71D92D"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 279,
											"end": 4682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1048,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1048,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1048,
											"end": 1091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 2126,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1890,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1890,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1890,
											"end": 2126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2126,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1890,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2126,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1156,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1156,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1156,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2453,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2453,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2453,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3801,
											"end": 4679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3801,
											"end": 4679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2993,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2993,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2993,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1250,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1250,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 2126,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1890,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1939,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1950,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1929,
											"end": 1951,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1925,
											"end": 1975,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1925,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1925,
											"end": 1975,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "B1327A600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1975,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1925,
											"end": 1975,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1925,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1990,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1990,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2003,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1990,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1986,
											"end": 2043,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "CBE2483100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2025,
											"end": 2043,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1986,
											"end": 2043,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1986,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2085,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2056,
											"end": 2066,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2077,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2102,
											"end": 2112,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2117,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2096,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2096,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2118,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2096,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 2126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2571,
											"end": 2581,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2561,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2582,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2561,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2587,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "PUSH",
											"source": 6,
											"value": "8439960D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2557,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2635,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2635,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2648,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2635,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2625,
											"end": 2648,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2679,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2621,
											"end": 2679,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2678,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "PUSH",
											"source": 6,
											"value": "589A495200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2657,
											"end": 2679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2679,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2679,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2621,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2723,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2730,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2772,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2762,
											"end": 2772,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2749,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2772,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2772,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2741,
											"end": 2772,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2772,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2741,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2772,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2741,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2801,
											"end": 2808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2798,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2783,
											"end": 2798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2808,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2808,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2845,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2828,
											"end": 2834,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2828,
											"end": 2841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2841,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2828,
											"end": 2845,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2828,
											"end": 2845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2845,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2828,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2845,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2845,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2845,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3866,
											"end": 3885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3894,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3895,
											"end": 3903,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3888,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3866,
											"end": 3904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3866,
											"end": 3904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3924,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3954,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3915,
											"end": 3954,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "66B6CB4A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3940,
											"end": 3954,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3954,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3915,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3991,
											"end": 4001,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 3974,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 3981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3981,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3969,
											"end": 3990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 4002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 4002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 4002,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3969,
											"end": 4002,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3969,
											"end": 4002,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3969,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4025,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3965,
											"end": 4025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "PUSH",
											"source": 6,
											"value": "7C9A1CF900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4025,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3965,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4065,
											"end": 4066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4050,
											"end": 4060,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4040,
											"end": 4061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4061,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4040,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4066,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4036,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4036,
											"end": 4089,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "8439960D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4036,
											"end": 4089,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4036,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4119,
											"end": 4129,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4107,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4102,
											"end": 4118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4130,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4102,
											"end": 4130,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4130,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4102,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4171,
											"end": 4181,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4161,
											"end": 4182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4182,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4161,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4146,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4157,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4141,
											"end": 4157,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4157,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4141,
											"end": 4182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4208,
											"end": 4217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4199,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4199,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4195,
											"end": 4465,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4262,
											"end": 4272,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4252,
											"end": 4273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4273,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4252,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4248,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4234,
											"end": 4248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4248,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4234,
											"end": 4273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4195,
											"end": 4465,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4465,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4195,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4304,
											"end": 4317,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4295,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4295,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4317,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4291,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4291,
											"end": 4465,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4366,
											"end": 4376,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4356,
											"end": 4377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4377,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4356,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4339,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4334,
											"end": 4377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4334,
											"end": 4377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4291,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4291,
											"end": 4465,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4291,
											"end": 4465,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4291,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 4442,
											"end": 4452,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4432,
											"end": 4453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4453,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 4432,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4415,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4428,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4410,
											"end": 4428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4410,
											"end": 4453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4410,
											"end": 4453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4291,
											"end": 4465,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4291,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4465,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4195,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4501,
											"end": 4506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4501,
											"end": 4513,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4501,
											"end": 4513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4501,
											"end": 4513,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4497,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4481,
											"end": 4497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4497,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4481,
											"end": 4513,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4477,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4477,
											"end": 4672,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4556,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4569,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4551,
											"end": 4569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4569,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4534,
											"end": 4539,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4534,
											"end": 4548,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4534,
											"end": 4548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4534,
											"end": 4548,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4534,
											"end": 4569,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4625,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4530,
											"end": 4625,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4609,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4590,
											"end": 4595,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4602,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4590,
											"end": 4602,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4602,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4625,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4530,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4660,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4641,
											"end": 4646,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4660,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4477,
											"end": 4672,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4477,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 4679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 4679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3052,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3052,
											"end": 3068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3068,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3052,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3110,
											"end": 3118,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3103,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3170,
											"end": 3175,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3170,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3191,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3170,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3232,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3217,
											"end": 3232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3137,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3137,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3340,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3335,
											"end": 3349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3349,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3430,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3443,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3425,
											"end": 3443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3443,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3299,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3260,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3478,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3466,
											"end": 3478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3478,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3478,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3466,
											"end": 3478,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3478,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3466,
											"end": 3478,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3466,
											"end": 3478,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3501,
											"end": 3513,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3130,
											"end": 3525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8974,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 8984,
											"end": 8987,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8984,
											"end": 8994,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8984,
											"end": 8994,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9020,
											"end": 9025,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9004,
											"end": 9027,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9004,
											"end": 9027,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 9028,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8996,
											"end": 9028,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8974,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 8974,
											"end": 9029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8974,
											"end": 9029,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 8974,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8967,
											"end": 9029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8871,
											"end": 9036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8871,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8386,
											"end": 8390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 8414,
											"end": 8417,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8414,
											"end": 8424,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8424,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8455,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8434,
											"end": 8457,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8434,
											"end": 8457,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8426,
											"end": 8458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8426,
											"end": 8458,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 8409,
											"end": 8459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8459,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 8409,
											"end": 8459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8402,
											"end": 8459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8402,
											"end": 8459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8316,
											"end": 8466,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8316,
											"end": 8466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10270,
											"end": 10570,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 10270,
											"end": 10570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10333,
											"end": 10349,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10361,
											"end": 10383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 10394,
											"end": 10397,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10394,
											"end": 10404,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10386,
											"end": 10393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 10386,
											"end": 10405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10386,
											"end": 10405,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 10386,
											"end": 10405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10361,
											"end": 10405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10361,
											"end": 10405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10438,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10525,
											"end": 10530,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10515,
											"end": 10530,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10515,
											"end": 10530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10557,
											"end": 10563,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10550,
											"end": 10563,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10550,
											"end": 10563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10550,
											"end": 10563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10550,
											"end": 10563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10270,
											"end": 10570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10270,
											"end": 10570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10270,
											"end": 10570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10270,
											"end": 10570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4380,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2335,
											"end": 2338,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2325,
											"end": 2346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2325,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2365,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2384,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2547,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2544,
											"end": 2562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2523,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2520,
											"end": 2534,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2540,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2541,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2587,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2320,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5637,
											"end": 5653,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5672,
											"end": 5675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5672,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "172"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4410,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4399,
											"end": 4422,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4395,
											"end": 4427,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 4430,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 4430,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4392,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4550,
											"end": 4551,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4521,
											"end": 4638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 5081,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5191,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5188,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5180,
											"end": 5192,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5204,
											"end": 5321,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 5204,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5314,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5311,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5315,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5327,
											"end": 5444,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 5327,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5436,
											"end": 5437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5434,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5426,
											"end": 5438,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5522,
											"end": 5530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5585,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5575,
											"end": 5579,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5567,
											"end": 5573,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5580,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5586,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5549,
											"end": 5671,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 5590,
											"end": 5669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5671,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5549,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5731,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5722,
											"end": 5752,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 5755,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 5755,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5867,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5857,
											"end": 5874,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5874,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5874,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5926,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5919,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5907,
											"end": 5913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5903,
											"end": 5920,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5893,
											"end": 5901,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5889,
											"end": 5921,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5927,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 5930,
											"end": 6009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5930,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 5883,
											"end": 6011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6170,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6166,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6139,
											"end": 6171,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 6174,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6174,
											"end": 6253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6253,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 6174,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 6136,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6307,
											"end": 6324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6294,
											"end": 6325,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6352,
											"end": 6370,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6344,
											"end": 6350,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6371,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 6374,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 6374,
											"end": 6453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6453,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 6374,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 6544,
											"end": 6551,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 6487,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6552,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 6487,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6552,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6552,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6469,
											"end": 6552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 6672,
											"end": 6679,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 6627,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6023,
											"end": 6697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6812,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 6703,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6786,
											"end": 6787,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6779,
											"end": 6784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6776,
											"end": 6788,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6766,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 6766,
											"end": 6806,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6802,
											"end": 6803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6799,
											"end": 6800,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6792,
											"end": 6804,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6766,
											"end": 6806,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 6766,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6977,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 6818,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6874,
											"end": 6879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6899,
											"end": 6919,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6928,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 6965,
											"end": 6970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6928,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 6928,
											"end": 6971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6928,
											"end": 6971,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 6928,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6977,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6977,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7477,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6983,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7061,
											"end": 7067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7069,
											"end": 7075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7118,
											"end": 7120,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7106,
											"end": 7115,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7097,
											"end": 7104,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7093,
											"end": 7116,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7121,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7205,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 7086,
											"end": 7205,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 7124,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7124,
											"end": 7203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7203,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 7124,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7205,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 7086,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7244,
											"end": 7245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 7314,
											"end": 7321,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7305,
											"end": 7311,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7294,
											"end": 7303,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 7269,
											"end": 7322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7269,
											"end": 7322,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 7269,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7322,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7215,
											"end": 7332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7371,
											"end": 7373,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7397,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 7452,
											"end": 7459,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7443,
											"end": 7449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7432,
											"end": 7441,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7428,
											"end": 7450,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7397,
											"end": 7460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7460,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 7397,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7387,
											"end": 7460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7387,
											"end": 7460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7342,
											"end": 7470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7477,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7477,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6983,
											"end": 7477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7812,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 7483,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7591,
											"end": 7593,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7579,
											"end": 7588,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7570,
											"end": 7577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7589,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7562,
											"end": 7594,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7678,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 7559,
											"end": 7678,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 7597,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7597,
											"end": 7676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 7676,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 7597,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7678,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 7559,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7718,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7742,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 7787,
											"end": 7794,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7778,
											"end": 7784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7767,
											"end": 7776,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7785,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7742,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 7742,
											"end": 7795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7742,
											"end": 7795,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 7742,
											"end": 7795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7795,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7732,
											"end": 7795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7688,
											"end": 7805,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7812,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7812,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7483,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7932,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7818,
											"end": 7932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7885,
											"end": 7891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7919,
											"end": 7924,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 7925,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7903,
											"end": 7925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7903,
											"end": 7925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7932,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8112,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 7938,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8061,
											"end": 8067,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8056,
											"end": 8059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8049,
											"end": 8068,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8101,
											"end": 8105,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8096,
											"end": 8099,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8092,
											"end": 8106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8077,
											"end": 8106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8077,
											"end": 8106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8112,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8112,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8118,
											"end": 8250,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 8118,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8185,
											"end": 8189,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8208,
											"end": 8211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8200,
											"end": 8211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8200,
											"end": 8211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8242,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8233,
											"end": 8236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8229,
											"end": 8243,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8221,
											"end": 8243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8221,
											"end": 8243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8118,
											"end": 8250,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8118,
											"end": 8250,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8118,
											"end": 8250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8118,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8256,
											"end": 8364,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 8256,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 8351,
											"end": 8356,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 8333,
											"end": 8357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8357,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 8333,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8256,
											"end": 8364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8256,
											"end": 8364,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8256,
											"end": 8364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 8549,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 8370,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8449,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 8502,
											"end": 8505,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8494,
											"end": 8500,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8460,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 8460,
											"end": 8506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8460,
											"end": 8506,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 8460,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8538,
											"end": 8542,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8536,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8529,
											"end": 8543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 8549,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 8549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 8549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 8549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 8549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8668,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 8555,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8629,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8657,
											"end": 8661,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8652,
											"end": 8655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8648,
											"end": 8662,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8640,
											"end": 8662,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8640,
											"end": 8662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8668,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8668,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 9416,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 8704,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8813,
											"end": 8816,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8842,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 8890,
											"end": 8895,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8842,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 8842,
											"end": 8896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8842,
											"end": 8896,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 8842,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8912,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 8981,
											"end": 8987,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 8979,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8912,
											"end": 8988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 8912,
											"end": 8988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8912,
											"end": 8988,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 8912,
											"end": 8988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8905,
											"end": 8988,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8905,
											"end": 8988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9012,
											"end": 9068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 9062,
											"end": 9067,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9012,
											"end": 9068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9012,
											"end": 9068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9012,
											"end": 9068,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 9012,
											"end": 9068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9091,
											"end": 9098,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9122,
											"end": 9123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9107,
											"end": 9391,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 9107,
											"end": 9391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9132,
											"end": 9138,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9129,
											"end": 9130,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9126,
											"end": 9139,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9391,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 9107,
											"end": 9391,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9208,
											"end": 9214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9202,
											"end": 9215,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9235,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 9294,
											"end": 9297,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9235,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 9235,
											"end": 9298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9235,
											"end": 9298,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 9235,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9298,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 9228,
											"end": 9298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9321,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 9374,
											"end": 9380,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9321,
											"end": 9381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 9321,
											"end": 9381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9321,
											"end": 9381,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 9321,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9311,
											"end": 9381,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9311,
											"end": 9381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9167,
											"end": 9391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9154,
											"end": 9155,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9151,
											"end": 9152,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9147,
											"end": 9156,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9142,
											"end": 9156,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9142,
											"end": 9156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 9107,
											"end": 9391,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9391,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 9107,
											"end": 9391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9111,
											"end": 9125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9407,
											"end": 9410,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9400,
											"end": 9410,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9400,
											"end": 9410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8818,
											"end": 9416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8818,
											"end": 9416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8818,
											"end": 9416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 9416,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 9416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 9416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 9416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8704,
											"end": 9416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9581,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 9422,
											"end": 9581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9496,
											"end": 9507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9530,
											"end": 9536,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9525,
											"end": 9528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9518,
											"end": 9537,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9574,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9565,
											"end": 9568,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9561,
											"end": 9575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9575,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9581,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9587,
											"end": 9944,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 9587,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9665,
											"end": 9668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9693,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 9726,
											"end": 9731,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9693,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 9693,
											"end": 9732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9693,
											"end": 9732,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 9693,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9748,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 9802,
											"end": 9808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9797,
											"end": 9800,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9748,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 9748,
											"end": 9809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9748,
											"end": 9809,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 9748,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9809,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 9876,
											"end": 9882,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9871,
											"end": 9874,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9864,
											"end": 9868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9857,
											"end": 9862,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9853,
											"end": 9869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 9818,
											"end": 9883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 9883,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 9818,
											"end": 9883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9908,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 9930,
											"end": 9936,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9908,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 9908,
											"end": 9937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9908,
											"end": 9937,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 9908,
											"end": 9937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9903,
											"end": 9906,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9899,
											"end": 9938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9892,
											"end": 9938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9587,
											"end": 9944,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9587,
											"end": 9944,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9587,
											"end": 9944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9587,
											"end": 9944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9587,
											"end": 9944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9950,
											"end": 10058,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 9950,
											"end": 10058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 10045,
											"end": 10050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 10027,
											"end": 10051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10051,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 10027,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10022,
											"end": 10025,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10015,
											"end": 10052,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9950,
											"end": 10058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9950,
											"end": 10058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9950,
											"end": 10058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10064,
											"end": 10163,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 10064,
											"end": 10163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10135,
											"end": 10156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 10150,
											"end": 10155,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10135,
											"end": 10156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 10135,
											"end": 10156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10135,
											"end": 10156,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 10135,
											"end": 10156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10130,
											"end": 10133,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10123,
											"end": 10157,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10064,
											"end": 10163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10064,
											"end": 10163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10064,
											"end": 10163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 12205,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 10243,
											"end": 12205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10366,
											"end": 10369,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10402,
											"end": 10408,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 10397,
											"end": 10400,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10393,
											"end": 10409,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10486,
											"end": 10491,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10482,
											"end": 10498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10476,
											"end": 10499,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10546,
											"end": 10549,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10540,
											"end": 10544,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10536,
											"end": 10550,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10529,
											"end": 10533,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10524,
											"end": 10527,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10520,
											"end": 10534,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10572,
											"end": 10675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 10670,
											"end": 10674,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10656,
											"end": 10668,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10572,
											"end": 10675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10572,
											"end": 10675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10572,
											"end": 10675,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 10572,
											"end": 10675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10564,
											"end": 10675,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10564,
											"end": 10675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10419,
											"end": 10686,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10773,
											"end": 10777,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10766,
											"end": 10771,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10762,
											"end": 10778,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10756,
											"end": 10779,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10826,
											"end": 10829,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10816,
											"end": 10830,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10809,
											"end": 10813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10804,
											"end": 10807,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10800,
											"end": 10814,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10793,
											"end": 10831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10852,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 10920,
											"end": 10924,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10906,
											"end": 10918,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10852,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 10852,
											"end": 10925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10852,
											"end": 10925,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 10852,
											"end": 10925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10844,
											"end": 10925,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10844,
											"end": 10925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10696,
											"end": 10936,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11022,
											"end": 11026,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11015,
											"end": 11020,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11011,
											"end": 11027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11005,
											"end": 11028,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11041,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 11098,
											"end": 11102,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11093,
											"end": 11096,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11089,
											"end": 11103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11075,
											"end": 11087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11041,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 11041,
											"end": 11104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11041,
											"end": 11104,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 11041,
											"end": 11104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10946,
											"end": 11114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11204,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11197,
											"end": 11202,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11193,
											"end": 11209,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11187,
											"end": 11210,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11223,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 11280,
											"end": 11284,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11275,
											"end": 11278,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11271,
											"end": 11285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11257,
											"end": 11269,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11223,
											"end": 11286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 11223,
											"end": 11286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11223,
											"end": 11286,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 11223,
											"end": 11286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11124,
											"end": 11296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11386,
											"end": 11390,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 11379,
											"end": 11384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11375,
											"end": 11391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11369,
											"end": 11392,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11405,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 11462,
											"end": 11466,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 11457,
											"end": 11460,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11467,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11439,
											"end": 11451,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11405,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 11405,
											"end": 11468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11405,
											"end": 11468,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 11405,
											"end": 11468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11306,
											"end": 11478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11566,
											"end": 11570,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 11559,
											"end": 11564,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11555,
											"end": 11571,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11572,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11585,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 11642,
											"end": 11646,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 11637,
											"end": 11640,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11633,
											"end": 11647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11619,
											"end": 11631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11585,
											"end": 11648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 11585,
											"end": 11648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11585,
											"end": 11648,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 11585,
											"end": 11648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11488,
											"end": 11658,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11742,
											"end": 11746,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 11735,
											"end": 11740,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11731,
											"end": 11747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11725,
											"end": 11748,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11761,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 11818,
											"end": 11822,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 11813,
											"end": 11816,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11809,
											"end": 11823,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11795,
											"end": 11807,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11761,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 11761,
											"end": 11824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11761,
											"end": 11824,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 11761,
											"end": 11824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11668,
											"end": 11834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11918,
											"end": 11922,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 11911,
											"end": 11916,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11907,
											"end": 11923,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11901,
											"end": 11924,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11937,
											"end": 11994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 11988,
											"end": 11992,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 11983,
											"end": 11986,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11979,
											"end": 11993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 11977,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11937,
											"end": 11994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 11937,
											"end": 11994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11937,
											"end": 11994,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 11937,
											"end": 11994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11844,
											"end": 12004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12088,
											"end": 12094,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 12081,
											"end": 12086,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12077,
											"end": 12095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12071,
											"end": 12096,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12109,
											"end": 12168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 12160,
											"end": 12166,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 12155,
											"end": 12158,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12151,
											"end": 12167,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12137,
											"end": 12149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12109,
											"end": 12168,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 12109,
											"end": 12168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12109,
											"end": 12168,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 12109,
											"end": 12168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12014,
											"end": 12178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12195,
											"end": 12199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12188,
											"end": 12199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12188,
											"end": 12199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10371,
											"end": 12205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 12205,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 12205,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 12205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 12205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10243,
											"end": 12205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12211,
											"end": 12592,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 12211,
											"end": 12592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12358,
											"end": 12362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12396,
											"end": 12398,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12385,
											"end": 12394,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12381,
											"end": 12399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12373,
											"end": 12399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12373,
											"end": 12399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12445,
											"end": 12454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12439,
											"end": 12443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12435,
											"end": 12455,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12431,
											"end": 12432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12420,
											"end": 12429,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12416,
											"end": 12433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12409,
											"end": 12456,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12473,
											"end": 12585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 12580,
											"end": 12584,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12571,
											"end": 12577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12473,
											"end": 12585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 12473,
											"end": 12585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12473,
											"end": 12585,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 12473,
											"end": 12585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12465,
											"end": 12585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12465,
											"end": 12585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12211,
											"end": 12592,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12211,
											"end": 12592,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12211,
											"end": 12592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12211,
											"end": 12592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12211,
											"end": 12592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12598,
											"end": 13072,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 12598,
											"end": 13072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12666,
											"end": 12672,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12674,
											"end": 12680,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12723,
											"end": 12725,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12711,
											"end": 12720,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12702,
											"end": 12709,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12698,
											"end": 12721,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12694,
											"end": 12726,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 12691,
											"end": 12810,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12691,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 12691,
											"end": 12810,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12729,
											"end": 12808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 12729,
											"end": 12808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 12729,
											"end": 12808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12729,
											"end": 12808,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 12729,
											"end": 12808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12691,
											"end": 12810,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 12691,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12849,
											"end": 12850,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12874,
											"end": 12927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 12919,
											"end": 12926,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12910,
											"end": 12916,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12899,
											"end": 12908,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12895,
											"end": 12917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12874,
											"end": 12927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 12874,
											"end": 12927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12874,
											"end": 12927,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 12874,
											"end": 12927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12927,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12820,
											"end": 12937,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12976,
											"end": 12978,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13002,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 13047,
											"end": 13054,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13038,
											"end": 13044,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13023,
											"end": 13045,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13002,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 13002,
											"end": 13055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13002,
											"end": 13055,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 13002,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12992,
											"end": 13055,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12992,
											"end": 13055,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12947,
											"end": 13065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12598,
											"end": 13072,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12598,
											"end": 13072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12598,
											"end": 13072,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12598,
											"end": 13072,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12598,
											"end": 13072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12598,
											"end": 13072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13078,
											"end": 13258,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 13078,
											"end": 13258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13126,
											"end": 13203,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13123,
											"end": 13124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13116,
											"end": 13204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13223,
											"end": 13227,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 13220,
											"end": 13221,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13213,
											"end": 13228,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13247,
											"end": 13251,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13244,
											"end": 13245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13237,
											"end": 13252,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13264,
											"end": 13584,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 13264,
											"end": 13584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13308,
											"end": 13314,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13345,
											"end": 13346,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13339,
											"end": 13343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13335,
											"end": 13347,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13325,
											"end": 13347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13325,
											"end": 13347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13392,
											"end": 13393,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13386,
											"end": 13390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13382,
											"end": 13394,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13413,
											"end": 13431,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 13403,
											"end": 13484,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13469,
											"end": 13473,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 13461,
											"end": 13467,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13457,
											"end": 13474,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13447,
											"end": 13474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13447,
											"end": 13474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13484,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 13403,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13531,
											"end": 13533,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13523,
											"end": 13529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13520,
											"end": 13534,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 13500,
											"end": 13518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13497,
											"end": 13535,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13494,
											"end": 13578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 13494,
											"end": 13578,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13550,
											"end": 13568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 13550,
											"end": 13568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 13550,
											"end": 13568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13550,
											"end": 13568,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 13550,
											"end": 13568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13494,
											"end": 13578,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 13494,
											"end": 13578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13315,
											"end": 13584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13264,
											"end": 13584,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13264,
											"end": 13584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13264,
											"end": 13584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13264,
											"end": 13584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13687,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 13590,
											"end": 13687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13649,
											"end": 13655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13677,
											"end": 13680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13667,
											"end": 13680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13687,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13693,
											"end": 13873,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 13693,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 13818,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13738,
											"end": 13739,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13731,
											"end": 13819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13838,
											"end": 13842,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 13835,
											"end": 13836,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13828,
											"end": 13843,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13862,
											"end": 13866,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13859,
											"end": 13860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13852,
											"end": 13867,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13879,
											"end": 14020,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 13879,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13928,
											"end": 13932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13951,
											"end": 13954,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13943,
											"end": 13954,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13943,
											"end": 13954,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13974,
											"end": 13977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13971,
											"end": 13972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13964,
											"end": 13978,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14008,
											"end": 14012,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14006,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 13987,
											"end": 14013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13987,
											"end": 14013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13879,
											"end": 14020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13879,
											"end": 14020,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13879,
											"end": 14020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13879,
											"end": 14020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14026,
											"end": 14119,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 14026,
											"end": 14119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14063,
											"end": 14069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14110,
											"end": 14112,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14105,
											"end": 14107,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14098,
											"end": 14103,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14094,
											"end": 14108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14090,
											"end": 14113,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14080,
											"end": 14113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14080,
											"end": 14113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14026,
											"end": 14119,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14026,
											"end": 14119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14026,
											"end": 14119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14026,
											"end": 14119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14125,
											"end": 14232,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 14125,
											"end": 14232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14169,
											"end": 14177,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14219,
											"end": 14224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14213,
											"end": 14217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14209,
											"end": 14225,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 14188,
											"end": 14225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14188,
											"end": 14225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14125,
											"end": 14232,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14125,
											"end": 14232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14125,
											"end": 14232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14125,
											"end": 14232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14125,
											"end": 14232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14631,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 14238,
											"end": 14631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14307,
											"end": 14313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14357,
											"end": 14358,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 14345,
											"end": 14355,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14341,
											"end": 14359,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14380,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 14410,
											"end": 14476,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14399,
											"end": 14408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14380,
											"end": 14477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 14380,
											"end": 14477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14380,
											"end": 14477,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 14380,
											"end": 14477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14498,
											"end": 14537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 14528,
											"end": 14536,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14517,
											"end": 14526,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14498,
											"end": 14537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 14498,
											"end": 14537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14498,
											"end": 14537,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 14498,
											"end": 14537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14486,
											"end": 14537,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 14486,
											"end": 14537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14570,
											"end": 14574,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14566,
											"end": 14575,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 14559,
											"end": 14564,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14555,
											"end": 14576,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14546,
											"end": 14576,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14546,
											"end": 14576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14619,
											"end": 14623,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14609,
											"end": 14617,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14605,
											"end": 14624,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14598,
											"end": 14603,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14595,
											"end": 14625,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 14585,
											"end": 14625,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14585,
											"end": 14625,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14314,
											"end": 14631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14314,
											"end": 14631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14631,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14631,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14637,
											"end": 14697,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 14637,
											"end": 14697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14665,
											"end": 14668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14686,
											"end": 14691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14679,
											"end": 14691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14679,
											"end": 14691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14637,
											"end": 14697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14637,
											"end": 14697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14637,
											"end": 14697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14637,
											"end": 14697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14703,
											"end": 14845,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 14703,
											"end": 14845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14753,
											"end": 14762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14786,
											"end": 14839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 14813,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14813,
											"end": 14837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 14813,
											"end": 14837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14813,
											"end": 14837,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 14813,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 14804,
											"end": 14838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 14804,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14786,
											"end": 14839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 14786,
											"end": 14839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14786,
											"end": 14839,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 14786,
											"end": 14839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14773,
											"end": 14839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14773,
											"end": 14839,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14703,
											"end": 14845,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14703,
											"end": 14845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14703,
											"end": 14845,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14703,
											"end": 14845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14851,
											"end": 14926,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 14851,
											"end": 14926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14894,
											"end": 14897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14915,
											"end": 14920,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14908,
											"end": 14920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14908,
											"end": 14920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14851,
											"end": 14926,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14851,
											"end": 14926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14851,
											"end": 14926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14851,
											"end": 14926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 15201,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 14932,
											"end": 15201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15042,
											"end": 15081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 15073,
											"end": 15080,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15042,
											"end": 15081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 15042,
											"end": 15081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15042,
											"end": 15081,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 15042,
											"end": 15081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15103,
											"end": 15194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 15152,
											"end": 15193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 15176,
											"end": 15192,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15152,
											"end": 15193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 15152,
											"end": 15193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15152,
											"end": 15193,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 15152,
											"end": 15193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15144,
											"end": 15150,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15137,
											"end": 15141,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15131,
											"end": 15142,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15103,
											"end": 15194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 15103,
											"end": 15194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15103,
											"end": 15194,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 15103,
											"end": 15194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15097,
											"end": 15101,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15090,
											"end": 15195,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 15008,
											"end": 15201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 15201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 15201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 15201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 15201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15207,
											"end": 15280,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 15207,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15207,
											"end": 15280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15207,
											"end": 15280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15286,
											"end": 15475,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 15286,
											"end": 15475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15363,
											"end": 15395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 15363,
											"end": 15395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 15363,
											"end": 15395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15363,
											"end": 15395,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 15363,
											"end": 15395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15404,
											"end": 15469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 15462,
											"end": 15468,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15454,
											"end": 15460,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15448,
											"end": 15452,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15404,
											"end": 15469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 15404,
											"end": 15469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15404,
											"end": 15469,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 15404,
											"end": 15469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15339,
											"end": 15475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15286,
											"end": 15475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15286,
											"end": 15475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15286,
											"end": 15475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15481,
											"end": 15667,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 15481,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15541,
											"end": 15661,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 15541,
											"end": 15661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15558,
											"end": 15561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15551,
											"end": 15556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15548,
											"end": 15562,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15541,
											"end": 15661,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15541,
											"end": 15661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 15541,
											"end": 15661,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15612,
											"end": 15651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 15649,
											"end": 15650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15642,
											"end": 15647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15612,
											"end": 15651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 15612,
											"end": 15651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15612,
											"end": 15651,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 15612,
											"end": 15651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15585,
											"end": 15586,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15578,
											"end": 15583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15574,
											"end": 15587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15565,
											"end": 15587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15565,
											"end": 15587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15541,
											"end": 15661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 15541,
											"end": 15661,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15541,
											"end": 15661,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 15541,
											"end": 15661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15481,
											"end": 15667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15481,
											"end": 15667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15481,
											"end": 15667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15673,
											"end": 16216,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 15673,
											"end": 16216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15774,
											"end": 15776,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 15769,
											"end": 15772,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15766,
											"end": 15777,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15763,
											"end": 16209,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15763,
											"end": 16209,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 15763,
											"end": 16209,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15808,
											"end": 15846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 15840,
											"end": 15845,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15808,
											"end": 15846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 15808,
											"end": 15846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15808,
											"end": 15846,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 15808,
											"end": 15846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15892,
											"end": 15921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 15910,
											"end": 15920,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15892,
											"end": 15921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 15892,
											"end": 15921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15892,
											"end": 15921,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 15892,
											"end": 15921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15882,
											"end": 15890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15878,
											"end": 15922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16075,
											"end": 16077,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16063,
											"end": 16073,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16060,
											"end": 16078,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 16057,
											"end": 16106,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16057,
											"end": 16106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 16057,
											"end": 16106,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16096,
											"end": 16104,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16081,
											"end": 16104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16081,
											"end": 16104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16057,
											"end": 16106,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 16057,
											"end": 16106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 16175,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 16193,
											"end": 16196,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16175,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 16175,
											"end": 16197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16175,
											"end": 16197,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 16175,
											"end": 16197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16165,
											"end": 16173,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16161,
											"end": 16198,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16148,
											"end": 16159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 16119,
											"end": 16199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16119,
											"end": 16199,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 16119,
											"end": 16199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15778,
											"end": 16209,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15778,
											"end": 16209,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15763,
											"end": 16209,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 15763,
											"end": 16209,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15673,
											"end": 16216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15673,
											"end": 16216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15673,
											"end": 16216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15673,
											"end": 16216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16222,
											"end": 16339,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 16222,
											"end": 16339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16276,
											"end": 16284,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16326,
											"end": 16331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16320,
											"end": 16324,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16316,
											"end": 16332,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 16295,
											"end": 16332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16295,
											"end": 16332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16222,
											"end": 16339,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16222,
											"end": 16339,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16222,
											"end": 16339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16222,
											"end": 16339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16222,
											"end": 16339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16345,
											"end": 16514,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 16345,
											"end": 16514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16389,
											"end": 16395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16422,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 16470,
											"end": 16471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16466,
											"end": 16472,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 16458,
											"end": 16463,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16455,
											"end": 16456,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 16451,
											"end": 16464,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16422,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 16422,
											"end": 16473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16422,
											"end": 16473,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 16422,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16418,
											"end": 16474,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 16503,
											"end": 16507,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16497,
											"end": 16501,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16493,
											"end": 16508,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16483,
											"end": 16508,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16483,
											"end": 16508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16396,
											"end": 16514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16345,
											"end": 16514,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16345,
											"end": 16514,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16345,
											"end": 16514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16345,
											"end": 16514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16345,
											"end": 16514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16519,
											"end": 16814,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 16519,
											"end": 16814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16595,
											"end": 16599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16741,
											"end": 16770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 16766,
											"end": 16769,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16760,
											"end": 16764,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16741,
											"end": 16770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 16741,
											"end": 16770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16741,
											"end": 16770,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 16741,
											"end": 16770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16733,
											"end": 16770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16733,
											"end": 16770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16803,
											"end": 16806,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16800,
											"end": 16801,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 16796,
											"end": 16807,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16790,
											"end": 16794,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16787,
											"end": 16808,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 16779,
											"end": 16808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16779,
											"end": 16808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16519,
											"end": 16814,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16519,
											"end": 16814,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16519,
											"end": 16814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16519,
											"end": 16814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16519,
											"end": 16814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16819,
											"end": 18222,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 16819,
											"end": 18222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16943,
											"end": 16987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 16983,
											"end": 16986,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16978,
											"end": 16981,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16943,
											"end": 16987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 16943,
											"end": 16987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16943,
											"end": 16987,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 16943,
											"end": 16987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17052,
											"end": 17070,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17044,
											"end": 17050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17041,
											"end": 17071,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17038,
											"end": 17094,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17038,
											"end": 17094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 17038,
											"end": 17094,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17074,
											"end": 17092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 17074,
											"end": 17092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 17074,
											"end": 17092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17074,
											"end": 17092,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 17074,
											"end": 17092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17038,
											"end": 17094,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 17038,
											"end": 17094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 17150,
											"end": 17154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17144,
											"end": 17155,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 17118,
											"end": 17156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17118,
											"end": 17156,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 17118,
											"end": 17156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17203,
											"end": 17270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 17263,
											"end": 17269,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17255,
											"end": 17261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17249,
											"end": 17253,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17203,
											"end": 17270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 17203,
											"end": 17270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17203,
											"end": 17270,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 17203,
											"end": 17270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17297,
											"end": 17298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17326,
											"end": 17328,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17318,
											"end": 17324,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17315,
											"end": 17329,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17343,
											"end": 17344,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17338,
											"end": 17970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17338,
											"end": 17970,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 17338,
											"end": 17970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 17338,
											"end": 17970,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18014,
											"end": 18015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18031,
											"end": 18037,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18028,
											"end": 18112,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18028,
											"end": 18112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 18028,
											"end": 18112,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18087,
											"end": 18096,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18082,
											"end": 18085,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 18078,
											"end": 18097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18065,
											"end": 18098,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 18056,
											"end": 18098,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18056,
											"end": 18098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18028,
											"end": 18112,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 18028,
											"end": 18112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18138,
											"end": 18205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 18198,
											"end": 18204,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18191,
											"end": 18196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18138,
											"end": 18205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 18138,
											"end": 18205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18138,
											"end": 18205,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 18138,
											"end": 18205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18132,
											"end": 18136,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18125,
											"end": 18206,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17987,
											"end": 18216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17308,
											"end": 18216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 17308,
											"end": 18216,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17338,
											"end": 17970,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 17338,
											"end": 17970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17390,
											"end": 17394,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17386,
											"end": 17395,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 17378,
											"end": 17384,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17374,
											"end": 17396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17424,
											"end": 17461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 17456,
											"end": 17460,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17424,
											"end": 17461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 17424,
											"end": 17461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17424,
											"end": 17461,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 17424,
											"end": 17461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17483,
											"end": 17484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17497,
											"end": 17712,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 17497,
											"end": 17712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17511,
											"end": 17518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17508,
											"end": 17509,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17505,
											"end": 17519,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17497,
											"end": 17712,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17497,
											"end": 17712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 17497,
											"end": 17712,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17597,
											"end": 17606,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17592,
											"end": 17595,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 17588,
											"end": 17607,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17575,
											"end": 17608,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 17567,
											"end": 17573,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17560,
											"end": 17609,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17648,
											"end": 17649,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17640,
											"end": 17646,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17636,
											"end": 17650,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17626,
											"end": 17650,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17626,
											"end": 17650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17695,
											"end": 17697,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17684,
											"end": 17693,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 17698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17667,
											"end": 17698,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 17667,
											"end": 17698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17534,
											"end": 17538,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17531,
											"end": 17532,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17527,
											"end": 17539,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17522,
											"end": 17539,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17522,
											"end": 17539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17497,
											"end": 17712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 17497,
											"end": 17712,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17497,
											"end": 17712,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 17497,
											"end": 17712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17740,
											"end": 17746,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17731,
											"end": 17738,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17728,
											"end": 17747,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17725,
											"end": 17911,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17725,
											"end": 17911,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 17725,
											"end": 17911,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17805,
											"end": 17814,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17800,
											"end": 17803,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 17796,
											"end": 17815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17783,
											"end": 17816,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 17848,
											"end": 17896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 17890,
											"end": 17894,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17882,
											"end": 17888,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 17878,
											"end": 17895,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 17867,
											"end": 17876,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17848,
											"end": 17896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 17848,
											"end": 17896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17848,
											"end": 17896,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 17848,
											"end": 17896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17840,
											"end": 17846,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17833,
											"end": 17897,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17748,
											"end": 17911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17725,
											"end": 17911,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 17725,
											"end": 17911,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17957,
											"end": 17958,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17953,
											"end": 17954,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 17945,
											"end": 17951,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 17941,
											"end": 17955,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 17937,
											"end": 17959,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17931,
											"end": 17935,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 17924,
											"end": 17960,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17345,
											"end": 17970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17345,
											"end": 17970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17345,
											"end": 17970,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17308,
											"end": 18216,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 17308,
											"end": 18216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17308,
											"end": 18216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16918,
											"end": 18222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16918,
											"end": 18222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16918,
											"end": 18222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16819,
											"end": 18222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16819,
											"end": 18222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16819,
											"end": 18222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16819,
											"end": 18222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18228,
											"end": 18408,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 18228,
											"end": 18408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18276,
											"end": 18353,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18273,
											"end": 18274,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18266,
											"end": 18354,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18373,
											"end": 18377,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 18370,
											"end": 18371,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 18363,
											"end": 18378,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18397,
											"end": 18401,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 18394,
											"end": 18395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18387,
											"end": 18402,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 18414,
											"end": 18608,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 18414,
											"end": 18608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18454,
											"end": 18458,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18474,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 18492,
											"end": 18493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18474,
											"end": 18494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 18474,
											"end": 18494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18474,
											"end": 18494,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 18474,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18469,
											"end": 18494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18469,
											"end": 18494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18508,
											"end": 18528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 18526,
											"end": 18527,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18508,
											"end": 18528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 18508,
											"end": 18528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18508,
											"end": 18528,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 18508,
											"end": 18528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18503,
											"end": 18528,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18503,
											"end": 18528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18552,
											"end": 18553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18549,
											"end": 18550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18545,
											"end": 18554,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18537,
											"end": 18554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18537,
											"end": 18554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18576,
											"end": 18577,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18570,
											"end": 18574,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18567,
											"end": 18578,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18564,
											"end": 18601,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18564,
											"end": 18601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 18564,
											"end": 18601,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18581,
											"end": 18599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 18581,
											"end": 18599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 18581,
											"end": 18599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18581,
											"end": 18599,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 18581,
											"end": 18599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18564,
											"end": 18601,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 18564,
											"end": 18601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18414,
											"end": 18608,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18414,
											"end": 18608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18414,
											"end": 18608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18414,
											"end": 18608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18414,
											"end": 18608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18614,
											"end": 18794,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 18614,
											"end": 18794,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18662,
											"end": 18739,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18659,
											"end": 18660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18652,
											"end": 18740,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18759,
											"end": 18763,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 18756,
											"end": 18757,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 18749,
											"end": 18764,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18783,
											"end": 18787,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 18780,
											"end": 18781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18773,
											"end": 18788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 18800,
											"end": 18991,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 18800,
											"end": 18991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18840,
											"end": 18843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18859,
											"end": 18879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 18877,
											"end": 18878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18859,
											"end": 18879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 18859,
											"end": 18879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18859,
											"end": 18879,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 18859,
											"end": 18879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18854,
											"end": 18879,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18854,
											"end": 18879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18893,
											"end": 18913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 18911,
											"end": 18912,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18893,
											"end": 18913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 18893,
											"end": 18913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18893,
											"end": 18913,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 18893,
											"end": 18913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18888,
											"end": 18913,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18888,
											"end": 18913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18936,
											"end": 18937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18933,
											"end": 18934,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18929,
											"end": 18938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18922,
											"end": 18938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18922,
											"end": 18938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18957,
											"end": 18960,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18954,
											"end": 18955,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18951,
											"end": 18961,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 18948,
											"end": 18984,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18948,
											"end": 18984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 18948,
											"end": 18984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18964,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 18964,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 18964,
											"end": 18982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18964,
											"end": 18982,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 18964,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18948,
											"end": 18984,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 18948,
											"end": 18984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18800,
											"end": 18991,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18800,
											"end": 18991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18800,
											"end": 18991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18800,
											"end": 18991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18800,
											"end": 18991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18997,
											"end": 19177,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 18997,
											"end": 19177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19045,
											"end": 19122,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19042,
											"end": 19043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19035,
											"end": 19123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19142,
											"end": 19146,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 19139,
											"end": 19140,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 19132,
											"end": 19147,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19166,
											"end": 19170,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 19163,
											"end": 19164,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19156,
											"end": 19171,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 19183,
											"end": 19301,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 19183,
											"end": 19301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19270,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 19288,
											"end": 19293,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19270,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 19270,
											"end": 19294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19270,
											"end": 19294,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 19270,
											"end": 19294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19265,
											"end": 19268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19258,
											"end": 19295,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19183,
											"end": 19301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19183,
											"end": 19301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19183,
											"end": 19301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19307,
											"end": 19749,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 19307,
											"end": 19749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19456,
											"end": 19460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19494,
											"end": 19496,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 19483,
											"end": 19492,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19479,
											"end": 19497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19471,
											"end": 19497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19471,
											"end": 19497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19507,
											"end": 19578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 19575,
											"end": 19576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19564,
											"end": 19573,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19560,
											"end": 19577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19551,
											"end": 19557,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19507,
											"end": 19578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 19507,
											"end": 19578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19507,
											"end": 19578,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 19507,
											"end": 19578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19588,
											"end": 19660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 19656,
											"end": 19658,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19645,
											"end": 19654,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19641,
											"end": 19659,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19632,
											"end": 19638,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19588,
											"end": 19660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 19588,
											"end": 19660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19588,
											"end": 19660,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 19588,
											"end": 19660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19670,
											"end": 19742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 19738,
											"end": 19740,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19727,
											"end": 19736,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19723,
											"end": 19741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19714,
											"end": 19720,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19670,
											"end": 19742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 19670,
											"end": 19742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19670,
											"end": 19742,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 19670,
											"end": 19742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19307,
											"end": 19749,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 19307,
											"end": 19749,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19307,
											"end": 19749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19307,
											"end": 19749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19307,
											"end": 19749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19307,
											"end": 19749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19307,
											"end": 19749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19755,
											"end": 19977,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 19755,
											"end": 19977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19848,
											"end": 19852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19886,
											"end": 19888,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19875,
											"end": 19884,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19871,
											"end": 19889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19863,
											"end": 19889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19863,
											"end": 19889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19899,
											"end": 19970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 19967,
											"end": 19968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19956,
											"end": 19965,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19952,
											"end": 19969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19943,
											"end": 19949,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19899,
											"end": 19970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 19899,
											"end": 19970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19899,
											"end": 19970,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 19899,
											"end": 19970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19755,
											"end": 19977,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19755,
											"end": 19977,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19755,
											"end": 19977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19755,
											"end": 19977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19755,
											"end": 19977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"base/WeightedVoting.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"claim()": "4e71d92d",
							"createIssue(string,uint256)": "8615d855",
							"decimals()": "313ce567",
							"getIssue(uint256)": "976b3113",
							"hasClaimed(address)": "73b2e80e",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"vote(uint256,uint8)": "943e8216"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AllTokensClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyVoted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTokensHeld\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"}],\"name\":\"QuorumTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokensClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VotingClosed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_issueDesc\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_quorum\",\"type\":\"uint256\"}],\"name\":\"createIssue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_issueId\",\"type\":\"uint256\"}],\"name\":\"getIssue\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"voters\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"issueDesc\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesFor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAgainst\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votesAbstain\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"passed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"closed\",\"type\":\"bool\"}],\"internalType\":\"struct WeightedVoting.IssueView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_issueId\",\"type\":\"uint256\"},{\"internalType\":\"enum WeightedVoting.Votes\",\"name\":\"_vote\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"base/WeightedVoting.sol\":\"WeightedVoting\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"base/WeightedVoting.sol\":{\"keccak256\":\"0xa734398ff510637ed0ed97c8733eef3dcf6dba110fb80c6cc70c2d8a2aa55cf2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c0491dea16a1b085f95f06a39d1b5b276861c22b3bdfdde61125fcd21d79a97f\",\"dweb:/ipfs/QmboAkBLYACB1G7b5B3gZe8Nvse3Nq11FWTPjLPM7aUATw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "base/WeightedVoting.sol:WeightedVoting",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "base/WeightedVoting.sol:WeightedVoting",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "base/WeightedVoting.sol:WeightedVoting",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "base/WeightedVoting.sol:WeightedVoting",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "base/WeightedVoting.sol:WeightedVoting",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1458,
								"contract": "base/WeightedVoting.sol:WeightedVoting",
								"label": "balances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1462,
								"contract": "base/WeightedVoting.sol:WeightedVoting",
								"label": "hasClaimed",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1465,
								"contract": "base/WeightedVoting.sol:WeightedVoting",
								"label": "maxSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1469,
								"contract": "base/WeightedVoting.sol:WeightedVoting",
								"label": "issues",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_struct(Issue)1430_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Issue)1430_storage)dyn_storage": {
								"base": "t_struct(Issue)1430_storage",
								"encoding": "dynamic_array",
								"label": "struct WeightedVoting.Issue[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressSet)1111_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1110,
										"contract": "base/WeightedVoting.sol:WeightedVoting",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)796_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Issue)1430_storage": {
								"encoding": "inplace",
								"label": "struct WeightedVoting.Issue",
								"members": [
									{
										"astId": 1413,
										"contract": "base/WeightedVoting.sol:WeightedVoting",
										"label": "voters",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)1111_storage"
									},
									{
										"astId": 1415,
										"contract": "base/WeightedVoting.sol:WeightedVoting",
										"label": "issueDesc",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 1417,
										"contract": "base/WeightedVoting.sol:WeightedVoting",
										"label": "votesFor",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1419,
										"contract": "base/WeightedVoting.sol:WeightedVoting",
										"label": "votesAgainst",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1421,
										"contract": "base/WeightedVoting.sol:WeightedVoting",
										"label": "votesAbstain",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1423,
										"contract": "base/WeightedVoting.sol:WeightedVoting",
										"label": "totalVotes",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1425,
										"contract": "base/WeightedVoting.sol:WeightedVoting",
										"label": "quorum",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1427,
										"contract": "base/WeightedVoting.sol:WeightedVoting",
										"label": "passed",
										"offset": 0,
										"slot": "8",
										"type": "t_bool"
									},
									{
										"astId": 1429,
										"contract": "base/WeightedVoting.sol:WeightedVoting",
										"label": "closed",
										"offset": 1,
										"slot": "8",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(Set)796_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 791,
										"contract": "base/WeightedVoting.sol:WeightedVoting",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 795,
										"contract": "base/WeightedVoting.sol:WeightedVoting",
										"label": "_positions",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1398
						]
					},
					"id": 1399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "205:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 788,
								"nodeType": "StructuredDocumentation",
								"src": "231:1098:5",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 1398,
							"linearizedBaseContracts": [
								1398
							],
							"name": "EnumerableSet",
							"nameLocation": "1338:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 796,
									"members": [
										{
											"constant": false,
											"id": 791,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1862:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 796,
											"src": "1852:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 789,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 790,
												"nodeType": "ArrayTypeName",
												"src": "1852:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 795,
											"mutability": "mutable",
											"name": "_positions",
											"nameLocation": "2054:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 796,
											"src": "2020:44:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 794,
												"keyName": "value",
												"keyNameLocation": "2036:5:5",
												"keyType": {
													"id": 792,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2020:33:5",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1805:3:5",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "1798:273:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "2310:337:5",
										"statements": [
											{
												"condition": {
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2324:22:5",
													"subExpression": {
														"arguments": [
															{
																"id": 808,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "2335:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 809,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "2340:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 807,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "2325:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2325:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "2604:37:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2625:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 806,
															"id": 834,
															"nodeType": "Return",
															"src": "2618:12:5"
														}
													]
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "2320:321:5",
												"trueBody": {
													"id": 832,
													"nodeType": "Block",
													"src": "2348:250:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "2379:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 812,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "2362:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 815,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2366:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "2362:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2374:4:5",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2362:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2362:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 819,
															"nodeType": "ExpressionStatement",
															"src": "2362:23:5"
														},
														{
															"expression": {
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 820,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "2520:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2524:10:5",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 795,
																		"src": "2520:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 824,
																	"indexExpression": {
																		"id": 822,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "2535:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2520:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 825,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "2544:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2548:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "2544:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2556:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2544:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2520:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 829,
															"nodeType": "ExpressionStatement",
															"src": "2520:42:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 806,
															"id": 831,
															"nodeType": "Return",
															"src": "2576:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "2077:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2250:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2267:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2255:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 799,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 798,
														"name": "Set",
														"nameLocations": [
															"2255:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "2255:3:5"
													},
													"referencedDeclaration": 796,
													"src": "2255:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2280:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2272:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 801,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:32:5"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2304:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 804,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:6:5"
									},
									"scope": 1398,
									"src": "2241:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "2887:1296:5",
										"statements": [
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2999:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 921,
														"src": "2991:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 849,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2991:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 855,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 851,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "3010:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3014:10:5",
														"memberName": "_positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 795,
														"src": "3010:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 854,
													"indexExpression": {
														"id": 853,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "3025:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3010:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2991:40:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 856,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3046:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3058:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3046:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 919,
													"nodeType": "Block",
													"src": "4140:37:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4161:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 848,
															"id": 918,
															"nodeType": "Return",
															"src": "4154:12:5"
														}
													]
												},
												"id": 920,
												"nodeType": "IfStatement",
												"src": "3042:1135:5",
												"trueBody": {
													"id": 916,
													"nodeType": "Block",
													"src": "3061:1073:5",
													"statements": [
														{
															"assignments": [
																860
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 860,
																	"mutability": "mutable",
																	"name": "valueIndex",
																	"nameLocation": "3421:10:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 916,
																	"src": "3413:18:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 859,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3413:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 864,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 861,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "3434:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3445:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3434:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3413:33:5"
														},
														{
															"assignments": [
																866
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 866,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3468:9:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 916,
																	"src": "3460:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 865,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3460:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 872,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 867,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "3480:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3484:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "3480:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3492:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3480:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3501:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3480:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3460:42:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 873,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "3521:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 874,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "3535:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3521:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 900,
															"nodeType": "IfStatement",
															"src": "3517:378:5",
															"trueBody": {
																"id": 899,
																"nodeType": "Block",
																"src": "3546:349:5",
																"statements": [
																	{
																		"assignments": [
																			877
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 877,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3572:9:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 899,
																				"src": "3564:17:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 876,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3564:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 882,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 878,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 842,
																					"src": "3584:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 879,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3588:7:5",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 791,
																				"src": "3584:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 881,
																			"indexExpression": {
																				"id": 880,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 866,
																				"src": "3596:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3584:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3564:42:5"
																	},
																	{
																		"expression": {
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 883,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 842,
																						"src": "3705:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 886,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3709:7:5",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 791,
																					"src": "3705:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 887,
																				"indexExpression": {
																					"id": 885,
																					"name": "valueIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 860,
																					"src": "3717:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3705:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 888,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 877,
																				"src": "3731:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3705:35:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 890,
																		"nodeType": "ExpressionStatement",
																		"src": "3705:35:5"
																	},
																	{
																		"expression": {
																			"id": 897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 891,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 842,
																						"src": "3844:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 894,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3848:10:5",
																					"memberName": "_positions",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 795,
																					"src": "3844:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 895,
																				"indexExpression": {
																					"id": 893,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 877,
																					"src": "3859:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3844:25:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 896,
																				"name": "position",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 850,
																				"src": "3872:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3844:36:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 898,
																		"nodeType": "ExpressionStatement",
																		"src": "3844:36:5"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 901,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "3973:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 904,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3977:7:5",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "3973:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3985:3:5",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3973:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3973:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 907,
															"nodeType": "ExpressionStatement",
															"src": "3973:17:5"
														},
														{
															"expression": {
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4069:28:5",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 908,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "4076:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4080:10:5",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 795,
																		"src": "4076:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 911,
																	"indexExpression": {
																		"id": 910,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "4091:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4076:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 913,
															"nodeType": "ExpressionStatement",
															"src": "4069:28:5"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4119:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 848,
															"id": 915,
															"nodeType": "Return",
															"src": "4112:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "2653:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2824:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2844:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2832:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 840,
														"name": "Set",
														"nameLocations": [
															"2832:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "2832:3:5"
													},
													"referencedDeclaration": 796,
													"src": "2832:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2857:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2849:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 843,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:32:5"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2881:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2881:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:6:5"
									},
									"scope": 1398,
									"src": "2815:1368:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "4343:50:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 933,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "4360:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4364:10:5",
															"memberName": "_positions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 795,
															"src": "4360:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 936,
														"indexExpression": {
															"id": 935,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "4375:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4360:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4385:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4360:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 932,
												"id": 939,
												"nodeType": "Return",
												"src": "4353:33:5"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "4189:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4273:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4295:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "4283:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "Set",
														"nameLocations": [
															"4283:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "4283:3:5"
													},
													"referencedDeclaration": 796,
													"src": "4283:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4308:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "4300:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 927,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:32:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "4337:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 930,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4337:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:6:5"
									},
									"scope": 1398,
									"src": "4264:129:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "4539:42:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 950,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "4556:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4560:7:5",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 791,
														"src": "4556:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4568:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4556:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 949,
												"id": 953,
												"nodeType": "Return",
												"src": "4549:25:5"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "4399:70:5",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4483:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4503:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4491:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 944,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 943,
														"name": "Set",
														"nameLocations": [
															"4491:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "4491:3:5"
													},
													"referencedDeclaration": 796,
													"src": "4491:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:17:5"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4530:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:9:5"
									},
									"scope": 1398,
									"src": "4474:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "4999:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 966,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "5016:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5020:7:5",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 791,
														"src": "5016:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 969,
													"indexExpression": {
														"id": 968,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "5028:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5016:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 965,
												"id": 970,
												"nodeType": "Return",
												"src": "5009:25:5"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "4587:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4932:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4948:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4936:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 958,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 957,
														"name": "Set",
														"nameLocations": [
															"4936:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "4936:3:5"
													},
													"referencedDeclaration": 796,
													"src": "4936:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4961:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4953:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:32:5"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "4990:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 963,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:9:5"
									},
									"scope": 1398,
									"src": "4923:118:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "5655:35:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 982,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "5672:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5676:7:5",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 791,
													"src": "5672:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 981,
												"id": 984,
												"nodeType": "Return",
												"src": "5665:18:5"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "5047:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5590:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5610:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5598:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "Set",
														"nameLocations": [
															"5598:3:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 796,
														"src": "5598:3:5"
													},
													"referencedDeclaration": 796,
													"src": "5598:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:17:5"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5637:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 978,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5637:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 979,
													"nodeType": "ArrayTypeName",
													"src": "5637:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:18:5"
									},
									"scope": 1398,
									"src": "5581:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 990,
									"members": [
										{
											"constant": false,
											"id": 989,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5747:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 990,
											"src": "5743:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 988,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 987,
													"name": "Set",
													"nameLocations": [
														"5743:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 796,
													"src": "5743:3:5"
												},
												"referencedDeclaration": 796,
												"src": "5743:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5722:10:5",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "5715:45:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "6006:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1002,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "6028:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6032:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "6028:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1004,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "6040:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1001,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "6023:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1006,
												"nodeType": "Return",
												"src": "6016:30:5"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "5766:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5939:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5962:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5943:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 993,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 992,
														"name": "Bytes32Set",
														"nameLocations": [
															"5943:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "5943:10:5"
													},
													"referencedDeclaration": 990,
													"src": "5943:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "5967:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 995,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:39:5"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "6000:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6000:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:6:5"
									},
									"scope": 1398,
									"src": "5930:123:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "6300:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1020,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "6325:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6329:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "6325:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1022,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "6337:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1019,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "6317:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1024,
												"nodeType": "Return",
												"src": "6310:33:5"
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "6059:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6230:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6256:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "6237:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1011,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1010,
														"name": "Bytes32Set",
														"nameLocations": [
															"6237:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "6237:10:5"
													},
													"referencedDeclaration": 990,
													"src": "6237:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6269:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "6261:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1013,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:39:5"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "6294:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6294:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:6:5"
									},
									"scope": 1398,
									"src": "6221:129:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "6517:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1038,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "6544:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6548:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "6544:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1040,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "6556:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1037,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "6534:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1042,
												"nodeType": "Return",
												"src": "6527:35:5"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "6356:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6440:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6468:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "6449:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1029,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1028,
														"name": "Bytes32Set",
														"nameLocations": [
															"6449:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "6449:10:5"
													},
													"referencedDeclaration": 990,
													"src": "6449:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6481:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "6473:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:39:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "6511:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6511:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6510:6:5"
									},
									"scope": 1398,
									"src": "6431:138:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "6722:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1054,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1048,
																"src": "6747:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6751:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "6747:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1053,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "6739:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1052,
												"id": 1057,
												"nodeType": "Return",
												"src": "6732:26:5"
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "6575:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6659:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6685:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "6666:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1047,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1046,
														"name": "Bytes32Set",
														"nameLocations": [
															"6666:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "6666:10:5"
													},
													"referencedDeclaration": 990,
													"src": "6666:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:24:5"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "6713:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:9:5"
									},
									"scope": 1398,
									"src": "6650:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "7190:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1071,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "7211:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7215:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "7211:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1073,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "7223:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1070,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "7207:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1069,
												"id": 1075,
												"nodeType": "Return",
												"src": "7200:29:5"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "6771:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7116:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7138:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "7119:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1062,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1061,
														"name": "Bytes32Set",
														"nameLocations": [
															"7119:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "7119:10:5"
													},
													"referencedDeclaration": 990,
													"src": "7119:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7151:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "7143:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7118:39:5"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "7181:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7180:9:5"
									},
									"scope": 1398,
									"src": "7107:129:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "7857:219:5",
										"statements": [
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7884:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "7867:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1089,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7867:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1090,
															"nodeType": "ArrayTypeName",
															"src": "7867:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1093,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "7900:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7904:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 989,
															"src": "7900:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1092,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "7892:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7867:44:5"
											},
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7938:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "7921:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1099,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7921:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1100,
															"nodeType": "ArrayTypeName",
															"src": "7921:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"nodeType": "VariableDeclarationStatement",
												"src": "7921:23:5"
											},
											{
												"AST": {
													"nativeSrc": "8007:39:5",
													"nodeType": "YulBlock",
													"src": "8007:39:5",
													"statements": [
														{
															"nativeSrc": "8021:15:5",
															"nodeType": "YulAssignment",
															"src": "8021:15:5",
															"value": {
																"name": "store",
																"nativeSrc": "8031:5:5",
																"nodeType": "YulIdentifier",
																"src": "8031:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8021:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1101,
														"isOffset": false,
														"isSlot": false,
														"src": "8021:6:5",
														"valueSize": 1
													},
													{
														"declaration": 1091,
														"isOffset": false,
														"isSlot": false,
														"src": "8031:5:5",
														"valueSize": 1
													}
												],
												"id": 1103,
												"nodeType": "InlineAssembly",
												"src": "7998:48:5"
											},
											{
												"expression": {
													"id": 1104,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1101,
													"src": "8063:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1086,
												"id": 1105,
												"nodeType": "Return",
												"src": "8056:13:5"
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "7242:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7785:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7811:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "7792:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1080,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1079,
														"name": "Bytes32Set",
														"nameLocations": [
															"7792:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 990,
														"src": "7792:10:5"
													},
													"referencedDeclaration": 990,
													"src": "7792:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$990_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:24:5"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "7839:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1083,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7839:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1084,
													"nodeType": "ArrayTypeName",
													"src": "7839:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:18:5"
									},
									"scope": 1398,
									"src": "7776:300:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1111,
									"members": [
										{
											"constant": false,
											"id": 1110,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8133:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 1111,
											"src": "8129:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1109,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1108,
													"name": "Set",
													"nameLocations": [
														"8129:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 796,
													"src": "8129:3:5"
												},
												"referencedDeclaration": 796,
												"src": "8129:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8108:10:5",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "8101:45:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "8392:74:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1123,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "8414:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8418:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "8414:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1131,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "8450:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8442:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1129,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8442:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8442:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8434:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1127,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8434:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8434:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8426:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1125,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8426:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8426:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1122,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "8409:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8409:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1136,
												"nodeType": "Return",
												"src": "8402:57:5"
											}
										]
									},
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "8152:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8325:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8348:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "8329:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1114,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1113,
														"name": "AddressSet",
														"nameLocations": [
															"8329:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "8329:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "8329:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8361:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "8353:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8353:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:39:5"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "8386:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8386:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8385:6:5"
									},
									"scope": 1398,
									"src": "8316:150:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "8713:77:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1150,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "8738:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8742:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "8738:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1158,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1144,
																					"src": "8774:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8766:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1156,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8766:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8766:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8758:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1154,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8758:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8758:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8750:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1152,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8750:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8750:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1149,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "8730:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8730:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1163,
												"nodeType": "Return",
												"src": "8723:60:5"
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "8472:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8643:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8669:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "8650:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1141,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1140,
														"name": "AddressSet",
														"nameLocations": [
															"8650:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "8650:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "8650:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8682:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "8674:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8649:39:5"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "8707:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8707:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8706:6:5"
									},
									"scope": 1398,
									"src": "8634:156:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "8957:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1177,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "8984:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8988:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "8984:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1185,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1171,
																					"src": "9020:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9012:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1183,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9012:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9012:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9004:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1181,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9004:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9004:23:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8996:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1179,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8996:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8996:32:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1176,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "8974:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8974:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1175,
												"id": 1190,
												"nodeType": "Return",
												"src": "8967:62:5"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "8796:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8880:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8908:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "8889:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1168,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1167,
														"name": "AddressSet",
														"nameLocations": [
															"8889:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "8889:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "8889:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8921:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "8913:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8913:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:39:5"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "8951:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:6:5"
									},
									"scope": 1398,
									"src": "8871:165:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "9189:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1202,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "9214:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9218:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "9214:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1201,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "9206:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9206:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1205,
												"nodeType": "Return",
												"src": "9199:26:5"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "9042:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9126:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9152:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "9133:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1195,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1194,
														"name": "AddressSet",
														"nameLocations": [
															"9133:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "9133:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "9133:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9132:24:5"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "9180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9179:9:5"
									},
									"scope": 1398,
									"src": "9117:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "9657:73:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1225,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1211,
																						"src": "9702:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1226,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9706:6:5",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1110,
																					"src": "9702:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$796_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1227,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1213,
																					"src": "9714:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$796_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1224,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "9698:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9698:22:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9690:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1222,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9690:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9690:31:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9682:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1220,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9682:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9682:40:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9674:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1218,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9674:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9674:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1217,
												"id": 1232,
												"nodeType": "Return",
												"src": "9667:56:5"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "9238:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9583:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9605:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9586:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1209,
														"name": "AddressSet",
														"nameLocations": [
															"9586:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "9586:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "9586:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9618:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9610:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9610:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9585:39:5"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "9648:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9648:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9647:9:5"
									},
									"scope": 1398,
									"src": "9574:156:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "10351:219:5",
										"statements": [
											{
												"assignments": [
													1248
												],
												"declarations": [
													{
														"constant": false,
														"id": 1248,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10378:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "10361:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1246,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10361:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1247,
															"nodeType": "ArrayTypeName",
															"src": "10361:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1253,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1250,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "10394:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10398:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1110,
															"src": "10394:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1249,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "10386:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10386:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10361:44:5"
											},
											{
												"assignments": [
													1258
												],
												"declarations": [
													{
														"constant": false,
														"id": 1258,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10432:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "10415:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1256,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10415:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1257,
															"nodeType": "ArrayTypeName",
															"src": "10415:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1259,
												"nodeType": "VariableDeclarationStatement",
												"src": "10415:23:5"
											},
											{
												"AST": {
													"nativeSrc": "10501:39:5",
													"nodeType": "YulBlock",
													"src": "10501:39:5",
													"statements": [
														{
															"nativeSrc": "10515:15:5",
															"nodeType": "YulAssignment",
															"src": "10515:15:5",
															"value": {
																"name": "store",
																"nativeSrc": "10525:5:5",
																"nodeType": "YulIdentifier",
																"src": "10525:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10515:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10515:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1258,
														"isOffset": false,
														"isSlot": false,
														"src": "10515:6:5",
														"valueSize": 1
													},
													{
														"declaration": 1248,
														"isOffset": false,
														"isSlot": false,
														"src": "10525:5:5",
														"valueSize": 1
													}
												],
												"id": 1260,
												"nodeType": "InlineAssembly",
												"src": "10492:48:5"
											},
											{
												"expression": {
													"id": 1261,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1258,
													"src": "10557:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1243,
												"id": 1262,
												"nodeType": "Return",
												"src": "10550:13:5"
											}
										]
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "9736:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10279:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10305:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "10286:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1236,
														"name": "AddressSet",
														"nameLocations": [
															"10286:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1111,
														"src": "10286:10:5"
													},
													"referencedDeclaration": 1111,
													"src": "10286:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10285:24:5"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "10333:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1240,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10333:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1241,
													"nodeType": "ArrayTypeName",
													"src": "10333:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10332:18:5"
									},
									"scope": 1398,
									"src": "10270:300:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1268,
									"members": [
										{
											"constant": false,
											"id": 1267,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10621:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 1268,
											"src": "10617:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1266,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1265,
													"name": "Set",
													"nameLocations": [
														"10617:3:5"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 796,
													"src": "10617:3:5"
												},
												"referencedDeclaration": 796,
												"src": "10617:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$796_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10599:7:5",
									"nodeType": "StructDefinition",
									"scope": 1398,
									"src": "10592:42:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "10877:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1280,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "10899:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10903:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "10899:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1284,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "10919:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10911:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1282,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10911:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10911:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1279,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "10894:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10894:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1287,
												"nodeType": "Return",
												"src": "10887:39:5"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "10640:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10813:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10833:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "10817:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1270,
														"name": "UintSet",
														"nameLocations": [
															"10817:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "10817:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "10817:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10846:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "10838:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10816:36:5"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "10871:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10871:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10870:6:5"
									},
									"scope": 1398,
									"src": "10804:129:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "11177:59:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1301,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "11202:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11206:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "11202:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1305,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "11222:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11214:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1303,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11214:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11214:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1300,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "11194:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11194:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1308,
												"nodeType": "Return",
												"src": "11187:42:5"
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "10939:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11110:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11133:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "11117:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1291,
														"name": "UintSet",
														"nameLocations": [
															"11117:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "11117:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "11117:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11146:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "11138:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11138:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11116:36:5"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "11171:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11171:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11170:6:5"
									},
									"scope": 1398,
									"src": "11101:135:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "11400:61:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1322,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "11427:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11431:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "11427:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1326,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "11447:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11439:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1324,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11439:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11439:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1321,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "11417:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11417:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1329,
												"nodeType": "Return",
												"src": "11410:44:5"
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "11242:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11326:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11351:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "11335:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1312,
														"name": "UintSet",
														"nameLocations": [
															"11335:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "11335:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "11335:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11364:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "11356:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11356:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11334:36:5"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "11394:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11394:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11393:6:5"
									},
									"scope": 1398,
									"src": "11317:144:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "11611:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1341,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "11636:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11640:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "11636:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1340,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "11628:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11628:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1339,
												"id": 1344,
												"nodeType": "Return",
												"src": "11621:26:5"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "11467:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11551:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11574:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "11558:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1333,
														"name": "UintSet",
														"nameLocations": [
															"11558:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "11558:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "11558:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11557:21:5"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "11602:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11601:9:5"
									},
									"scope": 1398,
									"src": "11542:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "12076:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1360,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "12105:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12109:6:5",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1267,
																	"src": "12105:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$796_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 1362,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "12117:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$796_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1359,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "12101:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12101:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12093:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12093:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12093:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1365,
												"nodeType": "Return",
												"src": "12086:38:5"
											}
										]
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "11660:331:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12005:2:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12024:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "12008:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1348,
														"name": "UintSet",
														"nameLocations": [
															"12008:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "12008:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "12008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12037:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "12029:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12007:36:5"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "12067:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12067:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12066:9:5"
									},
									"scope": 1398,
									"src": "11996:135:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "12749:219:5",
										"statements": [
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12776:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1396,
														"src": "12759:22:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1379,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12759:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1380,
															"nodeType": "ArrayTypeName",
															"src": "12759:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1383,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "12792:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12796:6:5",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1267,
															"src": "12792:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$796_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1382,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "12784:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$796_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12784:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12759:44:5"
											},
											{
												"assignments": [
													1391
												],
												"declarations": [
													{
														"constant": false,
														"id": 1391,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12830:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1396,
														"src": "12813:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1389,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12813:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1390,
															"nodeType": "ArrayTypeName",
															"src": "12813:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1392,
												"nodeType": "VariableDeclarationStatement",
												"src": "12813:23:5"
											},
											{
												"AST": {
													"nativeSrc": "12899:39:5",
													"nodeType": "YulBlock",
													"src": "12899:39:5",
													"statements": [
														{
															"nativeSrc": "12913:15:5",
															"nodeType": "YulAssignment",
															"src": "12913:15:5",
															"value": {
																"name": "store",
																"nativeSrc": "12923:5:5",
																"nodeType": "YulIdentifier",
																"src": "12923:5:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12913:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1391,
														"isOffset": false,
														"isSlot": false,
														"src": "12913:6:5",
														"valueSize": 1
													},
													{
														"declaration": 1381,
														"isOffset": false,
														"isSlot": false,
														"src": "12923:5:5",
														"valueSize": 1
													}
												],
												"id": 1393,
												"nodeType": "InlineAssembly",
												"src": "12890:48:5"
											},
											{
												"expression": {
													"id": 1394,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1391,
													"src": "12955:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1376,
												"id": 1395,
												"nodeType": "Return",
												"src": "12948:13:5"
											}
										]
									},
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "12137:529:5",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12680:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12703:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "12687:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1369,
														"name": "UintSet",
														"nameLocations": [
															"12687:7:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1268,
														"src": "12687:7:5"
													},
													"referencedDeclaration": 1268,
													"src": "12687:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1268_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12686:21:5"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "12731:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1373,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12731:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1374,
													"nodeType": "ArrayTypeName",
													"src": "12731:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12730:18:5"
									},
									"scope": 1398,
									"src": "12671:297:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1399,
							"src": "1330:11640:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "205:12766:5"
				},
				"id": 5
			},
			"base/WeightedVoting.sol": {
				"ast": {
					"absolutePath": "base/WeightedVoting.sol",
					"exportedSymbols": {
						"ERC20": [
							651
						],
						"EnumerableSet": [
							1398
						],
						"WeightedVoting": [
							1762
						]
					},
					"id": 1763,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 652,
							"src": "68:68:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1401,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 651,
										"src": "76:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 1404,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1763,
							"sourceUnit": 1399,
							"src": "138:86:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1403,
										"name": "EnumerableSet",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1398,
										"src": "146:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1405,
										"name": "ERC20",
										"nameLocations": [
											"306:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "306:5:6"
									},
									"id": 1406,
									"nodeType": "InheritanceSpecifier",
									"src": "306:5:6"
								}
							],
							"canonicalName": "WeightedVoting",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1762,
							"linearizedBaseContracts": [
								1762,
								651,
								41,
								755,
								729,
								785
							],
							"name": "WeightedVoting",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1410,
									"libraryName": {
										"id": 1407,
										"name": "EnumerableSet",
										"nameLocations": [
											"325:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1398,
										"src": "325:13:6"
									},
									"nodeType": "UsingForDirective",
									"src": "319:49:6",
									"typeName": {
										"id": 1409,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1408,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"343:13:6",
												"357:10:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1111,
											"src": "343:24:6"
										},
										"referencedDeclaration": 1111,
										"src": "343:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"canonicalName": "WeightedVoting.Issue",
									"id": 1430,
									"members": [
										{
											"constant": false,
											"id": 1413,
											"mutability": "mutable",
											"name": "voters",
											"nameLocation": "425:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1430,
											"src": "400:31:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											},
											"typeName": {
												"id": 1412,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1411,
													"name": "EnumerableSet.AddressSet",
													"nameLocations": [
														"400:13:6",
														"414:10:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1111,
													"src": "400:24:6"
												},
												"referencedDeclaration": 1111,
												"src": "400:24:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1111_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1415,
											"mutability": "mutable",
											"name": "issueDesc",
											"nameLocation": "449:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1430,
											"src": "442:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1414,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "442:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1417,
											"mutability": "mutable",
											"name": "votesFor",
											"nameLocation": "477:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1430,
											"src": "469:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1416,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "469:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1419,
											"mutability": "mutable",
											"name": "votesAgainst",
											"nameLocation": "504:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 1430,
											"src": "496:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "496:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1421,
											"mutability": "mutable",
											"name": "votesAbstain",
											"nameLocation": "535:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 1430,
											"src": "527:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "527:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1423,
											"mutability": "mutable",
											"name": "totalVotes",
											"nameLocation": "566:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 1430,
											"src": "558:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1422,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1425,
											"mutability": "mutable",
											"name": "quorum",
											"nameLocation": "595:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1430,
											"src": "587:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1424,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "587:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1427,
											"mutability": "mutable",
											"name": "passed",
											"nameLocation": "617:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1430,
											"src": "612:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1426,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "612:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1429,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "639:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1430,
											"src": "634:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1428,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "634:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Issue",
									"nameLocation": "383:5:6",
									"nodeType": "StructDefinition",
									"scope": 1762,
									"src": "376:277:6",
									"visibility": "public"
								},
								{
									"canonicalName": "WeightedVoting.IssueView",
									"id": 1450,
									"members": [
										{
											"constant": false,
											"id": 1433,
											"mutability": "mutable",
											"name": "voters",
											"nameLocation": "699:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "689:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1432,
												"nodeType": "ArrayTypeName",
												"src": "689:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1435,
											"mutability": "mutable",
											"name": "issueDesc",
											"nameLocation": "723:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "716:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1434,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "716:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1437,
											"mutability": "mutable",
											"name": "votesFor",
											"nameLocation": "751:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "743:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1436,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "743:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1439,
											"mutability": "mutable",
											"name": "votesAgainst",
											"nameLocation": "778:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "770:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1438,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "770:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1441,
											"mutability": "mutable",
											"name": "votesAbstain",
											"nameLocation": "809:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "801:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1440,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "801:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1443,
											"mutability": "mutable",
											"name": "totalVotes",
											"nameLocation": "840:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "832:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1442,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "832:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1445,
											"mutability": "mutable",
											"name": "quorum",
											"nameLocation": "869:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "861:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1444,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "861:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1447,
											"mutability": "mutable",
											"name": "passed",
											"nameLocation": "891:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "886:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1446,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "886:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1449,
											"mutability": "mutable",
											"name": "closed",
											"nameLocation": "913:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "908:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1448,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "908:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IssueView",
									"nameLocation": "668:9:6",
									"nodeType": "StructDefinition",
									"scope": 1762,
									"src": "661:266:6",
									"visibility": "public"
								},
								{
									"canonicalName": "WeightedVoting.Votes",
									"id": 1454,
									"members": [
										{
											"id": 1451,
											"name": "For",
											"nameLocation": "957:3:6",
											"nodeType": "EnumValue",
											"src": "957:3:6"
										},
										{
											"id": 1452,
											"name": "Against",
											"nameLocation": "971:7:6",
											"nodeType": "EnumValue",
											"src": "971:7:6"
										},
										{
											"id": 1453,
											"name": "Abstain",
											"nameLocation": "989:7:6",
											"nodeType": "EnumValue",
											"src": "989:7:6"
										}
									],
									"name": "Votes",
									"nameLocation": "940:5:6",
									"nodeType": "EnumDefinition",
									"src": "935:68:6"
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 1458,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "1083:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "1048:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1457,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1455,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1056:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1048:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1456,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1067:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73b2e80e",
									"id": 1462,
									"mutability": "mutable",
									"name": "hasClaimed",
									"nameLocation": "1188:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "1156:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1461,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1459,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1164:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1156:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1460,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1175:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 1465,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "1265:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "1250:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1463,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1250:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "315f3030305f303030",
										"id": 1464,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1277:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1_000_000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1469,
									"mutability": "mutable",
									"name": "issues",
									"nameLocation": "1346:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1762,
									"src": "1330:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Issue_$1430_storage_$dyn_storage",
										"typeString": "struct WeightedVoting.Issue[]"
									},
									"typeName": {
										"baseType": {
											"id": 1467,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1466,
												"name": "Issue",
												"nameLocations": [
													"1330:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1430,
												"src": "1330:5:6"
											},
											"referencedDeclaration": 1430,
											"src": "1330:5:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
												"typeString": "struct WeightedVoting.Issue"
											}
										},
										"id": 1468,
										"nodeType": "ArrayTypeName",
										"src": "1330:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Issue_$1430_storage_$dyn_storage_ptr",
											"typeString": "struct WeightedVoting.Issue[]"
										}
									},
									"visibility": "private"
								},
								{
									"errorSelector": "0b1327a6",
									"id": 1471,
									"name": "TokensClaimed",
									"nameLocation": "1367:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1380:2:6"
									},
									"src": "1361:22:6"
								},
								{
									"errorSelector": "cbe24831",
									"id": 1473,
									"name": "AllTokensClaimed",
									"nameLocation": "1395:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1411:2:6"
									},
									"src": "1389:25:6"
								},
								{
									"errorSelector": "8439960d",
									"id": 1475,
									"name": "NoTokensHeld",
									"nameLocation": "1426:12:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:2:6"
									},
									"src": "1420:21:6"
								},
								{
									"errorSelector": "589a4952",
									"id": 1479,
									"name": "QuorumTooHigh",
									"nameLocation": "1453:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "quorum",
												"nameLocation": "1475:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "1467:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1466:16:6"
									},
									"src": "1447:36:6"
								},
								{
									"errorSelector": "7c9a1cf9",
									"id": 1481,
									"name": "AlreadyVoted",
									"nameLocation": "1495:12:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:6"
									},
									"src": "1489:21:6"
								},
								{
									"errorSelector": "66b6cb4a",
									"id": 1483,
									"name": "VotingClosed",
									"nameLocation": "1522:12:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1534:2:6"
									},
									"src": "1516:21:6"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "1589:129:6",
										"statements": [
											{
												"assignments": [
													1492
												],
												"declarations": [
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "newIssue",
														"nameLocation": "1614:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1509,
														"src": "1600:22:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
															"typeString": "struct WeightedVoting.Issue"
														},
														"typeName": {
															"id": 1491,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1490,
																"name": "Issue",
																"nameLocations": [
																	"1600:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1430,
																"src": "1600:5:6"
															},
															"referencedDeclaration": 1430,
															"src": "1600:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																"typeString": "struct WeightedVoting.Issue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1493,
															"name": "issues",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "1625:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Issue_$1430_storage_$dyn_storage",
																"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1632:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1625:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Issue_$1430_storage_$dyn_storage_ptr_$returns$_t_struct$_Issue_$1430_storage_$attached_to$_t_array$_t_struct$_Issue_$1430_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct WeightedVoting.Issue storage ref[] storage pointer) returns (struct WeightedVoting.Issue storage ref)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1625:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Issue_$1430_storage",
														"typeString": "struct WeightedVoting.Issue storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1600:38:6"
											},
											{
												"expression": {
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1497,
															"name": "newIssue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "1649:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1658:9:6",
														"memberName": "issueDesc",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1415,
														"src": "1649:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "6275726e74",
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1670:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_171fda8db228143673795e516072b1dcfcfd9ada7f3872f532b8b642d61aed74",
															"typeString": "literal_string \"burnt\""
														},
														"value": "burnt"
													},
													"src": "1649:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "1649:28:6"
											},
											{
												"expression": {
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1503,
															"name": "newIssue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "1688:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1697:6:6",
														"memberName": "closed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1429,
														"src": "1688:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1706:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1688:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "1688:22:6"
											}
										]
									},
									"id": 1510,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5765696768746564566f74696e67",
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1565:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3a99cc1564eba3ea7a2d53481347b818d0bba5ce8775504998bf467b9dd663af",
														"typeString": "literal_string \"WeightedVoting\""
													},
													"value": "WeightedVoting"
												},
												{
													"hexValue": "5756",
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1583:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_bb8e02ce55e7490e29fc37c845954ccd74d891ba62531b9d631fec47381642c9",
														"typeString": "literal_string \"WV\""
													},
													"value": "WV"
												}
											],
											"id": 1488,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1485,
												"name": "ERC20",
												"nameLocations": [
													"1559:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "1559:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1559:29:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1556:2:6"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1589:0:6"
									},
									"scope": 1762,
									"src": "1545:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1542,
										"nodeType": "Block",
										"src": "1914:212:6",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 1513,
														"name": "hasClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "1929:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1516,
													"indexExpression": {
														"expression": {
															"id": 1514,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1940:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1944:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1940:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1929:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1520,
												"nodeType": "IfStatement",
												"src": "1925:50:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1517,
															"name": "TokensClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "1960:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1960:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1519,
													"nodeType": "RevertStatement",
													"src": "1953:22:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1521,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1990:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1990:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1523,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "2007:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1990:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1528,
												"nodeType": "IfStatement",
												"src": "1986:57:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1525,
															"name": "AllTokensClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "2025:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2025:18:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1527,
													"nodeType": "RevertStatement",
													"src": "2018:25:6"
												}
											},
											{
												"expression": {
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1529,
															"name": "hasClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "2056:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1532,
														"indexExpression": {
															"expression": {
																"id": 1530,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2067:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2071:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2067:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2056:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2081:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2056:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "2056:29:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1537,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2102:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2106:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2102:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "313030",
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2114:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"id": 1536,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2096:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2096:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1541,
												"nodeType": "ExpressionStatement",
												"src": "2096:22:6"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 1543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "1899:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:6"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1914:0:6"
									},
									"scope": 1762,
									"src": "1890:236:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1595,
										"nodeType": "Block",
										"src": "2546:307:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1553,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2571:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2575:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2571:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1552,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "2561:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2561:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2586:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2561:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1561,
												"nodeType": "IfStatement",
												"src": "2557:53:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1558,
															"name": "NoTokensHeld",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "2596:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2596:14:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1560,
													"nodeType": "RevertStatement",
													"src": "2589:21:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1562,
														"name": "_quorum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "2625:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1563,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "2635:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2635:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2625:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1570,
												"nodeType": "IfStatement",
												"src": "2621:58:6",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1567,
																"name": "_quorum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1547,
																"src": "2671:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1566,
															"name": "QuorumTooHigh",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "2657:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2657:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1569,
													"nodeType": "RevertStatement",
													"src": "2650:29:6"
												}
											},
											{
												"assignments": [
													1573
												],
												"declarations": [
													{
														"constant": false,
														"id": 1573,
														"mutability": "mutable",
														"name": "newIssue",
														"nameLocation": "2706:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1595,
														"src": "2692:22:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
															"typeString": "struct WeightedVoting.Issue"
														},
														"typeName": {
															"id": 1572,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1571,
																"name": "Issue",
																"nameLocations": [
																	"2692:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1430,
																"src": "2692:5:6"
															},
															"referencedDeclaration": 1430,
															"src": "2692:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																"typeString": "struct WeightedVoting.Issue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1577,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1574,
															"name": "issues",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "2717:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Issue_$1430_storage_$dyn_storage",
																"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2724:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2717:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Issue_$1430_storage_$dyn_storage_ptr_$returns$_t_struct$_Issue_$1430_storage_$attached_to$_t_array$_t_struct$_Issue_$1430_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct WeightedVoting.Issue storage ref[] storage pointer) returns (struct WeightedVoting.Issue storage ref)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2717:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Issue_$1430_storage",
														"typeString": "struct WeightedVoting.Issue storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2692:38:6"
											},
											{
												"expression": {
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1578,
															"name": "newIssue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "2741:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2750:9:6",
														"memberName": "issueDesc",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1415,
														"src": "2741:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1581,
														"name": "_issueDesc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "2762:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"src": "2741:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "2741:31:6"
											},
											{
												"expression": {
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1584,
															"name": "newIssue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "2783:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2792:6:6",
														"memberName": "quorum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1425,
														"src": "2783:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1587,
														"name": "_quorum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "2801:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2783:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "2783:25:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1590,
															"name": "issues",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "2828:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Issue_$1430_storage_$dyn_storage",
																"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2835:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2828:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2844:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2828:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1551,
												"id": 1594,
												"nodeType": "Return",
												"src": "2821:24:6"
											}
										]
									},
									"functionSelector": "8615d855",
									"id": 1596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createIssue",
									"nameLocation": "2462:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "_issueDesc",
												"nameLocation": "2490:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2474:26:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2474:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "_quorum",
												"nameLocation": "2510:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2502:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2473:45:6"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "2537:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2537:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2536:9:6"
									},
									"scope": 1762,
									"src": "2453:400:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "3070:463:6",
										"statements": [
											{
												"assignments": [
													1606
												],
												"declarations": [
													{
														"constant": false,
														"id": 1606,
														"mutability": "mutable",
														"name": "issue",
														"nameLocation": "3095:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1634,
														"src": "3081:19:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
															"typeString": "struct WeightedVoting.Issue"
														},
														"typeName": {
															"id": 1605,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1604,
																"name": "Issue",
																"nameLocations": [
																	"3081:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1430,
																"src": "3081:5:6"
															},
															"referencedDeclaration": 1430,
															"src": "3081:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																"typeString": "struct WeightedVoting.Issue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1610,
												"initialValue": {
													"baseExpression": {
														"id": 1607,
														"name": "issues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "3103:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Issue_$1430_storage_$dyn_storage",
															"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
														}
													},
													"id": 1609,
													"indexExpression": {
														"id": 1608,
														"name": "_issueId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "3110:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3103:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Issue_$1430_storage",
														"typeString": "struct WeightedVoting.Issue storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3081:38:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"expression": {
																		"id": 1612,
																		"name": "issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1606,
																		"src": "3170:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3176:6:6",
																	"memberName": "voters",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1413,
																	"src": "3170:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$1111_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 1614,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3183:6:6",
																"memberName": "values",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1264,
																"src": "3170:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1111_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$1111_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
																}
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3170:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"expression": {
																"id": 1616,
																"name": "issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "3217:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3223:9:6",
															"memberName": "issueDesc",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1415,
															"src": "3217:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 1618,
																"name": "issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "3255:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3261:6:6",
															"memberName": "quorum",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1425,
															"src": "3255:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1620,
																"name": "issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "3294:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3300:10:6",
															"memberName": "totalVotes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1423,
															"src": "3294:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1622,
																"name": "issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "3335:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3341:8:6",
															"memberName": "votesFor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1417,
															"src": "3335:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1624,
																"name": "issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "3378:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3384:12:6",
															"memberName": "votesAgainst",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1419,
															"src": "3378:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1626,
																"name": "issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "3425:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3431:12:6",
															"memberName": "votesAbstain",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1421,
															"src": "3425:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1628,
																"name": "issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "3466:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3472:6:6",
															"memberName": "passed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1427,
															"src": "3466:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 1630,
																"name": "issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "3501:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3507:6:6",
															"memberName": "closed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1429,
															"src": "3501:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1611,
														"name": "IssueView",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "3137:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_IssueView_$1450_storage_ptr_$",
															"typeString": "type(struct WeightedVoting.IssueView storage pointer)"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"3162:6:6",
														"3206:9:6",
														"3247:6:6",
														"3282:10:6",
														"3325:8:6",
														"3364:12:6",
														"3411:12:6",
														"3458:6:6",
														"3493:6:6"
													],
													"names": [
														"voters",
														"issueDesc",
														"quorum",
														"totalVotes",
														"votesFor",
														"votesAgainst",
														"votesAbstain",
														"passed",
														"closed"
													],
													"nodeType": "FunctionCall",
													"src": "3137:388:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IssueView_$1450_memory_ptr",
														"typeString": "struct WeightedVoting.IssueView memory"
													}
												},
												"functionReturnParameters": 1603,
												"id": 1633,
												"nodeType": "Return",
												"src": "3130:395:6"
											}
										]
									},
									"functionSelector": "976b3113",
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIssue",
									"nameLocation": "3002:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "_issueId",
												"nameLocation": "3019:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3011:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3011:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3010:18:6"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3052:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IssueView_$1450_memory_ptr",
													"typeString": "struct WeightedVoting.IssueView"
												},
												"typeName": {
													"id": 1601,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1600,
														"name": "IssueView",
														"nameLocations": [
															"3052:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1450,
														"src": "3052:9:6"
													},
													"referencedDeclaration": 1450,
													"src": "3052:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IssueView_$1450_storage_ptr",
														"typeString": "struct WeightedVoting.IssueView"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:18:6"
									},
									"scope": 1762,
									"src": "2993:540:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "3855:824:6",
										"statements": [
											{
												"assignments": [
													1645
												],
												"declarations": [
													{
														"constant": false,
														"id": 1645,
														"mutability": "mutable",
														"name": "issue",
														"nameLocation": "3880:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1760,
														"src": "3866:19:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
															"typeString": "struct WeightedVoting.Issue"
														},
														"typeName": {
															"id": 1644,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1643,
																"name": "Issue",
																"nameLocations": [
																	"3866:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1430,
																"src": "3866:5:6"
															},
															"referencedDeclaration": 1430,
															"src": "3866:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																"typeString": "struct WeightedVoting.Issue"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1649,
												"initialValue": {
													"baseExpression": {
														"id": 1646,
														"name": "issues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "3888:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Issue_$1430_storage_$dyn_storage",
															"typeString": "struct WeightedVoting.Issue storage ref[] storage ref"
														}
													},
													"id": 1648,
													"indexExpression": {
														"id": 1647,
														"name": "_issueId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "3895:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3888:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Issue_$1430_storage",
														"typeString": "struct WeightedVoting.Issue storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3866:38:6"
											},
											{
												"condition": {
													"expression": {
														"id": 1650,
														"name": "issue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "3919:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
															"typeString": "struct WeightedVoting.Issue storage pointer"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:6",
													"memberName": "closed",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1429,
													"src": "3919:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1655,
												"nodeType": "IfStatement",
												"src": "3915:39:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1652,
															"name": "VotingClosed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "3940:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3940:14:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1654,
													"nodeType": "RevertStatement",
													"src": "3933:21:6"
												}
											},
											{
												"condition": {
													"arguments": [
														{
															"expression": {
																"id": 1659,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3991:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3995:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3991:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1656,
																"name": "issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "3969:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3975:6:6",
															"memberName": "voters",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1413,
															"src": "3969:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1111_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1658,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3982:8:6",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1192,
														"src": "3969:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1111_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1111_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3969:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1665,
												"nodeType": "IfStatement",
												"src": "3965:60:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1662,
															"name": "AlreadyVoted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "4011:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4011:14:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1664,
													"nodeType": "RevertStatement",
													"src": "4004:21:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1667,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4050:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4054:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4050:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1666,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "4040:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4040:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4065:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4040:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1675,
												"nodeType": "IfStatement",
												"src": "4036:53:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1672,
															"name": "NoTokensHeld",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "4075:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4075:14:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1674,
													"nodeType": "RevertStatement",
													"src": "4068:21:6"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1681,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4119:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4123:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4119:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1676,
																"name": "issue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "4102:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																	"typeString": "struct WeightedVoting.Issue storage pointer"
																}
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4108:6:6",
															"memberName": "voters",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1413,
															"src": "4102:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1111_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4115:3:6",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1138,
														"src": "4102:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1111_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$1111_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4102:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1684,
												"nodeType": "ExpressionStatement",
												"src": "4102:28:6"
											},
											{
												"expression": {
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1685,
															"name": "issue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "4141:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4147:10:6",
														"memberName": "totalVotes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1423,
														"src": "4141:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1689,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4171:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4175:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4171:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1688,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "4161:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4161:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4141:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "4141:41:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Votes_$1454",
														"typeString": "enum WeightedVoting.Votes"
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1694,
														"name": "_vote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "4199:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Votes_$1454",
															"typeString": "enum WeightedVoting.Votes"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1695,
															"name": "Votes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "4208:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Votes_$1454_$",
																"typeString": "type(enum WeightedVoting.Votes)"
															}
														},
														"id": 1696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4214:3:6",
														"memberName": "For",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1451,
														"src": "4208:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Votes_$1454",
															"typeString": "enum WeightedVoting.Votes"
														}
													},
													"src": "4199:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_Votes_$1454",
															"typeString": "enum WeightedVoting.Votes"
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1708,
															"name": "_vote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "4295:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Votes_$1454",
																"typeString": "enum WeightedVoting.Votes"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1709,
																"name": "Votes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "4304:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Votes_$1454_$",
																	"typeString": "type(enum WeightedVoting.Votes)"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4310:7:6",
															"memberName": "Against",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1452,
															"src": "4304:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Votes_$1454",
																"typeString": "enum WeightedVoting.Votes"
															}
														},
														"src": "4295:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1731,
														"nodeType": "Block",
														"src": "4395:70:6",
														"statements": [
															{
																"expression": {
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 1722,
																			"name": "issue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1645,
																			"src": "4410:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																				"typeString": "struct WeightedVoting.Issue storage pointer"
																			}
																		},
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "4416:12:6",
																		"memberName": "votesAbstain",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1421,
																		"src": "4410:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1726,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4442:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4446:6:6",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4442:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1725,
																			"name": "balanceOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "4432:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view returns (uint256)"
																			}
																		},
																		"id": 1728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4432:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4410:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1730,
																"nodeType": "ExpressionStatement",
																"src": "4410:43:6"
															}
														]
													},
													"id": 1732,
													"nodeType": "IfStatement",
													"src": "4291:174:6",
													"trueBody": {
														"id": 1721,
														"nodeType": "Block",
														"src": "4319:70:6",
														"statements": [
															{
																"expression": {
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 1712,
																			"name": "issue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1645,
																			"src": "4334:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																				"typeString": "struct WeightedVoting.Issue storage pointer"
																			}
																		},
																		"id": 1714,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "4340:12:6",
																		"memberName": "votesAgainst",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1419,
																		"src": "4334:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1716,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4366:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4370:6:6",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4366:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1715,
																			"name": "balanceOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "4356:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view returns (uint256)"
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4356:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4334:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1720,
																"nodeType": "ExpressionStatement",
																"src": "4334:43:6"
															}
														]
													}
												},
												"id": 1733,
												"nodeType": "IfStatement",
												"src": "4195:270:6",
												"trueBody": {
													"id": 1707,
													"nodeType": "Block",
													"src": "4219:66:6",
													"statements": [
														{
															"expression": {
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1698,
																		"name": "issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "4234:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4240:8:6",
																	"memberName": "votesFor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1417,
																	"src": "4234:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1702,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4262:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4266:6:6",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4262:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1701,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "4252:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4252:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4234:39:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1706,
															"nodeType": "ExpressionStatement",
															"src": "4234:39:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1734,
															"name": "issue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "4481:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 1735,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4487:10:6",
														"memberName": "totalVotes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1423,
														"src": "4481:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 1736,
															"name": "issue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "4501:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																"typeString": "struct WeightedVoting.Issue storage pointer"
															}
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4507:6:6",
														"memberName": "quorum",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1425,
														"src": "4501:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4481:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1759,
												"nodeType": "IfStatement",
												"src": "4477:195:6",
												"trueBody": {
													"id": 1758,
													"nodeType": "Block",
													"src": "4515:157:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1739,
																		"name": "issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "4534:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4540:8:6",
																	"memberName": "votesFor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1417,
																	"src": "4534:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 1741,
																		"name": "issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "4551:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4557:12:6",
																	"memberName": "votesAgainst",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1419,
																	"src": "4551:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4534:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1751,
															"nodeType": "IfStatement",
															"src": "4530:95:6",
															"trueBody": {
																"id": 1750,
																"nodeType": "Block",
																"src": "4571:54:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1744,
																					"name": "issue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1645,
																					"src": "4590:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																						"typeString": "struct WeightedVoting.Issue storage pointer"
																					}
																				},
																				"id": 1746,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "4596:6:6",
																				"memberName": "passed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1427,
																				"src": "4590:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4605:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "4590:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1749,
																		"nodeType": "ExpressionStatement",
																		"src": "4590:19:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1752,
																		"name": "issue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "4641:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Issue_$1430_storage_ptr",
																			"typeString": "struct WeightedVoting.Issue storage pointer"
																		}
																	},
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4647:6:6",
																	"memberName": "closed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1429,
																	"src": "4641:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4656:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4641:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1757,
															"nodeType": "ExpressionStatement",
															"src": "4641:19:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "943e8216",
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "3810:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "_issueId",
												"nameLocation": "3823:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "3815:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "_vote",
												"nameLocation": "3839:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "3833:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Votes_$1454",
													"typeString": "enum WeightedVoting.Votes"
												},
												"typeName": {
													"id": 1639,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1638,
														"name": "Votes",
														"nameLocations": [
															"3833:5:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1454,
														"src": "3833:5:6"
													},
													"referencedDeclaration": 1454,
													"src": "3833:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Votes_$1454",
														"typeString": "enum WeightedVoting.Votes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3814:31:6"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3855:0:6"
									},
									"scope": 1762,
									"src": "3801:878:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1763,
							"src": "279:4403:6",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40,
								1471,
								1473,
								1475,
								1479,
								1481,
								1483
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "40:4642:6"
				},
				"id": 6
			}
		}
	}
}