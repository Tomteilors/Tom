{
	"id": "4f41bb7b814f72cb7a28bef8f661439d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"base/HaikuNFT.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.17;\r\n\r\nimport {ERC721} from \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\n\r\n// @title HaikuNFT\r\n// @author NelsonRodMar\r\ncontract HaikuNFT is ERC721 {\r\n    // @notice Struct to store a haiku\r\n    struct Haiku {\r\n        address autor;\r\n        string line1;\r\n        string line2;\r\n        string line3;\r\n    }\r\n\r\n    // @notice An array of all the haikus\r\n    Haiku[] public haikus;\r\n\r\n    // @notice Mapping user to shared haikus\r\n    mapping(address => uint256[]) public sharedHaikus;\r\n\r\n    // @notice Mapping to check if a line is already used\r\n    mapping(string => bool) private usedLines;\r\n\r\n    // @notice Counter to keep track of the number of haikus\r\n    uint256 public counter = 1;\r\n\r\n    error NotYourHaiku(uint256 id);\r\n    error HaikuNotUnique();\r\n    error NoHaikusShared();\r\n\r\n    constructor() ERC721(\"HaikuNFT\", \"HAIKU\") {}\r\n\r\n    // @notice Mint a new haiku\r\n    // @dev The haiku is minted to the caller and any line of the haiku must be unique\r\n    // @param _line1 The first line of the haiku\r\n    // @param _line2 The second line of the haiku\r\n    // @param _line3 The third line of the haiku\r\n    function mintHaiku(string memory _line1, string memory _line2, string memory _line3) external {\r\n        if (counter > 11) revert(\"No more haikus\");\r\n        // Check that the line are not already used\r\n        if (usedLines[_line1] || usedLines[_line2] || usedLines[_line3]) {\r\n            revert HaikuNotUnique();\r\n        }\r\n\r\n        usedLines[_line1] = true;\r\n        usedLines[_line2] = true;\r\n        usedLines[_line3] = true;\r\n\r\n        haikus.push(Haiku(msg.sender, _line1, _line2, _line3));\r\n        _mint(msg.sender, counter);\r\n\r\n        counter++;\r\n    }\r\n\r\n    // @notice Share a haiku with another user\r\n    // @dev The haiku must belong to the caller\r\n    // @param _to The address of the user to share the haiku with\r\n    // @param _id The id of the haiku to share\r\n    function shareHaiku(address _to, uint256 _id) external {\r\n        if (haikus[_id].autor != msg.sender) revert NotYourHaiku(_id);\r\n        sharedHaikus[_to].push(_id);\r\n    }\r\n\r\n    // @notice Get all the haikus shared with the caller\r\n    // @dev The caller must have at least one haiku shared with them otherwise it will revert\r\n    // @return _haikus The haikus shared with the caller\r\n    function getMySharedHaikus() public view returns (Haiku[] memory) {\r\n        // We first need to know how many haikus is shared with the caller\r\n        uint256 totalHaikuShared = sharedHaikus[msg.sender].length;\r\n        if (totalHaikuShared == 0) revert NoHaikusShared();\r\n\r\n        // We create an array of haikus with the correct size\r\n        Haiku[] memory _haikus = new Haiku[](totalHaikuShared);\r\n\r\n        // We fill the array with the haikus\r\n        for (uint256 i = 0; i < totalHaikuShared; i++) {\r\n            _haikus[i] = haikus[sharedHaikus[msg.sender][i]];\r\n        }\r\n\r\n        return _haikus;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D ADD 0x1F PUSH10 0xBF6E659C6D111FB8052 0xDA EXTCODESIZE SWAP11 PUSH3 0x6D292B 0x25 MSIZE TLOAD PUSH16 0xC5A403F14A616B64736F6C6343000819 STOP CALLER ",
							"sourceMap": "251:2847:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d011f690bf6e659c6d111fb8052da3b9a626d292b25595c6fc5a403f14a616b64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"base/HaikuNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH23 0x350A279AF382B692947A5AA6F56D5947ABCDAA86F439A7 0xC0 DUP13 0xAC PUSH27 0x8DED2B64736F6C6343000819003300000000000000000000000000 ",
							"sourceMap": "203:14914:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201976350a279af382b692947a5aa6f56d5947abcdaa86f439a7c08cac7a8ded2b64736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"base/HaikuNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE LOG2 0xEF EXTCODEHASH DUP9 0xBE DUP5 STOP 0xCE 0xBD SWAP8 CALLDATACOPY 0xB8 0xCB MLOAD PUSH28 0xF9973BFA41911F1861C42B7B76811B3164736F6C6343000819003300 ",
							"sourceMap": "216:1047:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201aa2ef3f88be8400cebd9737b8cb517bf9973bfa41911f1861c42b7b76811b3164736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"base/HaikuNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"base/HaikuNFT.sol": {
				"HaikuNFT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HaikuNotUnique",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoHaikusShared",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "NotYourHaiku",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "counter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMySharedHaikus",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "autor",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "line1",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "line2",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "line3",
											"type": "string"
										}
									],
									"internalType": "struct HaikuNFT.Haiku[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "haikus",
							"outputs": [
								{
									"internalType": "address",
									"name": "autor",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "line1",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "line2",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "line3",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_line1",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_line2",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_line3",
									"type": "string"
								}
							],
							"name": "mintHaiku",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "shareHaiku",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "sharedHaikus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"base/HaikuNFT.sol\":188:2987  contract HaikuNFT is ERC721 {... */\n  mstore(0x40, 0x80)\n    /* \"base/HaikuNFT.sol\":758:759  1 */\n  0x01\n    /* \"base/HaikuNFT.sol\":733:759  uint256 public counter = 1 */\n  0x09\n  sstore\n    /* \"base/HaikuNFT.sol\":865:909  constructor() ERC721(\"HaikuNFT\", \"HAIKU\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x4861696b754e4654000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x4841494b55000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"base/HaikuNFT.sol\":188:2987  contract HaikuNFT is ERC721 {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"base/HaikuNFT.sol\":188:2987  contract HaikuNFT is ERC721 {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"base/HaikuNFT.sol\":188:2987  contract HaikuNFT is ERC721 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x61bc221a\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x97afe82d\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x97afe82d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x61bc221a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7cb82b2a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x095ea7b3\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x350fe165\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x49af5bfe\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0884d540\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"base/HaikuNFT.sol\":1975:2148  function shareHaiku(address _to, uint256 _id) external {... */\n    tag_6:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"base/HaikuNFT.sol\":1189:1755  function mintHaiku(string memory _line1, string memory _line2, string memory _line3) external {... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"base/HaikuNFT.sol\":2367:2984  function getMySharedHaikus() public view returns (Haiku[] memory) {... */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"base/HaikuNFT.sol\":733:759  uint256 public counter = 1 */\n    tag_12:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"base/HaikuNFT.sol\":428:449  Haiku[] public haikus */\n    tag_15:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"base/HaikuNFT.sol\":504:553  mapping(address => uint256[]) public sharedHaikus */\n    tag_17:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_19:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_20:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_21:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_106\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_107\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_112\n      jump\t// in\n    tag_113:\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_115\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_114)\n    tag_115:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_116:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_116\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_118:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"base/HaikuNFT.sol\":1975:2148  function shareHaiku(address _to, uint256 _id) external {... */\n    tag_44:\n        /* \"base/HaikuNFT.sol\":2066:2076  msg.sender */\n      caller\n        /* \"base/HaikuNFT.sol\":2045:2076  haikus[_id].autor != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"base/HaikuNFT.sol\":2045:2051  haikus */\n      0x06\n        /* \"base/HaikuNFT.sol\":2052:2055  _id */\n      dup3\n        /* \"base/HaikuNFT.sol\":2045:2056  haikus[_id] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_123\n      jumpi\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n    tag_123:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"base/HaikuNFT.sol\":2045:2062  haikus[_id].autor */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"base/HaikuNFT.sol\":2045:2076  haikus[_id].autor != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"base/HaikuNFT.sol\":2041:2102  if (haikus[_id].autor != msg.sender) revert NotYourHaiku(_id) */\n      tag_127\n      jumpi\n        /* \"base/HaikuNFT.sol\":2098:2101  _id */\n      dup1\n        /* \"base/HaikuNFT.sol\":2085:2102  NotYourHaiku(_id) */\n      mload(0x40)\n      0x03ce4e3200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"base/HaikuNFT.sol\":2041:2102  if (haikus[_id].autor != msg.sender) revert NotYourHaiku(_id) */\n    tag_127:\n        /* \"base/HaikuNFT.sol\":2113:2125  sharedHaikus */\n      0x07\n        /* \"base/HaikuNFT.sol\":2113:2130  sharedHaikus[_to] */\n      0x00\n        /* \"base/HaikuNFT.sol\":2126:2129  _to */\n      dup4\n        /* \"base/HaikuNFT.sol\":2113:2130  sharedHaikus[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"base/HaikuNFT.sol\":2136:2139  _id */\n      dup2\n        /* \"base/HaikuNFT.sol\":2113:2140  sharedHaikus[_to].push(_id) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"base/HaikuNFT.sol\":1975:2148  function shareHaiku(address _to, uint256 _id) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_136\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"base/HaikuNFT.sol\":1189:1755  function mintHaiku(string memory _line1, string memory _line2, string memory _line3) external {... */\n    tag_55:\n        /* \"base/HaikuNFT.sol\":1308:1310  11 */\n      0x0b\n        /* \"base/HaikuNFT.sol\":1298:1305  counter */\n      sload(0x09)\n        /* \"base/HaikuNFT.sol\":1298:1310  counter > 11 */\n      gt\n        /* \"base/HaikuNFT.sol\":1294:1336  if (counter > 11) revert(\"No more haikus\") */\n      iszero\n      tag_145\n      jumpi\n        /* \"base/HaikuNFT.sol\":1312:1336  revert(\"No more haikus\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"base/HaikuNFT.sol\":1294:1336  if (counter > 11) revert(\"No more haikus\") */\n    tag_145:\n        /* \"base/HaikuNFT.sol\":1404:1413  usedLines */\n      0x08\n        /* \"base/HaikuNFT.sol\":1414:1420  _line1 */\n      dup4\n        /* \"base/HaikuNFT.sol\":1404:1421  usedLines[_line1] */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"base/HaikuNFT.sol\":1404:1442  usedLines[_line1] || usedLines[_line2] */\n      dup1\n      tag_150\n      jumpi\n      pop\n        /* \"base/HaikuNFT.sol\":1425:1434  usedLines */\n      0x08\n        /* \"base/HaikuNFT.sol\":1435:1441  _line2 */\n      dup3\n        /* \"base/HaikuNFT.sol\":1425:1442  usedLines[_line2] */\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_151:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"base/HaikuNFT.sol\":1404:1442  usedLines[_line1] || usedLines[_line2] */\n    tag_150:\n        /* \"base/HaikuNFT.sol\":1404:1463  usedLines[_line1] || usedLines[_line2] || usedLines[_line3] */\n      dup1\n      tag_152\n      jumpi\n      pop\n        /* \"base/HaikuNFT.sol\":1446:1455  usedLines */\n      0x08\n        /* \"base/HaikuNFT.sol\":1456:1462  _line3 */\n      dup2\n        /* \"base/HaikuNFT.sol\":1446:1463  usedLines[_line3] */\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_153:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"base/HaikuNFT.sol\":1404:1463  usedLines[_line1] || usedLines[_line2] || usedLines[_line3] */\n    tag_152:\n        /* \"base/HaikuNFT.sol\":1400:1515  if (usedLines[_line1] || usedLines[_line2] || usedLines[_line3]) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"base/HaikuNFT.sol\":1487:1503  HaikuNotUnique() */\n      mload(0x40)\n      0x693a889e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"base/HaikuNFT.sol\":1400:1515  if (usedLines[_line1] || usedLines[_line2] || usedLines[_line3]) {... */\n    tag_154:\n        /* \"base/HaikuNFT.sol\":1547:1551  true */\n      0x01\n        /* \"base/HaikuNFT.sol\":1527:1536  usedLines */\n      0x08\n        /* \"base/HaikuNFT.sol\":1537:1543  _line1 */\n      dup5\n        /* \"base/HaikuNFT.sol\":1527:1544  usedLines[_line1] */\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_155:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"base/HaikuNFT.sol\":1527:1551  usedLines[_line1] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"base/HaikuNFT.sol\":1582:1586  true */\n      0x01\n        /* \"base/HaikuNFT.sol\":1562:1571  usedLines */\n      0x08\n        /* \"base/HaikuNFT.sol\":1572:1578  _line2 */\n      dup4\n        /* \"base/HaikuNFT.sol\":1562:1579  usedLines[_line2] */\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_156:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"base/HaikuNFT.sol\":1562:1586  usedLines[_line2] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"base/HaikuNFT.sol\":1617:1621  true */\n      0x01\n        /* \"base/HaikuNFT.sol\":1597:1606  usedLines */\n      0x08\n        /* \"base/HaikuNFT.sol\":1607:1613  _line3 */\n      dup3\n        /* \"base/HaikuNFT.sol\":1597:1614  usedLines[_line3] */\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_157:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"base/HaikuNFT.sol\":1597:1621  usedLines[_line3] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"base/HaikuNFT.sol\":1634:1640  haikus */\n      0x06\n        /* \"base/HaikuNFT.sol\":1646:1687  Haiku(msg.sender, _line1, _line2, _line3) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"base/HaikuNFT.sol\":1652:1662  msg.sender */\n      caller\n        /* \"base/HaikuNFT.sol\":1646:1687  Haiku(msg.sender, _line1, _line2, _line3) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"base/HaikuNFT.sol\":1664:1670  _line1 */\n      dup6\n        /* \"base/HaikuNFT.sol\":1646:1687  Haiku(msg.sender, _line1, _line2, _line3) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"base/HaikuNFT.sol\":1672:1678  _line2 */\n      dup5\n        /* \"base/HaikuNFT.sol\":1646:1687  Haiku(msg.sender, _line1, _line2, _line3) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"base/HaikuNFT.sol\":1680:1686  _line3 */\n      dup4\n        /* \"base/HaikuNFT.sol\":1646:1687  Haiku(msg.sender, _line1, _line2, _line3) */\n      dup2\n      mstore\n      pop\n        /* \"base/HaikuNFT.sol\":1634:1688  haikus.push(Haiku(msg.sender, _line1, _line2, _line3)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      swap1\n      dup2\n      tag_161\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_161:\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      swap1\n      dup2\n      tag_162\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_162:\n      pop\n      pop\n      pop\n        /* \"base/HaikuNFT.sol\":1699:1725  _mint(msg.sender, counter) */\n      tag_163\n        /* \"base/HaikuNFT.sol\":1705:1715  msg.sender */\n      caller\n        /* \"base/HaikuNFT.sol\":1717:1724  counter */\n      sload(0x09)\n        /* \"base/HaikuNFT.sol\":1699:1704  _mint */\n      tag_164\n        /* \"base/HaikuNFT.sol\":1699:1725  _mint(msg.sender, counter) */\n      jump\t// in\n    tag_163:\n        /* \"base/HaikuNFT.sol\":1738:1745  counter */\n      0x09\n      0x00\n        /* \"base/HaikuNFT.sol\":1738:1747  counter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"base/HaikuNFT.sol\":1189:1755  function mintHaiku(string memory _line1, string memory _line2, string memory _line3) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"base/HaikuNFT.sol\":2367:2984  function getMySharedHaikus() public view returns (Haiku[] memory) {... */\n    tag_60:\n        /* \"base/HaikuNFT.sol\":2417:2431  Haiku[] memory */\n      0x60\n        /* \"base/HaikuNFT.sol\":2520:2544  uint256 totalHaikuShared */\n      0x00\n        /* \"base/HaikuNFT.sol\":2547:2559  sharedHaikus */\n      0x07\n        /* \"base/HaikuNFT.sol\":2547:2571  sharedHaikus[msg.sender] */\n      0x00\n        /* \"base/HaikuNFT.sol\":2560:2570  msg.sender */\n      caller\n        /* \"base/HaikuNFT.sol\":2547:2571  sharedHaikus[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"base/HaikuNFT.sol\":2547:2578  sharedHaikus[msg.sender].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"base/HaikuNFT.sol\":2520:2578  uint256 totalHaikuShared = sharedHaikus[msg.sender].length */\n      swap1\n      pop\n        /* \"base/HaikuNFT.sol\":2613:2614  0 */\n      0x00\n        /* \"base/HaikuNFT.sol\":2593:2609  totalHaikuShared */\n      dup2\n        /* \"base/HaikuNFT.sol\":2593:2614  totalHaikuShared == 0 */\n      sub\n        /* \"base/HaikuNFT.sol\":2589:2639  if (totalHaikuShared == 0) revert NoHaikusShared() */\n      tag_170\n      jumpi\n        /* \"base/HaikuNFT.sol\":2623:2639  NoHaikusShared() */\n      mload(0x40)\n      0xf8826a6900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"base/HaikuNFT.sol\":2589:2639  if (totalHaikuShared == 0) revert NoHaikusShared() */\n    tag_170:\n        /* \"base/HaikuNFT.sol\":2715:2737  Haiku[] memory _haikus */\n      0x00\n        /* \"base/HaikuNFT.sol\":2752:2768  totalHaikuShared */\n      dup2\n        /* \"base/HaikuNFT.sol\":2740:2769  new Haiku[](totalHaikuShared) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_171\n      jumpi\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n    tag_171:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_174\n      jumpi\n      dup2\n      0x20\n      add\n    tag_175:\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_175\n      jumpi\n      swap1\n      pop\n    tag_174:\n      pop\n        /* \"base/HaikuNFT.sol\":2715:2769  Haiku[] memory _haikus = new Haiku[](totalHaikuShared) */\n      swap1\n      pop\n        /* \"base/HaikuNFT.sol\":2833:2842  uint256 i */\n      0x00\n        /* \"base/HaikuNFT.sol\":2828:2950  for (uint256 i = 0; i < totalHaikuShared; i++) {... */\n    tag_178:\n        /* \"base/HaikuNFT.sol\":2852:2868  totalHaikuShared */\n      dup3\n        /* \"base/HaikuNFT.sol\":2848:2849  i */\n      dup2\n        /* \"base/HaikuNFT.sol\":2848:2868  i < totalHaikuShared */\n      lt\n        /* \"base/HaikuNFT.sol\":2828:2950  for (uint256 i = 0; i < totalHaikuShared; i++) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"base/HaikuNFT.sol\":2903:2909  haikus */\n      0x06\n        /* \"base/HaikuNFT.sol\":2910:2922  sharedHaikus */\n      0x07\n        /* \"base/HaikuNFT.sol\":2910:2934  sharedHaikus[msg.sender] */\n      0x00\n        /* \"base/HaikuNFT.sol\":2923:2933  msg.sender */\n      caller\n        /* \"base/HaikuNFT.sol\":2910:2934  sharedHaikus[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"base/HaikuNFT.sol\":2935:2936  i */\n      dup3\n        /* \"base/HaikuNFT.sol\":2910:2937  sharedHaikus[msg.sender][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_181\n      jumpi\n      tag_182\n      tag_125\n      jump\t// in\n    tag_182:\n    tag_181:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"base/HaikuNFT.sol\":2903:2938  haikus[sharedHaikus[msg.sender][i]] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_184\n      jumpi\n      tag_185\n      tag_125\n      jump\t// in\n    tag_185:\n    tag_184:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"base/HaikuNFT.sol\":2890:2938  _haikus[i] = haikus[sharedHaikus[msg.sender][i]] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      tag_187\n      swap1\n      tag_112\n      jump\t// in\n    tag_187:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_188\n      swap1\n      tag_112\n      jump\t// in\n    tag_188:\n      dup1\n      iszero\n      tag_189\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_190\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_189)\n    tag_190:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_191:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_191\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      tag_192\n      swap1\n      tag_112\n      jump\t// in\n    tag_192:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_193\n      swap1\n      tag_112\n      jump\t// in\n    tag_193:\n      dup1\n      iszero\n      tag_194\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_195\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_194)\n    tag_195:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_196:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_196\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      tag_197\n      swap1\n      tag_112\n      jump\t// in\n    tag_197:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_198\n      swap1\n      tag_112\n      jump\t// in\n    tag_198:\n      dup1\n      iszero\n      tag_199\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_200\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_199)\n    tag_200:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_201:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_201\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_199:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n        /* \"base/HaikuNFT.sol\":2890:2897  _haikus */\n      dup3\n        /* \"base/HaikuNFT.sol\":2898:2899  i */\n      dup3\n        /* \"base/HaikuNFT.sol\":2890:2900  _haikus[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_202\n      jumpi\n      tag_203\n      tag_125\n      jump\t// in\n    tag_203:\n    tag_202:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"base/HaikuNFT.sol\":2890:2938  _haikus[i] = haikus[sharedHaikus[msg.sender][i]] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"base/HaikuNFT.sol\":2870:2873  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"base/HaikuNFT.sol\":2828:2950  for (uint256 i = 0; i < totalHaikuShared; i++) {... */\n      jump(tag_178)\n    tag_179:\n      pop\n        /* \"base/HaikuNFT.sol\":2969:2976  _haikus */\n      dup1\n        /* \"base/HaikuNFT.sol\":2962:2976  return _haikus */\n      swap3\n      pop\n      pop\n      pop\n        /* \"base/HaikuNFT.sol\":2367:2984  function getMySharedHaikus() public view returns (Haiku[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"base/HaikuNFT.sol\":733:759  uint256 public counter = 1 */\n    tag_64:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"base/HaikuNFT.sol\":428:449  Haiku[] public haikus */\n    tag_78:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_211\n      swap1\n      tag_112\n      jump\t// in\n    tag_211:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_212\n      swap1\n      tag_112\n      jump\t// in\n    tag_212:\n      dup1\n      iszero\n      tag_213\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_214\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_213)\n    tag_214:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_215:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_215\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      dup1\n      sload\n      tag_216\n      swap1\n      tag_112\n      jump\t// in\n    tag_216:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_217\n      swap1\n      tag_112\n      jump\t// in\n    tag_217:\n      dup1\n      iszero\n      tag_218\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_219\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_218)\n    tag_219:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_220:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_220\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x03\n      add\n      dup1\n      sload\n      tag_221\n      swap1\n      tag_112\n      jump\t// in\n    tag_221:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_222\n      swap1\n      tag_112\n      jump\t// in\n    tag_222:\n      dup1\n      iszero\n      tag_223\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_224\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_223)\n    tag_224:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_225:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_225\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_227\n      swap1\n      tag_112\n      jump\t// in\n    tag_227:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_228\n      swap1\n      tag_112\n      jump\t// in\n    tag_228:\n      dup1\n      iszero\n      tag_229\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_230\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_229)\n    tag_230:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_231:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_231\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"base/HaikuNFT.sol\":504:553  mapping(address => uint256[]) public sharedHaikus */\n    tag_86:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_51\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_243:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_246\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_247)\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_250\n      swap3\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_281\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_287\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_288\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      0x01\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_290\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_295\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_294)\n    tag_295:\n      0x60\n      swap2\n      pop\n    tag_294:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_304\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_306\n      jumpi\n      tag_307\n      tag_173\n      jump\t// in\n    tag_307:\n    tag_306:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_308\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_308:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_311\n      jumpi\n      tag_312\n      tag_313\n      jump\t// in\n    tag_312:\n    tag_311:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_309\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_317\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_319\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_320\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_321\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_322\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_325\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_328\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_329\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap3\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_337\n      jumpi\n      tag_338\n      tag_313\n      jump\t// in\n    tag_338:\n    tag_337:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_340\n      jumpi\n      tag_341\n      tag_313\n      jump\t// in\n    tag_341:\n    tag_340:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_343\n      jumpi\n      tag_344\n      tag_313\n      jump\t// in\n    tag_344:\n    tag_343:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_346\n      jumpi\n      tag_347\n      tag_313\n      jump\t// in\n    tag_347:\n    tag_346:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_349\n      jumpi\n      tag_350\n      tag_313\n      jump\t// in\n    tag_350:\n    tag_349:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_352\n      jumpi\n      tag_353\n      tag_313\n      jump\t// in\n    tag_353:\n    tag_352:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_356\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_357\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_358\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_359\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_360\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_359:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_177:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_361:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_362:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_363:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_364:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_365:\n        /* \"#utility.yul\":561:584   */\n      tag_437\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_364\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_438:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_366:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_440\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_365\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_27:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_443\n      tag_362\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":833:952   */\n    tag_442:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_444\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_366\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_367:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_368:\n        /* \"#utility.yul\":1268:1289   */\n      tag_447\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_367\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_30:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_449\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_368\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_369:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_370:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_371:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_372:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_373:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_455\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_369\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":2222:2293   */\n      tag_456\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_370\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_457\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_371\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":2392:2421   */\n      tag_458\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_372\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_34:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_460\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_373\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_374:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_375:\n        /* \"#utility.yul\":2909:2933   */\n      tag_463\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_374\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      dup1\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_464:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_376:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_466\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_375\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_37:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_469\n      tag_362\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":3185:3304   */\n    tag_468:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_470\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_376\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_377:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_378:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_473\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_377\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_379:\n        /* \"#utility.yul\":3765:3789   */\n      tag_475\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_378\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_40:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_477\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_379\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_380:\n        /* \"#utility.yul\":4103:4127   */\n      tag_479\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_378\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_480\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      dup1\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_480:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_381:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_482\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_380\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_43:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      dup1\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_485\n      tag_362\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":4396:4515   */\n    tag_484:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_486\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_381\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_487\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_376\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_50:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_490\n      tag_362\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":4893:5012   */\n    tag_489:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_491\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_381\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_492\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_381\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_493\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_376\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5525   */\n    tag_382:\n        /* \"#utility.yul\":5517:5518   */\n      0x00\n        /* \"#utility.yul\":5514:5515   */\n      dup1\n        /* \"#utility.yul\":5507:5519   */\n      revert\n        /* \"#utility.yul\":5531:5648   */\n    tag_383:\n        /* \"#utility.yul\":5640:5641   */\n      0x00\n        /* \"#utility.yul\":5637:5638   */\n      dup1\n        /* \"#utility.yul\":5630:5642   */\n      revert\n        /* \"#utility.yul\":5654:5834   */\n    tag_173:\n        /* \"#utility.yul\":5702:5779   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5699:5700   */\n      0x00\n        /* \"#utility.yul\":5692:5780   */\n      mstore\n        /* \"#utility.yul\":5799:5803   */\n      0x41\n        /* \"#utility.yul\":5796:5797   */\n      0x04\n        /* \"#utility.yul\":5789:5804   */\n      mstore\n        /* \"#utility.yul\":5823:5827   */\n      0x24\n        /* \"#utility.yul\":5820:5821   */\n      0x00\n        /* \"#utility.yul\":5813:5828   */\n      revert\n        /* \"#utility.yul\":5840:6121   */\n    tag_384:\n        /* \"#utility.yul\":5923:5950   */\n      tag_498\n        /* \"#utility.yul\":5945:5949   */\n      dup3\n        /* \"#utility.yul\":5923:5950   */\n      tag_372\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":5915:5921   */\n      dup2\n        /* \"#utility.yul\":5911:5951   */\n      add\n        /* \"#utility.yul\":6053:6059   */\n      dup2\n        /* \"#utility.yul\":6041:6051   */\n      dup2\n        /* \"#utility.yul\":6038:6060   */\n      lt\n        /* \"#utility.yul\":6017:6035   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6005:6015   */\n      dup3\n        /* \"#utility.yul\":6002:6036   */\n      gt\n        /* \"#utility.yul\":5999:6061   */\n      or\n        /* \"#utility.yul\":5996:6084   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":6064:6082   */\n      tag_500\n      tag_173\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":5996:6084   */\n    tag_499:\n        /* \"#utility.yul\":6104:6114   */\n      dup1\n        /* \"#utility.yul\":6100:6102   */\n      0x40\n        /* \"#utility.yul\":6093:6115   */\n      mstore\n        /* \"#utility.yul\":5883:6121   */\n      pop\n        /* \"#utility.yul\":5840:6121   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6127:6256   */\n    tag_385:\n        /* \"#utility.yul\":6161:6167   */\n      0x00\n        /* \"#utility.yul\":6188:6208   */\n      tag_502\n      tag_361\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":6178:6208   */\n      swap1\n      pop\n        /* \"#utility.yul\":6217:6250   */\n      tag_503\n        /* \"#utility.yul\":6245:6249   */\n      dup3\n        /* \"#utility.yul\":6237:6243   */\n      dup3\n        /* \"#utility.yul\":6217:6250   */\n      tag_384\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":6127:6256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6262:6570   */\n    tag_386:\n        /* \"#utility.yul\":6324:6328   */\n      0x00\n        /* \"#utility.yul\":6414:6432   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6406:6412   */\n      dup3\n        /* \"#utility.yul\":6403:6433   */\n      gt\n        /* \"#utility.yul\":6400:6456   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":6436:6454   */\n      tag_506\n      tag_173\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":6400:6456   */\n    tag_505:\n        /* \"#utility.yul\":6474:6503   */\n      tag_507\n        /* \"#utility.yul\":6496:6502   */\n      dup3\n        /* \"#utility.yul\":6474:6503   */\n      tag_372\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":6466:6503   */\n      swap1\n      pop\n        /* \"#utility.yul\":6558:6562   */\n      0x20\n        /* \"#utility.yul\":6552:6556   */\n      dup2\n        /* \"#utility.yul\":6548:6563   */\n      add\n        /* \"#utility.yul\":6540:6563   */\n      swap1\n      pop\n        /* \"#utility.yul\":6262:6570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6576:6724   */\n    tag_387:\n        /* \"#utility.yul\":6674:6680   */\n      dup3\n        /* \"#utility.yul\":6669:6672   */\n      dup2\n        /* \"#utility.yul\":6664:6667   */\n      dup4\n        /* \"#utility.yul\":6651:6681   */\n      calldatacopy\n        /* \"#utility.yul\":6715:6716   */\n      0x00\n        /* \"#utility.yul\":6706:6712   */\n      dup4\n        /* \"#utility.yul\":6701:6704   */\n      dup4\n        /* \"#utility.yul\":6697:6713   */\n      add\n        /* \"#utility.yul\":6690:6717   */\n      mstore\n        /* \"#utility.yul\":6576:6724   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6730:7155   */\n    tag_388:\n        /* \"#utility.yul\":6808:6813   */\n      0x00\n        /* \"#utility.yul\":6833:6899   */\n      tag_510\n        /* \"#utility.yul\":6849:6898   */\n      tag_511\n        /* \"#utility.yul\":6891:6897   */\n      dup5\n        /* \"#utility.yul\":6849:6898   */\n      tag_386\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":6833:6899   */\n      tag_385\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":6824:6899   */\n      swap1\n      pop\n        /* \"#utility.yul\":6922:6928   */\n      dup3\n        /* \"#utility.yul\":6915:6920   */\n      dup2\n        /* \"#utility.yul\":6908:6929   */\n      mstore\n        /* \"#utility.yul\":6960:6964   */\n      0x20\n        /* \"#utility.yul\":6953:6958   */\n      dup2\n        /* \"#utility.yul\":6949:6965   */\n      add\n        /* \"#utility.yul\":6998:7001   */\n      dup5\n        /* \"#utility.yul\":6989:6995   */\n      dup5\n        /* \"#utility.yul\":6984:6987   */\n      dup5\n        /* \"#utility.yul\":6980:6996   */\n      add\n        /* \"#utility.yul\":6977:7002   */\n      gt\n        /* \"#utility.yul\":6974:7086   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":7005:7084   */\n      tag_513\n      tag_383\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":6974:7086   */\n    tag_512:\n        /* \"#utility.yul\":7095:7149   */\n      tag_514\n        /* \"#utility.yul\":7142:7148   */\n      dup5\n        /* \"#utility.yul\":7137:7140   */\n      dup3\n        /* \"#utility.yul\":7132:7135   */\n      dup6\n        /* \"#utility.yul\":7095:7149   */\n      tag_387\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":6814:7155   */\n      pop\n        /* \"#utility.yul\":6730:7155   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7175:7515   */\n    tag_389:\n        /* \"#utility.yul\":7231:7236   */\n      0x00\n        /* \"#utility.yul\":7280:7283   */\n      dup3\n        /* \"#utility.yul\":7273:7277   */\n      0x1f\n        /* \"#utility.yul\":7265:7271   */\n      dup4\n        /* \"#utility.yul\":7261:7278   */\n      add\n        /* \"#utility.yul\":7257:7284   */\n      slt\n        /* \"#utility.yul\":7247:7369   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":7288:7367   */\n      tag_517\n      tag_382\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":7247:7369   */\n    tag_516:\n        /* \"#utility.yul\":7405:7411   */\n      dup2\n        /* \"#utility.yul\":7392:7412   */\n      calldataload\n        /* \"#utility.yul\":7430:7509   */\n      tag_518\n        /* \"#utility.yul\":7505:7508   */\n      dup5\n        /* \"#utility.yul\":7497:7503   */\n      dup3\n        /* \"#utility.yul\":7490:7494   */\n      0x20\n        /* \"#utility.yul\":7482:7488   */\n      dup7\n        /* \"#utility.yul\":7478:7495   */\n      add\n        /* \"#utility.yul\":7430:7509   */\n      tag_388\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":7421:7509   */\n      swap2\n      pop\n        /* \"#utility.yul\":7237:7515   */\n      pop\n        /* \"#utility.yul\":7175:7515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7521:8680   */\n    tag_54:\n        /* \"#utility.yul\":7628:7634   */\n      0x00\n        /* \"#utility.yul\":7636:7642   */\n      dup1\n        /* \"#utility.yul\":7644:7650   */\n      0x00\n        /* \"#utility.yul\":7693:7695   */\n      0x60\n        /* \"#utility.yul\":7681:7690   */\n      dup5\n        /* \"#utility.yul\":7672:7679   */\n      dup7\n        /* \"#utility.yul\":7668:7691   */\n      sub\n        /* \"#utility.yul\":7664:7696   */\n      slt\n        /* \"#utility.yul\":7661:7780   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":7699:7778   */\n      tag_521\n      tag_362\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":7661:7780   */\n    tag_520:\n        /* \"#utility.yul\":7847:7848   */\n      0x00\n        /* \"#utility.yul\":7836:7845   */\n      dup5\n        /* \"#utility.yul\":7832:7849   */\n      add\n        /* \"#utility.yul\":7819:7850   */\n      calldataload\n        /* \"#utility.yul\":7877:7895   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7869:7875   */\n      dup2\n        /* \"#utility.yul\":7866:7896   */\n      gt\n        /* \"#utility.yul\":7863:7980   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":7899:7978   */\n      tag_523\n      tag_363\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":7863:7980   */\n    tag_522:\n        /* \"#utility.yul\":8004:8067   */\n      tag_524\n        /* \"#utility.yul\":8059:8066   */\n      dup7\n        /* \"#utility.yul\":8050:8056   */\n      dup3\n        /* \"#utility.yul\":8039:8048   */\n      dup8\n        /* \"#utility.yul\":8035:8057   */\n      add\n        /* \"#utility.yul\":8004:8067   */\n      tag_389\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":7994:8067   */\n      swap4\n      pop\n        /* \"#utility.yul\":7790:8077   */\n      pop\n        /* \"#utility.yul\":8144:8146   */\n      0x20\n        /* \"#utility.yul\":8133:8142   */\n      dup5\n        /* \"#utility.yul\":8129:8147   */\n      add\n        /* \"#utility.yul\":8116:8148   */\n      calldataload\n        /* \"#utility.yul\":8175:8193   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8167:8173   */\n      dup2\n        /* \"#utility.yul\":8164:8194   */\n      gt\n        /* \"#utility.yul\":8161:8278   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":8197:8276   */\n      tag_526\n      tag_363\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":8161:8278   */\n    tag_525:\n        /* \"#utility.yul\":8302:8365   */\n      tag_527\n        /* \"#utility.yul\":8357:8364   */\n      dup7\n        /* \"#utility.yul\":8348:8354   */\n      dup3\n        /* \"#utility.yul\":8337:8346   */\n      dup8\n        /* \"#utility.yul\":8333:8355   */\n      add\n        /* \"#utility.yul\":8302:8365   */\n      tag_389\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":8292:8365   */\n      swap3\n      pop\n        /* \"#utility.yul\":8087:8375   */\n      pop\n        /* \"#utility.yul\":8442:8444   */\n      0x40\n        /* \"#utility.yul\":8431:8440   */\n      dup5\n        /* \"#utility.yul\":8427:8445   */\n      add\n        /* \"#utility.yul\":8414:8446   */\n      calldataload\n        /* \"#utility.yul\":8473:8491   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8465:8471   */\n      dup2\n        /* \"#utility.yul\":8462:8492   */\n      gt\n        /* \"#utility.yul\":8459:8576   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":8495:8574   */\n      tag_529\n      tag_363\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":8459:8576   */\n    tag_528:\n        /* \"#utility.yul\":8600:8663   */\n      tag_530\n        /* \"#utility.yul\":8655:8662   */\n      dup7\n        /* \"#utility.yul\":8646:8652   */\n      dup3\n        /* \"#utility.yul\":8635:8644   */\n      dup8\n        /* \"#utility.yul\":8631:8653   */\n      add\n        /* \"#utility.yul\":8600:8663   */\n      tag_389\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":8590:8663   */\n      swap2\n      pop\n        /* \"#utility.yul\":8385:8673   */\n      pop\n        /* \"#utility.yul\":7521:8680   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8686:8823   */\n    tag_390:\n        /* \"#utility.yul\":8776:8782   */\n      0x00\n        /* \"#utility.yul\":8810:8815   */\n      dup2\n        /* \"#utility.yul\":8804:8816   */\n      mload\n        /* \"#utility.yul\":8794:8816   */\n      swap1\n      pop\n        /* \"#utility.yul\":8686:8823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8829:9036   */\n    tag_391:\n        /* \"#utility.yul\":8951:8962   */\n      0x00\n        /* \"#utility.yul\":8985:8991   */\n      dup3\n        /* \"#utility.yul\":8980:8983   */\n      dup3\n        /* \"#utility.yul\":8973:8992   */\n      mstore\n        /* \"#utility.yul\":9025:9029   */\n      0x20\n        /* \"#utility.yul\":9020:9023   */\n      dup3\n        /* \"#utility.yul\":9016:9030   */\n      add\n        /* \"#utility.yul\":9001:9030   */\n      swap1\n      pop\n        /* \"#utility.yul\":8829:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9197   */\n    tag_392:\n        /* \"#utility.yul\":9132:9136   */\n      0x00\n        /* \"#utility.yul\":9155:9158   */\n      dup2\n        /* \"#utility.yul\":9147:9158   */\n      swap1\n      pop\n        /* \"#utility.yul\":9185:9189   */\n      0x20\n        /* \"#utility.yul\":9180:9183   */\n      dup3\n        /* \"#utility.yul\":9176:9190   */\n      add\n        /* \"#utility.yul\":9168:9190   */\n      swap1\n      pop\n        /* \"#utility.yul\":9042:9197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9203:9311   */\n    tag_393:\n        /* \"#utility.yul\":9280:9304   */\n      tag_535\n        /* \"#utility.yul\":9298:9303   */\n      dup2\n        /* \"#utility.yul\":9280:9304   */\n      tag_378\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":9275:9278   */\n      dup3\n        /* \"#utility.yul\":9268:9305   */\n      mstore\n        /* \"#utility.yul\":9203:9311   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9317:9476   */\n    tag_394:\n        /* \"#utility.yul\":9391:9402   */\n      0x00\n        /* \"#utility.yul\":9425:9431   */\n      dup3\n        /* \"#utility.yul\":9420:9423   */\n      dup3\n        /* \"#utility.yul\":9413:9432   */\n      mstore\n        /* \"#utility.yul\":9465:9469   */\n      0x20\n        /* \"#utility.yul\":9460:9463   */\n      dup3\n        /* \"#utility.yul\":9456:9470   */\n      add\n        /* \"#utility.yul\":9441:9470   */\n      swap1\n      pop\n        /* \"#utility.yul\":9317:9476   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9482:9839   */\n    tag_395:\n        /* \"#utility.yul\":9560:9563   */\n      0x00\n        /* \"#utility.yul\":9588:9627   */\n      tag_538\n        /* \"#utility.yul\":9621:9626   */\n      dup3\n        /* \"#utility.yul\":9588:9627   */\n      tag_369\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":9643:9704   */\n      tag_539\n        /* \"#utility.yul\":9697:9703   */\n      dup2\n        /* \"#utility.yul\":9692:9695   */\n      dup6\n        /* \"#utility.yul\":9643:9704   */\n      tag_394\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":9636:9704   */\n      swap4\n      pop\n        /* \"#utility.yul\":9713:9778   */\n      tag_540\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9766:9769   */\n      dup6\n        /* \"#utility.yul\":9759:9763   */\n      0x20\n        /* \"#utility.yul\":9752:9757   */\n      dup7\n        /* \"#utility.yul\":9748:9764   */\n      add\n        /* \"#utility.yul\":9713:9778   */\n      tag_371\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":9803:9832   */\n      tag_541\n        /* \"#utility.yul\":9825:9831   */\n      dup2\n        /* \"#utility.yul\":9803:9832   */\n      tag_372\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":9798:9801   */\n      dup5\n        /* \"#utility.yul\":9794:9833   */\n      add\n        /* \"#utility.yul\":9787:9833   */\n      swap2\n      pop\n        /* \"#utility.yul\":9564:9839   */\n      pop\n        /* \"#utility.yul\":9482:9839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9899:10985   */\n    tag_396:\n        /* \"#utility.yul\":10004:10007   */\n      0x00\n        /* \"#utility.yul\":10040:10044   */\n      0x80\n        /* \"#utility.yul\":10035:10038   */\n      dup4\n        /* \"#utility.yul\":10031:10045   */\n      add\n        /* \"#utility.yul\":10128:10132   */\n      0x00\n        /* \"#utility.yul\":10121:10126   */\n      dup4\n        /* \"#utility.yul\":10117:10133   */\n      add\n        /* \"#utility.yul\":10111:10134   */\n      mload\n        /* \"#utility.yul\":10147:10210   */\n      tag_543\n        /* \"#utility.yul\":10204:10208   */\n      0x00\n        /* \"#utility.yul\":10199:10202   */\n      dup7\n        /* \"#utility.yul\":10195:10209   */\n      add\n        /* \"#utility.yul\":10181:10193   */\n      dup3\n        /* \"#utility.yul\":10147:10210   */\n      tag_393\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":10055:10220   */\n      pop\n        /* \"#utility.yul\":10303:10307   */\n      0x20\n        /* \"#utility.yul\":10296:10301   */\n      dup4\n        /* \"#utility.yul\":10292:10308   */\n      add\n        /* \"#utility.yul\":10286:10309   */\n      mload\n        /* \"#utility.yul\":10356:10359   */\n      dup5\n        /* \"#utility.yul\":10350:10354   */\n      dup3\n        /* \"#utility.yul\":10346:10360   */\n      sub\n        /* \"#utility.yul\":10339:10343   */\n      0x20\n        /* \"#utility.yul\":10334:10337   */\n      dup7\n        /* \"#utility.yul\":10330:10344   */\n      add\n        /* \"#utility.yul\":10323:10361   */\n      mstore\n        /* \"#utility.yul\":10382:10455   */\n      tag_544\n        /* \"#utility.yul\":10450:10454   */\n      dup3\n        /* \"#utility.yul\":10436:10448   */\n      dup3\n        /* \"#utility.yul\":10382:10455   */\n      tag_395\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":10374:10455   */\n      swap2\n      pop\n        /* \"#utility.yul\":10230:10466   */\n      pop\n        /* \"#utility.yul\":10549:10553   */\n      0x40\n        /* \"#utility.yul\":10542:10547   */\n      dup4\n        /* \"#utility.yul\":10538:10554   */\n      add\n        /* \"#utility.yul\":10532:10555   */\n      mload\n        /* \"#utility.yul\":10602:10605   */\n      dup5\n        /* \"#utility.yul\":10596:10600   */\n      dup3\n        /* \"#utility.yul\":10592:10606   */\n      sub\n        /* \"#utility.yul\":10585:10589   */\n      0x40\n        /* \"#utility.yul\":10580:10583   */\n      dup7\n        /* \"#utility.yul\":10576:10590   */\n      add\n        /* \"#utility.yul\":10569:10607   */\n      mstore\n        /* \"#utility.yul\":10628:10701   */\n      tag_545\n        /* \"#utility.yul\":10696:10700   */\n      dup3\n        /* \"#utility.yul\":10682:10694   */\n      dup3\n        /* \"#utility.yul\":10628:10701   */\n      tag_395\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":10620:10701   */\n      swap2\n      pop\n        /* \"#utility.yul\":10476:10712   */\n      pop\n        /* \"#utility.yul\":10795:10799   */\n      0x60\n        /* \"#utility.yul\":10788:10793   */\n      dup4\n        /* \"#utility.yul\":10784:10800   */\n      add\n        /* \"#utility.yul\":10778:10801   */\n      mload\n        /* \"#utility.yul\":10848:10851   */\n      dup5\n        /* \"#utility.yul\":10842:10846   */\n      dup3\n        /* \"#utility.yul\":10838:10852   */\n      sub\n        /* \"#utility.yul\":10831:10835   */\n      0x60\n        /* \"#utility.yul\":10826:10829   */\n      dup7\n        /* \"#utility.yul\":10822:10836   */\n      add\n        /* \"#utility.yul\":10815:10853   */\n      mstore\n        /* \"#utility.yul\":10874:10947   */\n      tag_546\n        /* \"#utility.yul\":10942:10946   */\n      dup3\n        /* \"#utility.yul\":10928:10940   */\n      dup3\n        /* \"#utility.yul\":10874:10947   */\n      tag_395\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":10866:10947   */\n      swap2\n      pop\n        /* \"#utility.yul\":10722:10958   */\n      pop\n        /* \"#utility.yul\":10975:10979   */\n      dup1\n        /* \"#utility.yul\":10968:10979   */\n      swap2\n      pop\n        /* \"#utility.yul\":10009:10985   */\n      pop\n        /* \"#utility.yul\":9899:10985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10991:11239   */\n    tag_397:\n        /* \"#utility.yul\":11106:11116   */\n      0x00\n        /* \"#utility.yul\":11141:11233   */\n      tag_548\n        /* \"#utility.yul\":11229:11232   */\n      dup4\n        /* \"#utility.yul\":11221:11227   */\n      dup4\n        /* \"#utility.yul\":11141:11233   */\n      tag_396\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":11127:11233   */\n      swap1\n      pop\n        /* \"#utility.yul\":10991:11239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11245:11381   */\n    tag_398:\n        /* \"#utility.yul\":11338:11342   */\n      0x00\n        /* \"#utility.yul\":11370:11374   */\n      0x20\n        /* \"#utility.yul\":11365:11368   */\n      dup3\n        /* \"#utility.yul\":11361:11375   */\n      add\n        /* \"#utility.yul\":11353:11375   */\n      swap1\n      pop\n        /* \"#utility.yul\":11245:11381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11445:12540   */\n    tag_399:\n        /* \"#utility.yul\":11610:11613   */\n      0x00\n        /* \"#utility.yul\":11639:11716   */\n      tag_551\n        /* \"#utility.yul\":11710:11715   */\n      dup3\n        /* \"#utility.yul\":11639:11716   */\n      tag_390\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":11732:11841   */\n      tag_552\n        /* \"#utility.yul\":11834:11840   */\n      dup2\n        /* \"#utility.yul\":11829:11832   */\n      dup6\n        /* \"#utility.yul\":11732:11841   */\n      tag_391\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":11725:11841   */\n      swap4\n      pop\n        /* \"#utility.yul\":11867:11870   */\n      dup4\n        /* \"#utility.yul\":11912:11916   */\n      0x20\n        /* \"#utility.yul\":11904:11910   */\n      dup3\n        /* \"#utility.yul\":11900:11917   */\n      mul\n        /* \"#utility.yul\":11895:11898   */\n      dup6\n        /* \"#utility.yul\":11891:11918   */\n      add\n        /* \"#utility.yul\":11942:12021   */\n      tag_553\n        /* \"#utility.yul\":12015:12020   */\n      dup6\n        /* \"#utility.yul\":11942:12021   */\n      tag_392\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":12044:12051   */\n      dup1\n        /* \"#utility.yul\":12075:12076   */\n      0x00\n        /* \"#utility.yul\":12060:12495   */\n    tag_554:\n        /* \"#utility.yul\":12085:12091   */\n      dup6\n        /* \"#utility.yul\":12082:12083   */\n      dup2\n        /* \"#utility.yul\":12079:12092   */\n      lt\n        /* \"#utility.yul\":12060:12495   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":12156:12165   */\n      dup5\n        /* \"#utility.yul\":12150:12154   */\n      dup5\n        /* \"#utility.yul\":12146:12166   */\n      sub\n        /* \"#utility.yul\":12141:12144   */\n      dup10\n        /* \"#utility.yul\":12134:12167   */\n      mstore\n        /* \"#utility.yul\":12207:12213   */\n      dup2\n        /* \"#utility.yul\":12201:12214   */\n      mload\n        /* \"#utility.yul\":12235:12345   */\n      tag_557\n        /* \"#utility.yul\":12340:12344   */\n      dup6\n        /* \"#utility.yul\":12325:12338   */\n      dup3\n        /* \"#utility.yul\":12235:12345   */\n      tag_397\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":12227:12345   */\n      swap5\n      pop\n        /* \"#utility.yul\":12368:12451   */\n      tag_558\n        /* \"#utility.yul\":12444:12450   */\n      dup4\n        /* \"#utility.yul\":12368:12451   */\n      tag_398\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":12358:12451   */\n      swap3\n      pop\n        /* \"#utility.yul\":12480:12484   */\n      0x20\n        /* \"#utility.yul\":12475:12478   */\n      dup11\n        /* \"#utility.yul\":12471:12485   */\n      add\n        /* \"#utility.yul\":12464:12485   */\n      swap10\n      pop\n        /* \"#utility.yul\":12120:12495   */\n      pop\n        /* \"#utility.yul\":12107:12108   */\n      0x01\n        /* \"#utility.yul\":12104:12105   */\n      dup2\n        /* \"#utility.yul\":12100:12109   */\n      add\n        /* \"#utility.yul\":12095:12109   */\n      swap1\n      pop\n        /* \"#utility.yul\":12060:12495   */\n      jump(tag_554)\n    tag_556:\n        /* \"#utility.yul\":12064:12078   */\n      pop\n        /* \"#utility.yul\":12511:12515   */\n      dup3\n        /* \"#utility.yul\":12504:12515   */\n      swap8\n      pop\n        /* \"#utility.yul\":12531:12534   */\n      dup8\n        /* \"#utility.yul\":12524:12534   */\n      swap6\n      pop\n        /* \"#utility.yul\":11615:12540   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11445:12540   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12546:13011   */\n    tag_62:\n        /* \"#utility.yul\":12735:12739   */\n      0x00\n        /* \"#utility.yul\":12773:12775   */\n      0x20\n        /* \"#utility.yul\":12762:12771   */\n      dup3\n        /* \"#utility.yul\":12758:12776   */\n      add\n        /* \"#utility.yul\":12750:12776   */\n      swap1\n      pop\n        /* \"#utility.yul\":12822:12831   */\n      dup2\n        /* \"#utility.yul\":12816:12820   */\n      dup2\n        /* \"#utility.yul\":12812:12832   */\n      sub\n        /* \"#utility.yul\":12808:12809   */\n      0x00\n        /* \"#utility.yul\":12797:12806   */\n      dup4\n        /* \"#utility.yul\":12793:12810   */\n      add\n        /* \"#utility.yul\":12786:12833   */\n      mstore\n        /* \"#utility.yul\":12850:13004   */\n      tag_560\n        /* \"#utility.yul\":12999:13003   */\n      dup2\n        /* \"#utility.yul\":12990:12996   */\n      dup5\n        /* \"#utility.yul\":12850:13004   */\n      tag_399\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":12842:13004   */\n      swap1\n      pop\n        /* \"#utility.yul\":12546:13011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13017:13135   */\n    tag_400:\n        /* \"#utility.yul\":13104:13128   */\n      tag_562\n        /* \"#utility.yul\":13122:13127   */\n      dup2\n        /* \"#utility.yul\":13104:13128   */\n      tag_374\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":13099:13102   */\n      dup3\n        /* \"#utility.yul\":13092:13129   */\n      mstore\n        /* \"#utility.yul\":13017:13135   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13141:13363   */\n    tag_66:\n        /* \"#utility.yul\":13234:13238   */\n      0x00\n        /* \"#utility.yul\":13272:13274   */\n      0x20\n        /* \"#utility.yul\":13261:13270   */\n      dup3\n        /* \"#utility.yul\":13257:13275   */\n      add\n        /* \"#utility.yul\":13249:13275   */\n      swap1\n      pop\n        /* \"#utility.yul\":13285:13356   */\n      tag_564\n        /* \"#utility.yul\":13353:13354   */\n      0x00\n        /* \"#utility.yul\":13342:13351   */\n      dup4\n        /* \"#utility.yul\":13338:13355   */\n      add\n        /* \"#utility.yul\":13329:13335   */\n      dup5\n        /* \"#utility.yul\":13285:13356   */\n      tag_400\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":13141:13363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13369:13698   */\n    tag_73:\n        /* \"#utility.yul\":13428:13434   */\n      0x00\n        /* \"#utility.yul\":13477:13479   */\n      0x20\n        /* \"#utility.yul\":13465:13474   */\n      dup3\n        /* \"#utility.yul\":13456:13463   */\n      dup5\n        /* \"#utility.yul\":13452:13475   */\n      sub\n        /* \"#utility.yul\":13448:13480   */\n      slt\n        /* \"#utility.yul\":13445:13564   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":13483:13562   */\n      tag_567\n      tag_362\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":13445:13564   */\n    tag_566:\n        /* \"#utility.yul\":13603:13604   */\n      0x00\n        /* \"#utility.yul\":13628:13681   */\n      tag_568\n        /* \"#utility.yul\":13673:13680   */\n      dup5\n        /* \"#utility.yul\":13664:13670   */\n      dup3\n        /* \"#utility.yul\":13653:13662   */\n      dup6\n        /* \"#utility.yul\":13649:13671   */\n      add\n        /* \"#utility.yul\":13628:13681   */\n      tag_381\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":13618:13681   */\n      swap2\n      pop\n        /* \"#utility.yul\":13574:13691   */\n      pop\n        /* \"#utility.yul\":13369:13698   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13704:14530   */\n    tag_80:\n        /* \"#utility.yul\":13941:13945   */\n      0x00\n        /* \"#utility.yul\":13979:13982   */\n      0x80\n        /* \"#utility.yul\":13968:13977   */\n      dup3\n        /* \"#utility.yul\":13964:13983   */\n      add\n        /* \"#utility.yul\":13956:13983   */\n      swap1\n      pop\n        /* \"#utility.yul\":13993:14064   */\n      tag_570\n        /* \"#utility.yul\":14061:14062   */\n      0x00\n        /* \"#utility.yul\":14050:14059   */\n      dup4\n        /* \"#utility.yul\":14046:14063   */\n      add\n        /* \"#utility.yul\":14037:14043   */\n      dup8\n        /* \"#utility.yul\":13993:14064   */\n      tag_379\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":14111:14120   */\n      dup2\n        /* \"#utility.yul\":14105:14109   */\n      dup2\n        /* \"#utility.yul\":14101:14121   */\n      sub\n        /* \"#utility.yul\":14096:14098   */\n      0x20\n        /* \"#utility.yul\":14085:14094   */\n      dup4\n        /* \"#utility.yul\":14081:14099   */\n      add\n        /* \"#utility.yul\":14074:14122   */\n      mstore\n        /* \"#utility.yul\":14139:14217   */\n      tag_571\n        /* \"#utility.yul\":14212:14216   */\n      dup2\n        /* \"#utility.yul\":14203:14209   */\n      dup7\n        /* \"#utility.yul\":14139:14217   */\n      tag_373\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":14131:14217   */\n      swap1\n      pop\n        /* \"#utility.yul\":14264:14273   */\n      dup2\n        /* \"#utility.yul\":14258:14262   */\n      dup2\n        /* \"#utility.yul\":14254:14274   */\n      sub\n        /* \"#utility.yul\":14249:14251   */\n      0x40\n        /* \"#utility.yul\":14238:14247   */\n      dup4\n        /* \"#utility.yul\":14234:14252   */\n      add\n        /* \"#utility.yul\":14227:14275   */\n      mstore\n        /* \"#utility.yul\":14292:14370   */\n      tag_572\n        /* \"#utility.yul\":14365:14369   */\n      dup2\n        /* \"#utility.yul\":14356:14362   */\n      dup6\n        /* \"#utility.yul\":14292:14370   */\n      tag_373\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":14284:14370   */\n      swap1\n      pop\n        /* \"#utility.yul\":14417:14426   */\n      dup2\n        /* \"#utility.yul\":14411:14415   */\n      dup2\n        /* \"#utility.yul\":14407:14427   */\n      sub\n        /* \"#utility.yul\":14402:14404   */\n      0x60\n        /* \"#utility.yul\":14391:14400   */\n      dup4\n        /* \"#utility.yul\":14387:14405   */\n      add\n        /* \"#utility.yul\":14380:14428   */\n      mstore\n        /* \"#utility.yul\":14445:14523   */\n      tag_573\n        /* \"#utility.yul\":14518:14522   */\n      dup2\n        /* \"#utility.yul\":14509:14515   */\n      dup5\n        /* \"#utility.yul\":14445:14523   */\n      tag_373\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":14437:14523   */\n      swap1\n      pop\n        /* \"#utility.yul\":13704:14530   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14536:14652   */\n    tag_401:\n        /* \"#utility.yul\":14606:14627   */\n      tag_575\n        /* \"#utility.yul\":14621:14626   */\n      dup2\n        /* \"#utility.yul\":14606:14627   */\n      tag_367\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":14599:14604   */\n      dup2\n        /* \"#utility.yul\":14596:14628   */\n      eq\n        /* \"#utility.yul\":14586:14646   */\n      tag_576\n      jumpi\n        /* \"#utility.yul\":14642:14643   */\n      0x00\n        /* \"#utility.yul\":14639:14640   */\n      dup1\n        /* \"#utility.yul\":14632:14644   */\n      revert\n        /* \"#utility.yul\":14586:14646   */\n    tag_576:\n        /* \"#utility.yul\":14536:14652   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14658:14791   */\n    tag_402:\n        /* \"#utility.yul\":14701:14706   */\n      0x00\n        /* \"#utility.yul\":14739:14745   */\n      dup2\n        /* \"#utility.yul\":14726:14746   */\n      calldataload\n        /* \"#utility.yul\":14717:14746   */\n      swap1\n      pop\n        /* \"#utility.yul\":14755:14785   */\n      tag_578\n        /* \"#utility.yul\":14779:14784   */\n      dup2\n        /* \"#utility.yul\":14755:14785   */\n      tag_401\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":14658:14791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14797:15265   */\n    tag_90:\n        /* \"#utility.yul\":14862:14868   */\n      0x00\n        /* \"#utility.yul\":14870:14876   */\n      dup1\n        /* \"#utility.yul\":14919:14921   */\n      0x40\n        /* \"#utility.yul\":14907:14916   */\n      dup4\n        /* \"#utility.yul\":14898:14905   */\n      dup6\n        /* \"#utility.yul\":14894:14917   */\n      sub\n        /* \"#utility.yul\":14890:14922   */\n      slt\n        /* \"#utility.yul\":14887:15006   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":14925:15004   */\n      tag_581\n      tag_362\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":14887:15006   */\n    tag_580:\n        /* \"#utility.yul\":15045:15046   */\n      0x00\n        /* \"#utility.yul\":15070:15123   */\n      tag_582\n        /* \"#utility.yul\":15115:15122   */\n      dup6\n        /* \"#utility.yul\":15106:15112   */\n      dup3\n        /* \"#utility.yul\":15095:15104   */\n      dup7\n        /* \"#utility.yul\":15091:15113   */\n      add\n        /* \"#utility.yul\":15070:15123   */\n      tag_381\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":15060:15123   */\n      swap3\n      pop\n        /* \"#utility.yul\":15016:15133   */\n      pop\n        /* \"#utility.yul\":15172:15174   */\n      0x20\n        /* \"#utility.yul\":15198:15248   */\n      tag_583\n        /* \"#utility.yul\":15240:15247   */\n      dup6\n        /* \"#utility.yul\":15231:15237   */\n      dup3\n        /* \"#utility.yul\":15220:15229   */\n      dup7\n        /* \"#utility.yul\":15216:15238   */\n      add\n        /* \"#utility.yul\":15198:15248   */\n      tag_402\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":15188:15248   */\n      swap2\n      pop\n        /* \"#utility.yul\":15143:15258   */\n      pop\n        /* \"#utility.yul\":14797:15265   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15271:15578   */\n    tag_403:\n        /* \"#utility.yul\":15332:15336   */\n      0x00\n        /* \"#utility.yul\":15422:15440   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15414:15420   */\n      dup3\n        /* \"#utility.yul\":15411:15441   */\n      gt\n        /* \"#utility.yul\":15408:15464   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":15444:15462   */\n      tag_586\n      tag_173\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":15408:15464   */\n    tag_585:\n        /* \"#utility.yul\":15482:15511   */\n      tag_587\n        /* \"#utility.yul\":15504:15510   */\n      dup3\n        /* \"#utility.yul\":15482:15511   */\n      tag_372\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":15474:15511   */\n      swap1\n      pop\n        /* \"#utility.yul\":15566:15570   */\n      0x20\n        /* \"#utility.yul\":15560:15564   */\n      dup2\n        /* \"#utility.yul\":15556:15571   */\n      add\n        /* \"#utility.yul\":15548:15571   */\n      swap1\n      pop\n        /* \"#utility.yul\":15271:15578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15584:16007   */\n    tag_404:\n        /* \"#utility.yul\":15661:15666   */\n      0x00\n        /* \"#utility.yul\":15686:15751   */\n      tag_589\n        /* \"#utility.yul\":15702:15750   */\n      tag_590\n        /* \"#utility.yul\":15743:15749   */\n      dup5\n        /* \"#utility.yul\":15702:15750   */\n      tag_403\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":15686:15751   */\n      tag_385\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":15677:15751   */\n      swap1\n      pop\n        /* \"#utility.yul\":15774:15780   */\n      dup3\n        /* \"#utility.yul\":15767:15772   */\n      dup2\n        /* \"#utility.yul\":15760:15781   */\n      mstore\n        /* \"#utility.yul\":15812:15816   */\n      0x20\n        /* \"#utility.yul\":15805:15810   */\n      dup2\n        /* \"#utility.yul\":15801:15817   */\n      add\n        /* \"#utility.yul\":15850:15853   */\n      dup5\n        /* \"#utility.yul\":15841:15847   */\n      dup5\n        /* \"#utility.yul\":15836:15839   */\n      dup5\n        /* \"#utility.yul\":15832:15848   */\n      add\n        /* \"#utility.yul\":15829:15854   */\n      gt\n        /* \"#utility.yul\":15826:15938   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":15857:15936   */\n      tag_592\n      tag_383\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":15826:15938   */\n    tag_591:\n        /* \"#utility.yul\":15947:16001   */\n      tag_593\n        /* \"#utility.yul\":15994:16000   */\n      dup5\n        /* \"#utility.yul\":15989:15992   */\n      dup3\n        /* \"#utility.yul\":15984:15987   */\n      dup6\n        /* \"#utility.yul\":15947:16001   */\n      tag_387\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":15667:16007   */\n      pop\n        /* \"#utility.yul\":15584:16007   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16026:16364   */\n    tag_405:\n        /* \"#utility.yul\":16081:16086   */\n      0x00\n        /* \"#utility.yul\":16130:16133   */\n      dup3\n        /* \"#utility.yul\":16123:16127   */\n      0x1f\n        /* \"#utility.yul\":16115:16121   */\n      dup4\n        /* \"#utility.yul\":16111:16128   */\n      add\n        /* \"#utility.yul\":16107:16134   */\n      slt\n        /* \"#utility.yul\":16097:16219   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":16138:16217   */\n      tag_596\n      tag_382\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":16097:16219   */\n    tag_595:\n        /* \"#utility.yul\":16255:16261   */\n      dup2\n        /* \"#utility.yul\":16242:16262   */\n      calldataload\n        /* \"#utility.yul\":16280:16358   */\n      tag_597\n        /* \"#utility.yul\":16354:16357   */\n      dup5\n        /* \"#utility.yul\":16346:16352   */\n      dup3\n        /* \"#utility.yul\":16339:16343   */\n      0x20\n        /* \"#utility.yul\":16331:16337   */\n      dup7\n        /* \"#utility.yul\":16327:16344   */\n      add\n        /* \"#utility.yul\":16280:16358   */\n      tag_404\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":16271:16358   */\n      swap2\n      pop\n        /* \"#utility.yul\":16087:16364   */\n      pop\n        /* \"#utility.yul\":16026:16364   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16370:17313   */\n    tag_94:\n        /* \"#utility.yul\":16465:16471   */\n      0x00\n        /* \"#utility.yul\":16473:16479   */\n      dup1\n        /* \"#utility.yul\":16481:16487   */\n      0x00\n        /* \"#utility.yul\":16489:16495   */\n      dup1\n        /* \"#utility.yul\":16538:16541   */\n      0x80\n        /* \"#utility.yul\":16526:16535   */\n      dup6\n        /* \"#utility.yul\":16517:16524   */\n      dup8\n        /* \"#utility.yul\":16513:16536   */\n      sub\n        /* \"#utility.yul\":16509:16542   */\n      slt\n        /* \"#utility.yul\":16506:16626   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":16545:16624   */\n      tag_600\n      tag_362\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":16506:16626   */\n    tag_599:\n        /* \"#utility.yul\":16665:16666   */\n      0x00\n        /* \"#utility.yul\":16690:16743   */\n      tag_601\n        /* \"#utility.yul\":16735:16742   */\n      dup8\n        /* \"#utility.yul\":16726:16732   */\n      dup3\n        /* \"#utility.yul\":16715:16724   */\n      dup9\n        /* \"#utility.yul\":16711:16733   */\n      add\n        /* \"#utility.yul\":16690:16743   */\n      tag_381\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":16680:16743   */\n      swap5\n      pop\n        /* \"#utility.yul\":16636:16753   */\n      pop\n        /* \"#utility.yul\":16792:16794   */\n      0x20\n        /* \"#utility.yul\":16818:16871   */\n      tag_602\n        /* \"#utility.yul\":16863:16870   */\n      dup8\n        /* \"#utility.yul\":16854:16860   */\n      dup3\n        /* \"#utility.yul\":16843:16852   */\n      dup9\n        /* \"#utility.yul\":16839:16861   */\n      add\n        /* \"#utility.yul\":16818:16871   */\n      tag_381\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":16808:16871   */\n      swap4\n      pop\n        /* \"#utility.yul\":16763:16881   */\n      pop\n        /* \"#utility.yul\":16920:16922   */\n      0x40\n        /* \"#utility.yul\":16946:16999   */\n      tag_603\n        /* \"#utility.yul\":16991:16998   */\n      dup8\n        /* \"#utility.yul\":16982:16988   */\n      dup3\n        /* \"#utility.yul\":16971:16980   */\n      dup9\n        /* \"#utility.yul\":16967:16989   */\n      add\n        /* \"#utility.yul\":16946:16999   */\n      tag_376\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":16936:16999   */\n      swap3\n      pop\n        /* \"#utility.yul\":16891:17009   */\n      pop\n        /* \"#utility.yul\":17076:17078   */\n      0x60\n        /* \"#utility.yul\":17065:17074   */\n      dup6\n        /* \"#utility.yul\":17061:17079   */\n      add\n        /* \"#utility.yul\":17048:17080   */\n      calldataload\n        /* \"#utility.yul\":17107:17125   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17099:17105   */\n      dup2\n        /* \"#utility.yul\":17096:17126   */\n      gt\n        /* \"#utility.yul\":17093:17210   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":17129:17208   */\n      tag_605\n      tag_363\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":17093:17210   */\n    tag_604:\n        /* \"#utility.yul\":17234:17296   */\n      tag_606\n        /* \"#utility.yul\":17288:17295   */\n      dup8\n        /* \"#utility.yul\":17279:17285   */\n      dup3\n        /* \"#utility.yul\":17268:17277   */\n      dup9\n        /* \"#utility.yul\":17264:17286   */\n      add\n        /* \"#utility.yul\":17234:17296   */\n      tag_405\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":17224:17296   */\n      swap2\n      pop\n        /* \"#utility.yul\":17019:17306   */\n      pop\n        /* \"#utility.yul\":16370:17313   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17319:17793   */\n    tag_102:\n        /* \"#utility.yul\":17387:17393   */\n      0x00\n        /* \"#utility.yul\":17395:17401   */\n      dup1\n        /* \"#utility.yul\":17444:17446   */\n      0x40\n        /* \"#utility.yul\":17432:17441   */\n      dup4\n        /* \"#utility.yul\":17423:17430   */\n      dup6\n        /* \"#utility.yul\":17419:17442   */\n      sub\n        /* \"#utility.yul\":17415:17447   */\n      slt\n        /* \"#utility.yul\":17412:17531   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":17450:17529   */\n      tag_609\n      tag_362\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":17412:17531   */\n    tag_608:\n        /* \"#utility.yul\":17570:17571   */\n      0x00\n        /* \"#utility.yul\":17595:17648   */\n      tag_610\n        /* \"#utility.yul\":17640:17647   */\n      dup6\n        /* \"#utility.yul\":17631:17637   */\n      dup3\n        /* \"#utility.yul\":17620:17629   */\n      dup7\n        /* \"#utility.yul\":17616:17638   */\n      add\n        /* \"#utility.yul\":17595:17648   */\n      tag_381\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":17585:17648   */\n      swap3\n      pop\n        /* \"#utility.yul\":17541:17658   */\n      pop\n        /* \"#utility.yul\":17697:17699   */\n      0x20\n        /* \"#utility.yul\":17723:17776   */\n      tag_611\n        /* \"#utility.yul\":17768:17775   */\n      dup6\n        /* \"#utility.yul\":17759:17765   */\n      dup3\n        /* \"#utility.yul\":17748:17757   */\n      dup7\n        /* \"#utility.yul\":17744:17766   */\n      add\n        /* \"#utility.yul\":17723:17776   */\n      tag_381\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":17713:17776   */\n      swap2\n      pop\n        /* \"#utility.yul\":17668:17786   */\n      pop\n        /* \"#utility.yul\":17319:17793   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17799:17979   */\n    tag_406:\n        /* \"#utility.yul\":17847:17924   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17844:17845   */\n      0x00\n        /* \"#utility.yul\":17837:17925   */\n      mstore\n        /* \"#utility.yul\":17944:17948   */\n      0x22\n        /* \"#utility.yul\":17941:17942   */\n      0x04\n        /* \"#utility.yul\":17934:17949   */\n      mstore\n        /* \"#utility.yul\":17968:17972   */\n      0x24\n        /* \"#utility.yul\":17965:17966   */\n      0x00\n        /* \"#utility.yul\":17958:17973   */\n      revert\n        /* \"#utility.yul\":17985:18305   */\n    tag_112:\n        /* \"#utility.yul\":18029:18035   */\n      0x00\n        /* \"#utility.yul\":18066:18067   */\n      0x02\n        /* \"#utility.yul\":18060:18064   */\n      dup3\n        /* \"#utility.yul\":18056:18068   */\n      div\n        /* \"#utility.yul\":18046:18068   */\n      swap1\n      pop\n        /* \"#utility.yul\":18113:18114   */\n      0x01\n        /* \"#utility.yul\":18107:18111   */\n      dup3\n        /* \"#utility.yul\":18103:18115   */\n      and\n        /* \"#utility.yul\":18134:18152   */\n      dup1\n        /* \"#utility.yul\":18124:18205   */\n      tag_614\n      jumpi\n        /* \"#utility.yul\":18190:18194   */\n      0x7f\n        /* \"#utility.yul\":18182:18188   */\n      dup3\n        /* \"#utility.yul\":18178:18195   */\n      and\n        /* \"#utility.yul\":18168:18195   */\n      swap2\n      pop\n        /* \"#utility.yul\":18124:18205   */\n    tag_614:\n        /* \"#utility.yul\":18252:18254   */\n      0x20\n        /* \"#utility.yul\":18244:18250   */\n      dup3\n        /* \"#utility.yul\":18241:18255   */\n      lt\n        /* \"#utility.yul\":18221:18239   */\n      dup2\n        /* \"#utility.yul\":18218:18256   */\n      sub\n        /* \"#utility.yul\":18215:18299   */\n      tag_615\n      jumpi\n        /* \"#utility.yul\":18271:18289   */\n      tag_616\n      tag_406\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":18215:18299   */\n    tag_615:\n        /* \"#utility.yul\":18036:18305   */\n      pop\n        /* \"#utility.yul\":17985:18305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18311:18491   */\n    tag_125:\n        /* \"#utility.yul\":18359:18436   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18356:18357   */\n      0x00\n        /* \"#utility.yul\":18349:18437   */\n      mstore\n        /* \"#utility.yul\":18456:18460   */\n      0x32\n        /* \"#utility.yul\":18453:18454   */\n      0x04\n        /* \"#utility.yul\":18446:18461   */\n      mstore\n        /* \"#utility.yul\":18480:18484   */\n      0x24\n        /* \"#utility.yul\":18477:18478   */\n      0x00\n        /* \"#utility.yul\":18470:18485   */\n      revert\n        /* \"#utility.yul\":18497:18939   */\n    tag_143:\n        /* \"#utility.yul\":18646:18650   */\n      0x00\n        /* \"#utility.yul\":18684:18686   */\n      0x60\n        /* \"#utility.yul\":18673:18682   */\n      dup3\n        /* \"#utility.yul\":18669:18687   */\n      add\n        /* \"#utility.yul\":18661:18687   */\n      swap1\n      pop\n        /* \"#utility.yul\":18697:18768   */\n      tag_619\n        /* \"#utility.yul\":18765:18766   */\n      0x00\n        /* \"#utility.yul\":18754:18763   */\n      dup4\n        /* \"#utility.yul\":18750:18767   */\n      add\n        /* \"#utility.yul\":18741:18747   */\n      dup7\n        /* \"#utility.yul\":18697:18768   */\n      tag_379\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":18778:18850   */\n      tag_620\n        /* \"#utility.yul\":18846:18848   */\n      0x20\n        /* \"#utility.yul\":18835:18844   */\n      dup4\n        /* \"#utility.yul\":18831:18849   */\n      add\n        /* \"#utility.yul\":18822:18828   */\n      dup6\n        /* \"#utility.yul\":18778:18850   */\n      tag_400\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":18860:18932   */\n      tag_621\n        /* \"#utility.yul\":18928:18930   */\n      0x40\n        /* \"#utility.yul\":18917:18926   */\n      dup4\n        /* \"#utility.yul\":18913:18931   */\n      add\n        /* \"#utility.yul\":18904:18910   */\n      dup5\n        /* \"#utility.yul\":18860:18932   */\n      tag_379\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":18497:18939   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18945:19109   */\n    tag_407:\n        /* \"#utility.yul\":19085:19101   */\n      0x4e6f206d6f7265206861696b7573000000000000000000000000000000000000\n        /* \"#utility.yul\":19081:19082   */\n      0x00\n        /* \"#utility.yul\":19073:19079   */\n      dup3\n        /* \"#utility.yul\":19069:19083   */\n      add\n        /* \"#utility.yul\":19062:19102   */\n      mstore\n        /* \"#utility.yul\":18945:19109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19115:19481   */\n    tag_408:\n        /* \"#utility.yul\":19257:19260   */\n      0x00\n        /* \"#utility.yul\":19278:19345   */\n      tag_624\n        /* \"#utility.yul\":19342:19344   */\n      0x0e\n        /* \"#utility.yul\":19337:19340   */\n      dup4\n        /* \"#utility.yul\":19278:19345   */\n      tag_370\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":19271:19345   */\n      swap2\n      pop\n        /* \"#utility.yul\":19354:19447   */\n      tag_625\n        /* \"#utility.yul\":19443:19446   */\n      dup3\n        /* \"#utility.yul\":19354:19447   */\n      tag_407\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":19472:19474   */\n      0x20\n        /* \"#utility.yul\":19467:19470   */\n      dup3\n        /* \"#utility.yul\":19463:19475   */\n      add\n        /* \"#utility.yul\":19456:19475   */\n      swap1\n      pop\n        /* \"#utility.yul\":19115:19481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19487:19906   */\n    tag_147:\n        /* \"#utility.yul\":19653:19657   */\n      0x00\n        /* \"#utility.yul\":19691:19693   */\n      0x20\n        /* \"#utility.yul\":19680:19689   */\n      dup3\n        /* \"#utility.yul\":19676:19694   */\n      add\n        /* \"#utility.yul\":19668:19694   */\n      swap1\n      pop\n        /* \"#utility.yul\":19740:19749   */\n      dup2\n        /* \"#utility.yul\":19734:19738   */\n      dup2\n        /* \"#utility.yul\":19730:19750   */\n      sub\n        /* \"#utility.yul\":19726:19727   */\n      0x00\n        /* \"#utility.yul\":19715:19724   */\n      dup4\n        /* \"#utility.yul\":19711:19728   */\n      add\n        /* \"#utility.yul\":19704:19751   */\n      mstore\n        /* \"#utility.yul\":19768:19899   */\n      tag_627\n        /* \"#utility.yul\":19894:19898   */\n      dup2\n        /* \"#utility.yul\":19768:19899   */\n      tag_408\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":19760:19899   */\n      swap1\n      pop\n        /* \"#utility.yul\":19487:19906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19912:20060   */\n    tag_409:\n        /* \"#utility.yul\":20014:20025   */\n      0x00\n        /* \"#utility.yul\":20051:20054   */\n      dup2\n        /* \"#utility.yul\":20036:20054   */\n      swap1\n      pop\n        /* \"#utility.yul\":19912:20060   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20066:20456   */\n    tag_410:\n        /* \"#utility.yul\":20172:20175   */\n      0x00\n        /* \"#utility.yul\":20200:20239   */\n      tag_630\n        /* \"#utility.yul\":20233:20238   */\n      dup3\n        /* \"#utility.yul\":20200:20239   */\n      tag_369\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":20255:20344   */\n      tag_631\n        /* \"#utility.yul\":20337:20343   */\n      dup2\n        /* \"#utility.yul\":20332:20335   */\n      dup6\n        /* \"#utility.yul\":20255:20344   */\n      tag_409\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":20248:20344   */\n      swap4\n      pop\n        /* \"#utility.yul\":20353:20418   */\n      tag_632\n        /* \"#utility.yul\":20411:20417   */\n      dup2\n        /* \"#utility.yul\":20406:20409   */\n      dup6\n        /* \"#utility.yul\":20399:20403   */\n      0x20\n        /* \"#utility.yul\":20392:20397   */\n      dup7\n        /* \"#utility.yul\":20388:20404   */\n      add\n        /* \"#utility.yul\":20353:20418   */\n      tag_371\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":20443:20449   */\n      dup1\n        /* \"#utility.yul\":20438:20441   */\n      dup5\n        /* \"#utility.yul\":20434:20450   */\n      add\n        /* \"#utility.yul\":20427:20450   */\n      swap2\n      pop\n        /* \"#utility.yul\":20176:20456   */\n      pop\n        /* \"#utility.yul\":20066:20456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20462:20737   */\n    tag_149:\n        /* \"#utility.yul\":20594:20597   */\n      0x00\n        /* \"#utility.yul\":20616:20711   */\n      tag_634\n        /* \"#utility.yul\":20707:20710   */\n      dup3\n        /* \"#utility.yul\":20698:20704   */\n      dup5\n        /* \"#utility.yul\":20616:20711   */\n      tag_410\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":20609:20711   */\n      swap2\n      pop\n        /* \"#utility.yul\":20728:20731   */\n      dup2\n        /* \"#utility.yul\":20721:20731   */\n      swap1\n      pop\n        /* \"#utility.yul\":20462:20737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20743:20884   */\n    tag_411:\n        /* \"#utility.yul\":20792:20796   */\n      0x00\n        /* \"#utility.yul\":20815:20818   */\n      dup2\n        /* \"#utility.yul\":20807:20818   */\n      swap1\n      pop\n        /* \"#utility.yul\":20838:20841   */\n      dup2\n        /* \"#utility.yul\":20835:20836   */\n      0x00\n        /* \"#utility.yul\":20828:20842   */\n      mstore\n        /* \"#utility.yul\":20872:20876   */\n      0x20\n        /* \"#utility.yul\":20869:20870   */\n      0x00\n        /* \"#utility.yul\":20859:20877   */\n      keccak256\n        /* \"#utility.yul\":20851:20877   */\n      swap1\n      pop\n        /* \"#utility.yul\":20743:20884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20890:20983   */\n    tag_412:\n        /* \"#utility.yul\":20927:20933   */\n      0x00\n        /* \"#utility.yul\":20974:20976   */\n      0x20\n        /* \"#utility.yul\":20969:20971   */\n      0x1f\n        /* \"#utility.yul\":20962:20967   */\n      dup4\n        /* \"#utility.yul\":20958:20972   */\n      add\n        /* \"#utility.yul\":20954:20977   */\n      div\n        /* \"#utility.yul\":20944:20977   */\n      swap1\n      pop\n        /* \"#utility.yul\":20890:20983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20989:21096   */\n    tag_413:\n        /* \"#utility.yul\":21033:21041   */\n      0x00\n        /* \"#utility.yul\":21083:21088   */\n      dup3\n        /* \"#utility.yul\":21077:21081   */\n      dup3\n        /* \"#utility.yul\":21073:21089   */\n      shl\n        /* \"#utility.yul\":21052:21089   */\n      swap1\n      pop\n        /* \"#utility.yul\":20989:21096   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21102:21495   */\n    tag_414:\n        /* \"#utility.yul\":21171:21177   */\n      0x00\n        /* \"#utility.yul\":21221:21222   */\n      0x08\n        /* \"#utility.yul\":21209:21219   */\n      dup4\n        /* \"#utility.yul\":21205:21223   */\n      mul\n        /* \"#utility.yul\":21244:21341   */\n      tag_639\n        /* \"#utility.yul\":21274:21340   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21263:21272   */\n      dup3\n        /* \"#utility.yul\":21244:21341   */\n      tag_413\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":21362:21401   */\n      tag_640\n        /* \"#utility.yul\":21392:21400   */\n      dup7\n        /* \"#utility.yul\":21381:21390   */\n      dup4\n        /* \"#utility.yul\":21362:21401   */\n      tag_413\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":21350:21401   */\n      swap6\n      pop\n        /* \"#utility.yul\":21434:21438   */\n      dup1\n        /* \"#utility.yul\":21430:21439   */\n      not\n        /* \"#utility.yul\":21423:21428   */\n      dup5\n        /* \"#utility.yul\":21419:21440   */\n      and\n        /* \"#utility.yul\":21410:21440   */\n      swap4\n      pop\n        /* \"#utility.yul\":21483:21487   */\n      dup1\n        /* \"#utility.yul\":21473:21481   */\n      dup7\n        /* \"#utility.yul\":21469:21488   */\n      and\n        /* \"#utility.yul\":21462:21467   */\n      dup5\n        /* \"#utility.yul\":21459:21489   */\n      or\n        /* \"#utility.yul\":21449:21489   */\n      swap3\n      pop\n        /* \"#utility.yul\":21178:21495   */\n      pop\n      pop\n        /* \"#utility.yul\":21102:21495   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21501:21561   */\n    tag_415:\n        /* \"#utility.yul\":21529:21532   */\n      0x00\n        /* \"#utility.yul\":21550:21555   */\n      dup2\n        /* \"#utility.yul\":21543:21555   */\n      swap1\n      pop\n        /* \"#utility.yul\":21501:21561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21567:21709   */\n    tag_416:\n        /* \"#utility.yul\":21617:21626   */\n      0x00\n        /* \"#utility.yul\":21650:21703   */\n      tag_643\n        /* \"#utility.yul\":21668:21702   */\n      tag_644\n        /* \"#utility.yul\":21677:21701   */\n      tag_645\n        /* \"#utility.yul\":21695:21700   */\n      dup5\n        /* \"#utility.yul\":21677:21701   */\n      tag_374\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":21668:21702   */\n      tag_415\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":21650:21703   */\n      tag_374\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":21637:21703   */\n      swap1\n      pop\n        /* \"#utility.yul\":21567:21709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21715:21790   */\n    tag_417:\n        /* \"#utility.yul\":21758:21761   */\n      0x00\n        /* \"#utility.yul\":21779:21784   */\n      dup2\n        /* \"#utility.yul\":21772:21784   */\n      swap1\n      pop\n        /* \"#utility.yul\":21715:21790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21796:22065   */\n    tag_418:\n        /* \"#utility.yul\":21906:21945   */\n      tag_648\n        /* \"#utility.yul\":21937:21944   */\n      dup4\n        /* \"#utility.yul\":21906:21945   */\n      tag_416\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":21967:22058   */\n      tag_649\n        /* \"#utility.yul\":22016:22057   */\n      tag_650\n        /* \"#utility.yul\":22040:22056   */\n      dup3\n        /* \"#utility.yul\":22016:22057   */\n      tag_417\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":22008:22014   */\n      dup5\n        /* \"#utility.yul\":22001:22005   */\n      dup5\n        /* \"#utility.yul\":21995:22006   */\n      sload\n        /* \"#utility.yul\":21967:22058   */\n      tag_414\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":21961:21965   */\n      dup3\n        /* \"#utility.yul\":21954:22059   */\n      sstore\n        /* \"#utility.yul\":21872:22065   */\n      pop\n        /* \"#utility.yul\":21796:22065   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22071:22144   */\n    tag_419:\n        /* \"#utility.yul\":22116:22119   */\n      0x00\n        /* \"#utility.yul\":22071:22144   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":22150:22339   */\n    tag_420:\n        /* \"#utility.yul\":22227:22259   */\n      tag_653\n      tag_419\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":22268:22333   */\n      tag_654\n        /* \"#utility.yul\":22326:22332   */\n      dup2\n        /* \"#utility.yul\":22318:22324   */\n      dup5\n        /* \"#utility.yul\":22312:22316   */\n      dup5\n        /* \"#utility.yul\":22268:22333   */\n      tag_418\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":22203:22339   */\n      pop\n        /* \"#utility.yul\":22150:22339   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22345:22531   */\n    tag_421:\n        /* \"#utility.yul\":22405:22525   */\n    tag_656:\n        /* \"#utility.yul\":22422:22425   */\n      dup2\n        /* \"#utility.yul\":22415:22420   */\n      dup2\n        /* \"#utility.yul\":22412:22426   */\n      lt\n        /* \"#utility.yul\":22405:22525   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":22476:22515   */\n      tag_659\n        /* \"#utility.yul\":22513:22514   */\n      0x00\n        /* \"#utility.yul\":22506:22511   */\n      dup3\n        /* \"#utility.yul\":22476:22515   */\n      tag_420\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":22449:22450   */\n      0x01\n        /* \"#utility.yul\":22442:22447   */\n      dup2\n        /* \"#utility.yul\":22438:22451   */\n      add\n        /* \"#utility.yul\":22429:22451   */\n      swap1\n      pop\n        /* \"#utility.yul\":22405:22525   */\n      jump(tag_656)\n    tag_658:\n        /* \"#utility.yul\":22345:22531   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22537:23080   */\n    tag_422:\n        /* \"#utility.yul\":22638:22640   */\n      0x1f\n        /* \"#utility.yul\":22633:22636   */\n      dup3\n        /* \"#utility.yul\":22630:22641   */\n      gt\n        /* \"#utility.yul\":22627:23073   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":22672:22710   */\n      tag_662\n        /* \"#utility.yul\":22704:22709   */\n      dup2\n        /* \"#utility.yul\":22672:22710   */\n      tag_411\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":22756:22785   */\n      tag_663\n        /* \"#utility.yul\":22774:22784   */\n      dup5\n        /* \"#utility.yul\":22756:22785   */\n      tag_412\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":22746:22754   */\n      dup2\n        /* \"#utility.yul\":22742:22786   */\n      add\n        /* \"#utility.yul\":22939:22941   */\n      0x20\n        /* \"#utility.yul\":22927:22937   */\n      dup6\n        /* \"#utility.yul\":22924:22942   */\n      lt\n        /* \"#utility.yul\":22921:22970   */\n      iszero\n      tag_664\n      jumpi\n        /* \"#utility.yul\":22960:22968   */\n      dup2\n        /* \"#utility.yul\":22945:22968   */\n      swap1\n      pop\n        /* \"#utility.yul\":22921:22970   */\n    tag_664:\n        /* \"#utility.yul\":22983:23063   */\n      tag_665\n        /* \"#utility.yul\":23039:23061   */\n      tag_666\n        /* \"#utility.yul\":23057:23060   */\n      dup6\n        /* \"#utility.yul\":23039:23061   */\n      tag_412\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":23029:23037   */\n      dup4\n        /* \"#utility.yul\":23025:23062   */\n      add\n        /* \"#utility.yul\":23012:23023   */\n      dup3\n        /* \"#utility.yul\":22983:23063   */\n      tag_421\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":22642:23073   */\n      pop\n      pop\n        /* \"#utility.yul\":22627:23073   */\n    tag_661:\n        /* \"#utility.yul\":22537:23080   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23086:23203   */\n    tag_423:\n        /* \"#utility.yul\":23140:23148   */\n      0x00\n        /* \"#utility.yul\":23190:23195   */\n      dup3\n        /* \"#utility.yul\":23184:23188   */\n      dup3\n        /* \"#utility.yul\":23180:23196   */\n      shr\n        /* \"#utility.yul\":23159:23196   */\n      swap1\n      pop\n        /* \"#utility.yul\":23086:23203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23209:23378   */\n    tag_424:\n        /* \"#utility.yul\":23253:23259   */\n      0x00\n        /* \"#utility.yul\":23286:23337   */\n      tag_669\n        /* \"#utility.yul\":23334:23335   */\n      0x00\n        /* \"#utility.yul\":23330:23336   */\n      not\n        /* \"#utility.yul\":23322:23327   */\n      dup5\n        /* \"#utility.yul\":23319:23320   */\n      0x08\n        /* \"#utility.yul\":23315:23328   */\n      mul\n        /* \"#utility.yul\":23286:23337   */\n      tag_423\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":23282:23338   */\n      not\n        /* \"#utility.yul\":23367:23371   */\n      dup1\n        /* \"#utility.yul\":23361:23365   */\n      dup4\n        /* \"#utility.yul\":23357:23372   */\n      and\n        /* \"#utility.yul\":23347:23372   */\n      swap2\n      pop\n        /* \"#utility.yul\":23260:23378   */\n      pop\n        /* \"#utility.yul\":23209:23378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23383:23678   */\n    tag_425:\n        /* \"#utility.yul\":23459:23463   */\n      0x00\n        /* \"#utility.yul\":23605:23634   */\n      tag_671\n        /* \"#utility.yul\":23630:23633   */\n      dup4\n        /* \"#utility.yul\":23624:23628   */\n      dup4\n        /* \"#utility.yul\":23605:23634   */\n      tag_424\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":23597:23634   */\n      swap2\n      pop\n        /* \"#utility.yul\":23667:23670   */\n      dup3\n        /* \"#utility.yul\":23664:23665   */\n      0x02\n        /* \"#utility.yul\":23660:23671   */\n      mul\n        /* \"#utility.yul\":23654:23658   */\n      dup3\n        /* \"#utility.yul\":23651:23672   */\n      or\n        /* \"#utility.yul\":23643:23672   */\n      swap1\n      pop\n        /* \"#utility.yul\":23383:23678   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23683:25078   */\n    tag_160:\n        /* \"#utility.yul\":23800:23837   */\n      tag_673\n        /* \"#utility.yul\":23833:23836   */\n      dup3\n        /* \"#utility.yul\":23800:23837   */\n      tag_369\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":23902:23920   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23894:23900   */\n      dup2\n        /* \"#utility.yul\":23891:23921   */\n      gt\n        /* \"#utility.yul\":23888:23944   */\n      iszero\n      tag_674\n      jumpi\n        /* \"#utility.yul\":23924:23942   */\n      tag_675\n      tag_173\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":23888:23944   */\n    tag_674:\n        /* \"#utility.yul\":23968:24006   */\n      tag_676\n        /* \"#utility.yul\":24000:24004   */\n      dup3\n        /* \"#utility.yul\":23994:24005   */\n      sload\n        /* \"#utility.yul\":23968:24006   */\n      tag_112\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":24053:24120   */\n      tag_677\n        /* \"#utility.yul\":24113:24119   */\n      dup3\n        /* \"#utility.yul\":24105:24111   */\n      dup3\n        /* \"#utility.yul\":24099:24103   */\n      dup6\n        /* \"#utility.yul\":24053:24120   */\n      tag_422\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":24147:24148   */\n      0x00\n        /* \"#utility.yul\":24171:24175   */\n      0x20\n        /* \"#utility.yul\":24158:24175   */\n      swap1\n      pop\n        /* \"#utility.yul\":24203:24205   */\n      0x1f\n        /* \"#utility.yul\":24195:24201   */\n      dup4\n        /* \"#utility.yul\":24192:24206   */\n      gt\n        /* \"#utility.yul\":24220:24221   */\n      0x01\n        /* \"#utility.yul\":24215:24833   */\n      dup2\n      eq\n      tag_679\n      jumpi\n        /* \"#utility.yul\":24877:24878   */\n      0x00\n        /* \"#utility.yul\":24894:24900   */\n      dup5\n        /* \"#utility.yul\":24891:24968   */\n      iszero\n      tag_680\n      jumpi\n        /* \"#utility.yul\":24943:24952   */\n      dup3\n        /* \"#utility.yul\":24938:24941   */\n      dup8\n        /* \"#utility.yul\":24934:24953   */\n      add\n        /* \"#utility.yul\":24928:24954   */\n      mload\n        /* \"#utility.yul\":24919:24954   */\n      swap1\n      pop\n        /* \"#utility.yul\":24891:24968   */\n    tag_680:\n        /* \"#utility.yul\":24994:25061   */\n      tag_681\n        /* \"#utility.yul\":25054:25060   */\n      dup6\n        /* \"#utility.yul\":25047:25052   */\n      dup3\n        /* \"#utility.yul\":24994:25061   */\n      tag_425\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":24988:24992   */\n      dup7\n        /* \"#utility.yul\":24981:25062   */\n      sstore\n        /* \"#utility.yul\":24850:25072   */\n      pop\n        /* \"#utility.yul\":24185:25072   */\n      jump(tag_678)\n        /* \"#utility.yul\":24215:24833   */\n    tag_679:\n        /* \"#utility.yul\":24267:24271   */\n      0x1f\n        /* \"#utility.yul\":24263:24272   */\n      not\n        /* \"#utility.yul\":24255:24261   */\n      dup5\n        /* \"#utility.yul\":24251:24273   */\n      and\n        /* \"#utility.yul\":24301:24338   */\n      tag_682\n        /* \"#utility.yul\":24333:24337   */\n      dup7\n        /* \"#utility.yul\":24301:24338   */\n      tag_411\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":24360:24361   */\n      0x00\n        /* \"#utility.yul\":24374:24582   */\n    tag_683:\n        /* \"#utility.yul\":24388:24395   */\n      dup3\n        /* \"#utility.yul\":24385:24386   */\n      dup2\n        /* \"#utility.yul\":24382:24396   */\n      lt\n        /* \"#utility.yul\":24374:24582   */\n      iszero\n      tag_685\n      jumpi\n        /* \"#utility.yul\":24467:24476   */\n      dup5\n        /* \"#utility.yul\":24462:24465   */\n      dup10\n        /* \"#utility.yul\":24458:24477   */\n      add\n        /* \"#utility.yul\":24452:24478   */\n      mload\n        /* \"#utility.yul\":24444:24450   */\n      dup3\n        /* \"#utility.yul\":24437:24479   */\n      sstore\n        /* \"#utility.yul\":24518:24519   */\n      0x01\n        /* \"#utility.yul\":24510:24516   */\n      dup3\n        /* \"#utility.yul\":24506:24520   */\n      add\n        /* \"#utility.yul\":24496:24520   */\n      swap2\n      pop\n        /* \"#utility.yul\":24565:24567   */\n      0x20\n        /* \"#utility.yul\":24554:24563   */\n      dup6\n        /* \"#utility.yul\":24550:24568   */\n      add\n        /* \"#utility.yul\":24537:24568   */\n      swap5\n      pop\n        /* \"#utility.yul\":24411:24415   */\n      0x20\n        /* \"#utility.yul\":24408:24409   */\n      dup2\n        /* \"#utility.yul\":24404:24416   */\n      add\n        /* \"#utility.yul\":24399:24416   */\n      swap1\n      pop\n        /* \"#utility.yul\":24374:24582   */\n      jump(tag_683)\n    tag_685:\n        /* \"#utility.yul\":24610:24616   */\n      dup7\n        /* \"#utility.yul\":24601:24608   */\n      dup4\n        /* \"#utility.yul\":24598:24617   */\n      lt\n        /* \"#utility.yul\":24595:24774   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":24668:24677   */\n      dup5\n        /* \"#utility.yul\":24663:24666   */\n      dup10\n        /* \"#utility.yul\":24659:24678   */\n      add\n        /* \"#utility.yul\":24653:24679   */\n      mload\n        /* \"#utility.yul\":24711:24759   */\n      tag_687\n        /* \"#utility.yul\":24753:24757   */\n      0x1f\n        /* \"#utility.yul\":24745:24751   */\n      dup10\n        /* \"#utility.yul\":24741:24758   */\n      and\n        /* \"#utility.yul\":24730:24739   */\n      dup3\n        /* \"#utility.yul\":24711:24759   */\n      tag_424\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":24703:24709   */\n      dup4\n        /* \"#utility.yul\":24696:24760   */\n      sstore\n        /* \"#utility.yul\":24618:24774   */\n      pop\n        /* \"#utility.yul\":24595:24774   */\n    tag_686:\n        /* \"#utility.yul\":24820:24821   */\n      0x01\n        /* \"#utility.yul\":24816:24817   */\n      0x02\n        /* \"#utility.yul\":24808:24814   */\n      dup9\n        /* \"#utility.yul\":24804:24818   */\n      mul\n        /* \"#utility.yul\":24800:24822   */\n      add\n        /* \"#utility.yul\":24794:24798   */\n      dup9\n        /* \"#utility.yul\":24787:24823   */\n      sstore\n        /* \"#utility.yul\":24222:24833   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":24185:25072   */\n    tag_678:\n      pop\n        /* \"#utility.yul\":23775:25078   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23683:25078   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25084:25264   */\n    tag_426:\n        /* \"#utility.yul\":25132:25209   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25129:25130   */\n      0x00\n        /* \"#utility.yul\":25122:25210   */\n      mstore\n        /* \"#utility.yul\":25229:25233   */\n      0x11\n        /* \"#utility.yul\":25226:25227   */\n      0x04\n        /* \"#utility.yul\":25219:25234   */\n      mstore\n        /* \"#utility.yul\":25253:25257   */\n      0x24\n        /* \"#utility.yul\":25250:25251   */\n      0x00\n        /* \"#utility.yul\":25243:25258   */\n      revert\n        /* \"#utility.yul\":25270:25503   */\n    tag_166:\n        /* \"#utility.yul\":25309:25312   */\n      0x00\n        /* \"#utility.yul\":25332:25356   */\n      tag_690\n        /* \"#utility.yul\":25350:25355   */\n      dup3\n        /* \"#utility.yul\":25332:25356   */\n      tag_374\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":25323:25356   */\n      swap2\n      pop\n        /* \"#utility.yul\":25378:25444   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25371:25376   */\n      dup3\n        /* \"#utility.yul\":25368:25445   */\n      sub\n        /* \"#utility.yul\":25365:25468   */\n      tag_691\n      jumpi\n        /* \"#utility.yul\":25448:25466   */\n      tag_692\n      tag_426\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":25365:25468   */\n    tag_691:\n        /* \"#utility.yul\":25495:25496   */\n      0x01\n        /* \"#utility.yul\":25488:25493   */\n      dup3\n        /* \"#utility.yul\":25484:25497   */\n      add\n        /* \"#utility.yul\":25477:25497   */\n      swap1\n      pop\n        /* \"#utility.yul\":25270:25503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25509:25944   */\n    tag_251:\n        /* \"#utility.yul\":25689:25692   */\n      0x00\n        /* \"#utility.yul\":25711:25806   */\n      tag_694\n        /* \"#utility.yul\":25802:25805   */\n      dup3\n        /* \"#utility.yul\":25793:25799   */\n      dup6\n        /* \"#utility.yul\":25711:25806   */\n      tag_410\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":25704:25806   */\n      swap2\n      pop\n        /* \"#utility.yul\":25823:25918   */\n      tag_695\n        /* \"#utility.yul\":25914:25917   */\n      dup3\n        /* \"#utility.yul\":25905:25911   */\n      dup5\n        /* \"#utility.yul\":25823:25918   */\n      tag_410\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":25816:25918   */\n      swap2\n      pop\n        /* \"#utility.yul\":25935:25938   */\n      dup2\n        /* \"#utility.yul\":25928:25938   */\n      swap1\n      pop\n        /* \"#utility.yul\":25509:25944   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25950:26048   */\n    tag_427:\n        /* \"#utility.yul\":26001:26007   */\n      0x00\n        /* \"#utility.yul\":26035:26040   */\n      dup2\n        /* \"#utility.yul\":26029:26041   */\n      mload\n        /* \"#utility.yul\":26019:26041   */\n      swap1\n      pop\n        /* \"#utility.yul\":25950:26048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26054:26222   */\n    tag_428:\n        /* \"#utility.yul\":26137:26148   */\n      0x00\n        /* \"#utility.yul\":26171:26177   */\n      dup3\n        /* \"#utility.yul\":26166:26169   */\n      dup3\n        /* \"#utility.yul\":26159:26178   */\n      mstore\n        /* \"#utility.yul\":26211:26215   */\n      0x20\n        /* \"#utility.yul\":26206:26209   */\n      dup3\n        /* \"#utility.yul\":26202:26216   */\n      add\n        /* \"#utility.yul\":26187:26216   */\n      swap1\n      pop\n        /* \"#utility.yul\":26054:26222   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26228:26601   */\n    tag_429:\n        /* \"#utility.yul\":26314:26317   */\n      0x00\n        /* \"#utility.yul\":26342:26380   */\n      tag_699\n        /* \"#utility.yul\":26374:26379   */\n      dup3\n        /* \"#utility.yul\":26342:26380   */\n      tag_427\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":26396:26466   */\n      tag_700\n        /* \"#utility.yul\":26459:26465   */\n      dup2\n        /* \"#utility.yul\":26454:26457   */\n      dup6\n        /* \"#utility.yul\":26396:26466   */\n      tag_428\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":26389:26466   */\n      swap4\n      pop\n        /* \"#utility.yul\":26475:26540   */\n      tag_701\n        /* \"#utility.yul\":26533:26539   */\n      dup2\n        /* \"#utility.yul\":26528:26531   */\n      dup6\n        /* \"#utility.yul\":26521:26525   */\n      0x20\n        /* \"#utility.yul\":26514:26519   */\n      dup7\n        /* \"#utility.yul\":26510:26526   */\n      add\n        /* \"#utility.yul\":26475:26540   */\n      tag_371\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":26565:26594   */\n      tag_702\n        /* \"#utility.yul\":26587:26593   */\n      dup2\n        /* \"#utility.yul\":26565:26594   */\n      tag_372\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":26560:26563   */\n      dup5\n        /* \"#utility.yul\":26556:26595   */\n      add\n        /* \"#utility.yul\":26549:26595   */\n      swap2\n      pop\n        /* \"#utility.yul\":26318:26601   */\n      pop\n        /* \"#utility.yul\":26228:26601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26607:27247   */\n    tag_286:\n        /* \"#utility.yul\":26802:26806   */\n      0x00\n        /* \"#utility.yul\":26840:26843   */\n      0x80\n        /* \"#utility.yul\":26829:26838   */\n      dup3\n        /* \"#utility.yul\":26825:26844   */\n      add\n        /* \"#utility.yul\":26817:26844   */\n      swap1\n      pop\n        /* \"#utility.yul\":26854:26925   */\n      tag_704\n        /* \"#utility.yul\":26922:26923   */\n      0x00\n        /* \"#utility.yul\":26911:26920   */\n      dup4\n        /* \"#utility.yul\":26907:26924   */\n      add\n        /* \"#utility.yul\":26898:26904   */\n      dup8\n        /* \"#utility.yul\":26854:26925   */\n      tag_379\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":26935:27007   */\n      tag_705\n        /* \"#utility.yul\":27003:27005   */\n      0x20\n        /* \"#utility.yul\":26992:27001   */\n      dup4\n        /* \"#utility.yul\":26988:27006   */\n      add\n        /* \"#utility.yul\":26979:26985   */\n      dup7\n        /* \"#utility.yul\":26935:27007   */\n      tag_379\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":27017:27089   */\n      tag_706\n        /* \"#utility.yul\":27085:27087   */\n      0x40\n        /* \"#utility.yul\":27074:27083   */\n      dup4\n        /* \"#utility.yul\":27070:27088   */\n      add\n        /* \"#utility.yul\":27061:27067   */\n      dup6\n        /* \"#utility.yul\":27017:27089   */\n      tag_400\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":27136:27145   */\n      dup2\n        /* \"#utility.yul\":27130:27134   */\n      dup2\n        /* \"#utility.yul\":27126:27146   */\n      sub\n        /* \"#utility.yul\":27121:27123   */\n      0x60\n        /* \"#utility.yul\":27110:27119   */\n      dup4\n        /* \"#utility.yul\":27106:27124   */\n      add\n        /* \"#utility.yul\":27099:27147   */\n      mstore\n        /* \"#utility.yul\":27164:27240   */\n      tag_707\n        /* \"#utility.yul\":27235:27239   */\n      dup2\n        /* \"#utility.yul\":27226:27232   */\n      dup5\n        /* \"#utility.yul\":27164:27240   */\n      tag_429\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":27156:27240   */\n      swap1\n      pop\n        /* \"#utility.yul\":26607:27247   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27253:27394   */\n    tag_430:\n        /* \"#utility.yul\":27309:27314   */\n      0x00\n        /* \"#utility.yul\":27340:27346   */\n      dup2\n        /* \"#utility.yul\":27334:27347   */\n      mload\n        /* \"#utility.yul\":27325:27347   */\n      swap1\n      pop\n        /* \"#utility.yul\":27356:27388   */\n      tag_709\n        /* \"#utility.yul\":27382:27387   */\n      dup2\n        /* \"#utility.yul\":27356:27388   */\n      tag_365\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":27253:27394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27400:27749   */\n    tag_289:\n        /* \"#utility.yul\":27469:27475   */\n      0x00\n        /* \"#utility.yul\":27518:27520   */\n      0x20\n        /* \"#utility.yul\":27506:27515   */\n      dup3\n        /* \"#utility.yul\":27497:27504   */\n      dup5\n        /* \"#utility.yul\":27493:27516   */\n      sub\n        /* \"#utility.yul\":27489:27521   */\n      slt\n        /* \"#utility.yul\":27486:27605   */\n      iszero\n      tag_711\n      jumpi\n        /* \"#utility.yul\":27524:27603   */\n      tag_712\n      tag_362\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":27486:27605   */\n    tag_711:\n        /* \"#utility.yul\":27644:27645   */\n      0x00\n        /* \"#utility.yul\":27669:27732   */\n      tag_713\n        /* \"#utility.yul\":27724:27731   */\n      dup5\n        /* \"#utility.yul\":27715:27721   */\n      dup3\n        /* \"#utility.yul\":27704:27713   */\n      dup6\n        /* \"#utility.yul\":27700:27722   */\n      add\n        /* \"#utility.yul\":27669:27732   */\n      tag_430\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":27659:27732   */\n      swap2\n      pop\n        /* \"#utility.yul\":27615:27742   */\n      pop\n        /* \"#utility.yul\":27400:27749   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27755:27935   */\n    tag_313:\n        /* \"#utility.yul\":27803:27880   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27800:27801   */\n      0x00\n        /* \"#utility.yul\":27793:27881   */\n      mstore\n        /* \"#utility.yul\":27900:27904   */\n      0x12\n        /* \"#utility.yul\":27897:27898   */\n      0x04\n        /* \"#utility.yul\":27890:27905   */\n      mstore\n        /* \"#utility.yul\":27924:27928   */\n      0x24\n        /* \"#utility.yul\":27921:27922   */\n      0x00\n        /* \"#utility.yul\":27914:27929   */\n      revert\n        /* \"#utility.yul\":27941:28273   */\n    tag_334:\n        /* \"#utility.yul\":28062:28066   */\n      0x00\n        /* \"#utility.yul\":28100:28102   */\n      0x40\n        /* \"#utility.yul\":28089:28098   */\n      dup3\n        /* \"#utility.yul\":28085:28103   */\n      add\n        /* \"#utility.yul\":28077:28103   */\n      swap1\n      pop\n        /* \"#utility.yul\":28113:28184   */\n      tag_716\n        /* \"#utility.yul\":28181:28182   */\n      0x00\n        /* \"#utility.yul\":28170:28179   */\n      dup4\n        /* \"#utility.yul\":28166:28183   */\n      add\n        /* \"#utility.yul\":28157:28163   */\n      dup6\n        /* \"#utility.yul\":28113:28184   */\n      tag_379\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":28194:28266   */\n      tag_717\n        /* \"#utility.yul\":28262:28264   */\n      0x20\n        /* \"#utility.yul\":28251:28260   */\n      dup4\n        /* \"#utility.yul\":28247:28265   */\n      add\n        /* \"#utility.yul\":28238:28244   */\n      dup5\n        /* \"#utility.yul\":28194:28266   */\n      tag_400\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":27941:28273   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202b407af1abc77e84d594a145cdc772f26c52d80a2034e6147883b65791c5cea364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2835": {
									"entryPoint": null,
									"id": 2835,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:12",
										"nodeType": "YulBlock",
										"src": "0:5231:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:12",
													"nodeType": "YulBlock",
													"src": "66:40:12",
													"statements": [
														{
															"nativeSrc": "77:22:12",
															"nodeType": "YulAssignment",
															"src": "77:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:12"
																},
																"nativeSrc": "87:12:12",
																"nodeType": "YulFunctionCall",
																"src": "87:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:12",
														"nodeType": "YulTypedName",
														"src": "49:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:12",
														"nodeType": "YulTypedName",
														"src": "59:6:12",
														"type": ""
													}
												],
												"src": "7:99:12"
											},
											{
												"body": {
													"nativeSrc": "140:152:12",
													"nodeType": "YulBlock",
													"src": "140:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:12",
																		"nodeType": "YulLiteral",
																		"src": "157:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:12",
																		"nodeType": "YulLiteral",
																		"src": "160:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:12"
																},
																"nativeSrc": "150:88:12",
																"nodeType": "YulFunctionCall",
																"src": "150:88:12"
															},
															"nativeSrc": "150:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:12",
																		"nodeType": "YulLiteral",
																		"src": "254:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:12",
																		"nodeType": "YulLiteral",
																		"src": "257:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:12"
																},
																"nativeSrc": "247:15:12",
																"nodeType": "YulFunctionCall",
																"src": "247:15:12"
															},
															"nativeSrc": "247:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:12",
																		"nodeType": "YulLiteral",
																		"src": "278:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:12",
																		"nodeType": "YulLiteral",
																		"src": "281:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:12"
																},
																"nativeSrc": "271:15:12",
																"nodeType": "YulFunctionCall",
																"src": "271:15:12"
															},
															"nativeSrc": "271:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:12"
											},
											{
												"body": {
													"nativeSrc": "326:152:12",
													"nodeType": "YulBlock",
													"src": "326:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:12",
																		"nodeType": "YulLiteral",
																		"src": "343:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:12",
																		"nodeType": "YulLiteral",
																		"src": "346:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:12"
																},
																"nativeSrc": "336:88:12",
																"nodeType": "YulFunctionCall",
																"src": "336:88:12"
															},
															"nativeSrc": "336:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:12",
																		"nodeType": "YulLiteral",
																		"src": "440:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:12",
																		"nodeType": "YulLiteral",
																		"src": "443:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																},
																"nativeSrc": "433:15:12",
																"nodeType": "YulFunctionCall",
																"src": "433:15:12"
															},
															"nativeSrc": "433:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:12",
																		"nodeType": "YulLiteral",
																		"src": "464:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:12",
																		"nodeType": "YulLiteral",
																		"src": "467:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:12"
																},
																"nativeSrc": "457:15:12",
																"nodeType": "YulFunctionCall",
																"src": "457:15:12"
															},
															"nativeSrc": "457:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:12"
											},
											{
												"body": {
													"nativeSrc": "535:269:12",
													"nodeType": "YulBlock",
													"src": "535:269:12",
													"statements": [
														{
															"nativeSrc": "545:22:12",
															"nodeType": "YulAssignment",
															"src": "545:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:12",
																		"nodeType": "YulLiteral",
																		"src": "565:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:12"
																},
																"nativeSrc": "555:12:12",
																"nodeType": "YulFunctionCall",
																"src": "555:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:12"
																}
															]
														},
														{
															"nativeSrc": "576:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:12",
																		"nodeType": "YulLiteral",
																		"src": "612:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:12"
																},
																"nativeSrc": "602:12:12",
																"nodeType": "YulFunctionCall",
																"src": "602:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:12",
																	"nodeType": "YulTypedName",
																	"src": "580:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:12",
																"nodeType": "YulBlock",
																"src": "653:51:12",
																"statements": [
																	{
																		"nativeSrc": "667:27:12",
																		"nodeType": "YulAssignment",
																		"src": "667:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:12",
																					"nodeType": "YulLiteral",
																					"src": "689:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:12"
																			},
																			"nativeSrc": "677:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:12"
																},
																"nativeSrc": "626:26:12",
																"nodeType": "YulFunctionCall",
																"src": "626:26:12"
															},
															"nativeSrc": "623:81:12",
															"nodeType": "YulIf",
															"src": "623:81:12"
														},
														{
															"body": {
																"nativeSrc": "756:42:12",
																"nodeType": "YulBlock",
																"src": "756:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:12"
																			},
																			"nativeSrc": "770:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:12"
																		},
																		"nativeSrc": "770:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:12",
																				"nodeType": "YulLiteral",
																				"src": "751:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:12"
																		},
																		"nativeSrc": "740:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:12"
																},
																"nativeSrc": "717:38:12",
																"nodeType": "YulFunctionCall",
																"src": "717:38:12"
															},
															"nativeSrc": "714:84:12",
															"nodeType": "YulIf",
															"src": "714:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:12",
														"nodeType": "YulTypedName",
														"src": "519:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:12",
														"nodeType": "YulTypedName",
														"src": "528:6:12",
														"type": ""
													}
												],
												"src": "484:320:12"
											},
											{
												"body": {
													"nativeSrc": "864:87:12",
													"nodeType": "YulBlock",
													"src": "864:87:12",
													"statements": [
														{
															"nativeSrc": "874:11:12",
															"nodeType": "YulAssignment",
															"src": "874:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:12",
																"nodeType": "YulIdentifier",
																"src": "882:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:12",
																		"nodeType": "YulLiteral",
																		"src": "902:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:12"
																},
																"nativeSrc": "895:14:12",
																"nodeType": "YulFunctionCall",
																"src": "895:14:12"
															},
															"nativeSrc": "895:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:12"
														},
														{
															"nativeSrc": "918:26:12",
															"nodeType": "YulAssignment",
															"src": "918:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:12",
																		"nodeType": "YulLiteral",
																		"src": "936:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:12",
																		"nodeType": "YulLiteral",
																		"src": "939:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:12"
																},
																"nativeSrc": "926:18:12",
																"nodeType": "YulFunctionCall",
																"src": "926:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:12",
														"nodeType": "YulTypedName",
														"src": "851:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:12",
														"nodeType": "YulTypedName",
														"src": "859:4:12",
														"type": ""
													}
												],
												"src": "810:141:12"
											},
											{
												"body": {
													"nativeSrc": "1001:49:12",
													"nodeType": "YulBlock",
													"src": "1001:49:12",
													"statements": [
														{
															"nativeSrc": "1011:33:12",
															"nodeType": "YulAssignment",
															"src": "1011:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:12"
																		},
																		"nativeSrc": "1025:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:12"
																},
																"nativeSrc": "1021:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:12",
														"nodeType": "YulTypedName",
														"src": "984:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:12",
														"nodeType": "YulTypedName",
														"src": "994:6:12",
														"type": ""
													}
												],
												"src": "957:93:12"
											},
											{
												"body": {
													"nativeSrc": "1109:54:12",
													"nodeType": "YulBlock",
													"src": "1109:54:12",
													"statements": [
														{
															"nativeSrc": "1119:37:12",
															"nodeType": "YulAssignment",
															"src": "1119:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:12"
																},
																"nativeSrc": "1140:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:12",
														"nodeType": "YulTypedName",
														"src": "1084:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:12",
														"nodeType": "YulTypedName",
														"src": "1090:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:12",
														"nodeType": "YulTypedName",
														"src": "1100:8:12",
														"type": ""
													}
												],
												"src": "1056:107:12"
											},
											{
												"body": {
													"nativeSrc": "1245:317:12",
													"nodeType": "YulBlock",
													"src": "1245:317:12",
													"statements": [
														{
															"nativeSrc": "1255:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:12"
																},
																"nativeSrc": "1272:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:12",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:12",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:12"
																},
																"nativeSrc": "1311:97:12",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:12",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:12",
															"nodeType": "YulAssignment",
															"src": "1417:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:12"
																},
																"nativeSrc": "1429:39:12",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:12"
																}
															]
														},
														{
															"nativeSrc": "1477:30:12",
															"nodeType": "YulAssignment",
															"src": "1477:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:12"
																		},
																		"nativeSrc": "1497:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:12"
																},
																"nativeSrc": "1486:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:12"
																}
															]
														},
														{
															"nativeSrc": "1516:40:12",
															"nodeType": "YulAssignment",
															"src": "1516:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:12"
																		},
																		"nativeSrc": "1536:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:12"
																},
																"nativeSrc": "1526:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:12",
														"nodeType": "YulTypedName",
														"src": "1206:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:12",
														"nodeType": "YulTypedName",
														"src": "1213:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:12",
														"nodeType": "YulTypedName",
														"src": "1225:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:12",
														"nodeType": "YulTypedName",
														"src": "1238:6:12",
														"type": ""
													}
												],
												"src": "1169:393:12"
											},
											{
												"body": {
													"nativeSrc": "1613:32:12",
													"nodeType": "YulBlock",
													"src": "1613:32:12",
													"statements": [
														{
															"nativeSrc": "1623:16:12",
															"nodeType": "YulAssignment",
															"src": "1623:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:12",
																"nodeType": "YulIdentifier",
																"src": "1634:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:12",
														"nodeType": "YulTypedName",
														"src": "1595:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:12",
														"nodeType": "YulTypedName",
														"src": "1605:7:12",
														"type": ""
													}
												],
												"src": "1568:77:12"
											},
											{
												"body": {
													"nativeSrc": "1683:28:12",
													"nodeType": "YulBlock",
													"src": "1683:28:12",
													"statements": [
														{
															"nativeSrc": "1693:12:12",
															"nodeType": "YulAssignment",
															"src": "1693:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:12",
																"nodeType": "YulIdentifier",
																"src": "1700:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:12",
														"nodeType": "YulTypedName",
														"src": "1669:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:12",
														"nodeType": "YulTypedName",
														"src": "1679:3:12",
														"type": ""
													}
												],
												"src": "1651:60:12"
											},
											{
												"body": {
													"nativeSrc": "1777:82:12",
													"nodeType": "YulBlock",
													"src": "1777:82:12",
													"statements": [
														{
															"nativeSrc": "1787:66:12",
															"nodeType": "YulAssignment",
															"src": "1787:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:12"
																				},
																				"nativeSrc": "1827:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:12"
																		},
																		"nativeSrc": "1818:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:12"
																},
																"nativeSrc": "1800:53:12",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:12",
														"nodeType": "YulTypedName",
														"src": "1757:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:12",
														"nodeType": "YulTypedName",
														"src": "1767:9:12",
														"type": ""
													}
												],
												"src": "1717:142:12"
											},
											{
												"body": {
													"nativeSrc": "1912:28:12",
													"nodeType": "YulBlock",
													"src": "1912:28:12",
													"statements": [
														{
															"nativeSrc": "1922:12:12",
															"nodeType": "YulAssignment",
															"src": "1922:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:12",
																"nodeType": "YulIdentifier",
																"src": "1929:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:12",
														"nodeType": "YulTypedName",
														"src": "1898:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:12",
														"nodeType": "YulTypedName",
														"src": "1908:3:12",
														"type": ""
													}
												],
												"src": "1865:75:12"
											},
											{
												"body": {
													"nativeSrc": "2022:193:12",
													"nodeType": "YulBlock",
													"src": "2022:193:12",
													"statements": [
														{
															"nativeSrc": "2032:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:12"
																},
																"nativeSrc": "2056:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:12",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:12"
																				},
																				"nativeSrc": "2145:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:12"
																				},
																				"nativeSrc": "2166:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:12"
																		},
																		"nativeSrc": "2117:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:12"
																},
																"nativeSrc": "2104:105:12",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:12"
															},
															"nativeSrc": "2104:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:12",
														"nodeType": "YulTypedName",
														"src": "1999:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:12",
														"nodeType": "YulTypedName",
														"src": "2005:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:12",
														"nodeType": "YulTypedName",
														"src": "2013:7:12",
														"type": ""
													}
												],
												"src": "1946:269:12"
											},
											{
												"body": {
													"nativeSrc": "2270:24:12",
													"nodeType": "YulBlock",
													"src": "2270:24:12",
													"statements": [
														{
															"nativeSrc": "2280:8:12",
															"nodeType": "YulAssignment",
															"src": "2280:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:12",
																"nodeType": "YulLiteral",
																"src": "2287:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:12",
														"nodeType": "YulTypedName",
														"src": "2266:3:12",
														"type": ""
													}
												],
												"src": "2221:73:12"
											},
											{
												"body": {
													"nativeSrc": "2353:136:12",
													"nodeType": "YulBlock",
													"src": "2353:136:12",
													"statements": [
														{
															"nativeSrc": "2363:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:12"
																},
																"nativeSrc": "2377:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:12"
																},
																"nativeSrc": "2418:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:12"
															},
															"nativeSrc": "2418:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:12",
														"nodeType": "YulTypedName",
														"src": "2339:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:12",
														"nodeType": "YulTypedName",
														"src": "2345:6:12",
														"type": ""
													}
												],
												"src": "2300:189:12"
											},
											{
												"body": {
													"nativeSrc": "2545:136:12",
													"nodeType": "YulBlock",
													"src": "2545:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:12",
																"nodeType": "YulBlock",
																"src": "2612:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:12"
																			},
																			"nativeSrc": "2626:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:12"
																		},
																		"nativeSrc": "2626:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:12"
																},
																"nativeSrc": "2562:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:12"
															},
															"nativeSrc": "2555:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:12",
																"nodeType": "YulBlock",
																"src": "2577:26:12",
																"statements": [
																	{
																		"nativeSrc": "2579:22:12",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:12"
																			},
																			"nativeSrc": "2588:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:12",
																"nodeType": "YulBlock",
																"src": "2559:2:12",
																"statements": []
															},
															"src": "2555:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:12",
														"nodeType": "YulTypedName",
														"src": "2533:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:12",
														"nodeType": "YulTypedName",
														"src": "2540:3:12",
														"type": ""
													}
												],
												"src": "2495:186:12"
											},
											{
												"body": {
													"nativeSrc": "2766:464:12",
													"nodeType": "YulBlock",
													"src": "2766:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:12",
																"nodeType": "YulBlock",
																"src": "2792:431:12",
																"statements": [
																	{
																		"nativeSrc": "2806:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:12"
																			},
																			"nativeSrc": "2822:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:12",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:12"
																					},
																					"nativeSrc": "2906:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:12"
																			},
																			"nativeSrc": "2892:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:12",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:12",
																			"nodeType": "YulBlock",
																			"src": "3093:27:12",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:12",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:12",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:12"
																			},
																			"nativeSrc": "3074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:12"
																		},
																		"nativeSrc": "3071:49:12",
																		"nodeType": "YulIf",
																		"src": "3071:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:12"
																							},
																							"nativeSrc": "3189:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:12"
																					},
																					"nativeSrc": "3175:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:12"
																			},
																			"nativeSrc": "3133:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:12"
																		},
																		"nativeSrc": "3133:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:12"
																},
																"nativeSrc": "2780:11:12",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:12"
															},
															"nativeSrc": "2777:446:12",
															"nodeType": "YulIf",
															"src": "2777:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:12",
														"nodeType": "YulTypedName",
														"src": "2742:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:12",
														"nodeType": "YulTypedName",
														"src": "2749:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:12",
														"nodeType": "YulTypedName",
														"src": "2754:10:12",
														"type": ""
													}
												],
												"src": "2687:543:12"
											},
											{
												"body": {
													"nativeSrc": "3299:54:12",
													"nodeType": "YulBlock",
													"src": "3299:54:12",
													"statements": [
														{
															"nativeSrc": "3309:37:12",
															"nodeType": "YulAssignment",
															"src": "3309:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:12"
																},
																"nativeSrc": "3330:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:12",
														"nodeType": "YulTypedName",
														"src": "3274:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:12",
														"nodeType": "YulTypedName",
														"src": "3280:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:12",
														"nodeType": "YulTypedName",
														"src": "3290:8:12",
														"type": ""
													}
												],
												"src": "3236:117:12"
											},
											{
												"body": {
													"nativeSrc": "3410:118:12",
													"nodeType": "YulBlock",
													"src": "3410:118:12",
													"statements": [
														{
															"nativeSrc": "3420:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:12"
																				},
																				"nativeSrc": "3465:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:12"
																				},
																				"nativeSrc": "3480:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:12"
																		},
																		"nativeSrc": "3436:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:12"
																},
																"nativeSrc": "3432:56:12",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:12",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:12",
															"nodeType": "YulAssignment",
															"src": "3497:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:12"
																},
																"nativeSrc": "3507:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:12",
														"nodeType": "YulTypedName",
														"src": "3387:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:12",
														"nodeType": "YulTypedName",
														"src": "3393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:12",
														"nodeType": "YulTypedName",
														"src": "3403:6:12",
														"type": ""
													}
												],
												"src": "3359:169:12"
											},
											{
												"body": {
													"nativeSrc": "3614:214:12",
													"nodeType": "YulBlock",
													"src": "3614:214:12",
													"statements": [
														{
															"nativeSrc": "3747:37:12",
															"nodeType": "YulAssignment",
															"src": "3747:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:12"
																},
																"nativeSrc": "3755:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:12"
																}
															]
														},
														{
															"nativeSrc": "3793:29:12",
															"nodeType": "YulAssignment",
															"src": "3793:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:12"
																		},
																		"nativeSrc": "3810:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:12"
																},
																"nativeSrc": "3801:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:12",
														"nodeType": "YulTypedName",
														"src": "3595:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:12",
														"nodeType": "YulTypedName",
														"src": "3601:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:12",
														"nodeType": "YulTypedName",
														"src": "3609:4:12",
														"type": ""
													}
												],
												"src": "3533:295:12"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:12",
													"nodeType": "YulBlock",
													"src": "3925:1303:12",
													"statements": [
														{
															"nativeSrc": "3936:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:12"
																},
																"nativeSrc": "3950:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:12",
																"nodeType": "YulBlock",
																"src": "4072:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:12"
																			},
																			"nativeSrc": "4074:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:12"
																		},
																		"nativeSrc": "4074:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:12",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:12"
																},
																"nativeSrc": "4041:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:12"
															},
															"nativeSrc": "4038:56:12",
															"nodeType": "YulIf",
															"src": "4038:56:12"
														},
														{
															"nativeSrc": "4104:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:12"
																		},
																		"nativeSrc": "4144:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:12"
																},
																"nativeSrc": "4118:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:12"
																},
																"nativeSrc": "4203:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:12"
															},
															"nativeSrc": "4203:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:12"
														},
														{
															"nativeSrc": "4280:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:12",
																"nodeType": "YulLiteral",
																"src": "4297:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:12",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:12",
															"nodeType": "YulAssignment",
															"src": "4308:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:12",
																"nodeType": "YulLiteral",
																"src": "4321:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:12",
																		"nodeType": "YulBlock",
																		"src": "4372:611:12",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:12",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:12"
																							},
																							"nativeSrc": "4413:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:12"
																					},
																					"nativeSrc": "4401:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:12",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:12"
																					},
																					"nativeSrc": "4451:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:12",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:12",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:12",
																					"nodeType": "YulBlock",
																					"src": "4569:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:12"
																												},
																												"nativeSrc": "4608:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:12"
																										},
																										"nativeSrc": "4602:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:12"
																								},
																								"nativeSrc": "4587:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:12"
																							},
																							"nativeSrc": "4587:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:12"
																						},
																						{
																							"nativeSrc": "4646:24:12",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:12",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:12"
																								},
																								"nativeSrc": "4656:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:12",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:12",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:12"
																								},
																								"nativeSrc": "4700:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:12"
																					},
																					"nativeSrc": "4532:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:12"
																				},
																				"nativeSrc": "4524:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:12",
																					"nodeType": "YulBlock",
																					"src": "4547:21:12",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:12",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:12",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:12"
																								},
																								"nativeSrc": "4554:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:12",
																					"nodeType": "YulBlock",
																					"src": "4528:3:12",
																					"statements": []
																				},
																				"src": "4524:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:12",
																					"nodeType": "YulBlock",
																					"src": "4768:156:12",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:12"
																										},
																										"nativeSrc": "4809:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:12"
																								},
																								"nativeSrc": "4803:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:12",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:12",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:12"
																												},
																												"nativeSrc": "4891:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:12"
																										},
																										"nativeSrc": "4861:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:12"
																								},
																								"nativeSrc": "4846:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:12"
																							},
																							"nativeSrc": "4846:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:12"
																					},
																					"nativeSrc": "4748:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:12"
																				},
																				"nativeSrc": "4745:179:12",
																				"nodeType": "YulIf",
																				"src": "4745:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:12",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:12"
																									},
																									"nativeSrc": "4954:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:12",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:12"
																							},
																							"nativeSrc": "4950:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:12"
																					},
																					"nativeSrc": "4937:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:12"
																				},
																				"nativeSrc": "4937:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:12"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:12",
																	"nodeType": "YulCase",
																	"src": "4365:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:12",
																		"nodeType": "YulBlock",
																		"src": "5000:222:12",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:12",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:12",
																					"nodeType": "YulBlock",
																					"src": "5051:67:12",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:12",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:12"
																										},
																										"nativeSrc": "5084:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:12"
																								},
																								"nativeSrc": "5078:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:12"
																				},
																				"nativeSrc": "5041:77:12",
																				"nodeType": "YulIf",
																				"src": "5041:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:12"
																							},
																							"nativeSrc": "5144:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:12"
																					},
																					"nativeSrc": "5131:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:12"
																				},
																				"nativeSrc": "5131:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:12"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:12",
																	"nodeType": "YulCase",
																	"src": "4992:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:12"
																},
																"nativeSrc": "4342:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:12"
															},
															"nativeSrc": "4335:887:12",
															"nodeType": "YulSwitch",
															"src": "4335:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:12",
														"nodeType": "YulTypedName",
														"src": "3914:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:12",
														"nodeType": "YulTypedName",
														"src": "3920:3:12",
														"type": ""
													}
												],
												"src": "3833:1395:12"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526001600955348015610014575f80fd5b506040518060400160405280600881526020017f4861696b754e46540000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f4841494b55000000000000000000000000000000000000000000000000000000815250815f908161008f91906102e1565b50806001908161009f91906102e1565b5050506103b0565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061012257607f821691505b602082108103610135576101346100de565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261015c565b6101a1868361015c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101e56101e06101db846101b9565b6101c2565b6101b9565b9050919050565b5f819050919050565b6101fe836101cb565b61021261020a826101ec565b848454610168565b825550505050565b5f90565b61022661021a565b6102318184846101f5565b505050565b5b81811015610254576102495f8261021e565b600181019050610237565b5050565b601f8211156102995761026a8161013b565b6102738461014d565b81016020851015610282578190505b61029661028e8561014d565b830182610236565b50505b505050565b5f82821c905092915050565b5f6102b95f198460080261029e565b1980831691505092915050565b5f6102d183836102aa565b9150826002028217905092915050565b6102ea826100a7565b67ffffffffffffffff811115610303576103026100b1565b5b61030d825461010b565b610318828285610258565b5f60209050601f831160018114610349575f8415610337578287015190505b61034185826102c6565b8655506103a8565b601f1984166103578661013b565b5f5b8281101561037e57848901518255600182019150602085019450602081019050610359565b8683101561039b5784890151610397601f8916826102aa565b8355505b6001600288020188555050505b505050505050565b612e6c806103bd5f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c806361bc221a116100ab57806397afe82d1161006f57806397afe82d1461031a578063a22cb4651461034a578063b88d4fde14610366578063c87b56dd14610382578063e985e9c5146103b25761011f565b806361bc221a1461024b5780636352211e1461026957806370a08231146102995780637cb82b2a146102c957806395d89b41146102fc5761011f565b8063095ea7b3116100f2578063095ea7b3146101bd57806323b872dd146101d9578063350fe165146101f557806342842e0e1461021157806349af5bfe1461022d5761011f565b806301ffc9a71461012357806306fdde0314610153578063081812fc146101715780630884d540146101a1575b5f80fd5b61013d60048036038101906101389190612052565b6103e2565b60405161014a9190612097565b60405180910390f35b61015b6104c3565b6040516101689190612120565b60405180910390f35b61018b60048036038101906101869190612173565b610552565b60405161019891906121dd565b60405180910390f35b6101bb60048036038101906101b69190612220565b61056d565b005b6101d760048036038101906101d29190612220565b610683565b005b6101f360048036038101906101ee919061225e565b610699565b005b61020f600480360381019061020a91906123da565b610798565b005b61022b6004803603810190610226919061225e565b610a55565b005b610235610a74565b60405161024291906125fe565b60405180910390f35b610253610e0e565b604051610260919061262d565b60405180910390f35b610283600480360381019061027e9190612173565b610e14565b60405161029091906121dd565b60405180910390f35b6102b360048036038101906102ae9190612646565b610e25565b6040516102c0919061262d565b60405180910390f35b6102e360048036038101906102de9190612173565b610edb565b6040516102f39493929190612671565b60405180910390f35b6103046110c7565b6040516103119190612120565b60405180910390f35b610334600480360381019061032f9190612220565b611157565b604051610341919061262d565b60405180910390f35b610364600480360381019061035f91906126f3565b611182565b005b610380600480360381019061037b91906127cf565b611198565b005b61039c60048036038101906103979190612173565b6111b5565b6040516103a99190612120565b60405180910390f35b6103cc60048036038101906103c7919061284f565b61121b565b6040516103d99190612097565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104ac57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104bc57506104bb826112a9565b5b9050919050565b60605f80546104d1906128ba565b80601f01602080910402602001604051908101604052809291908181526020018280546104fd906128ba565b80156105485780601f1061051f57610100808354040283529160200191610548565b820191905f5260205f20905b81548152906001019060200180831161052b57829003601f168201915b5050505050905090565b5f61055c82611312565b5061056682611398565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff1660068281548110610598576105976128ea565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461061e57806040517f03ce4e32000000000000000000000000000000000000000000000000000000008152600401610615919061262d565b60405180910390fd5b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f20015f90919091909150555050565b61069582826106906113d1565b6113d8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610709575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161070091906121dd565b60405180910390fd5b5f61071c83836107176113d1565b6113ea565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610792578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161078993929190612917565b60405180910390fd5b50505050565b600b60095411156107de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d590612996565b60405180910390fd5b6008836040516107ee91906129ee565b90815260200160405180910390205f9054906101000a900460ff168061083b575060088260405161081f91906129ee565b90815260200160405180910390205f9054906101000a900460ff165b8061086d575060088160405161085191906129ee565b90815260200160405180910390205f9054906101000a900460ff165b156108a4576040517f693a889e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016008846040516108b691906129ee565b90815260200160405180910390205f6101000a81548160ff02191690831515021790555060016008836040516108ec91906129ee565b90815260200160405180910390205f6101000a81548160ff021916908315150217905550600160088260405161092291906129ee565b90815260200160405180910390205f6101000a81548160ff021916908315150217905550600660405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816109fe9190612ba1565b506040820151816002019081610a149190612ba1565b506060820151816003019081610a2a9190612ba1565b505050610a39336009546115f5565b60095f815480929190610a4b90612c9d565b9190505550505050565b610a6f83838360405180602001604052805f815250611198565b505050565b60605f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905090505f8103610af3576040517ff8826a6900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8167ffffffffffffffff811115610b0e57610b0d6122b6565b5b604051908082528060200260200182016040528015610b4757816020015b610b34611faf565b815260200190600190039081610b2c5790505b5090505f5b82811015610e0557600660075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610ba557610ba46128ea565b5b905f5260205f20015481548110610bbf57610bbe6128ea565b5b905f5260205f2090600402016040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610c3a906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610c66906128ba565b8015610cb15780601f10610c8857610100808354040283529160200191610cb1565b820191905f5260205f20905b815481529060010190602001808311610c9457829003601f168201915b50505050508152602001600282018054610cca906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf6906128ba565b8015610d415780601f10610d1857610100808354040283529160200191610d41565b820191905f5260205f20905b815481529060010190602001808311610d2457829003601f168201915b50505050508152602001600382018054610d5a906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610d86906128ba565b8015610dd15780601f10610da857610100808354040283529160200191610dd1565b820191905f5260205f20905b815481529060010190602001808311610db457829003601f168201915b505050505081525050828281518110610ded57610dec6128ea565b5b60200260200101819052508080600101915050610b4c565b50809250505090565b60095481565b5f610e1e82611312565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e96575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610e8d91906121dd565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60068181548110610eea575f80fd5b905f5260205f2090600402015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610f2e906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610f5a906128ba565b8015610fa55780601f10610f7c57610100808354040283529160200191610fa5565b820191905f5260205f20905b815481529060010190602001808311610f8857829003601f168201915b505050505090806002018054610fba906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610fe6906128ba565b80156110315780601f1061100857610100808354040283529160200191611031565b820191905f5260205f20905b81548152906001019060200180831161101457829003601f168201915b505050505090806003018054611046906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054611072906128ba565b80156110bd5780601f10611094576101008083540402835291602001916110bd565b820191905f5260205f20905b8154815290600101906020018083116110a057829003601f168201915b5050505050905084565b6060600180546110d6906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054611102906128ba565b801561114d5780601f106111245761010080835404028352916020019161114d565b820191905f5260205f20905b81548152906001019060200180831161113057829003601f168201915b5050505050905090565b6007602052815f5260405f208181548110611170575f80fd5b905f5260205f20015f91509150505481565b61119461118d6113d1565b83836116e8565b5050565b6111a3848484610699565b6111af84848484611851565b50505050565b60606111c082611312565b505f6111ca611a03565b90505f8151116111e85760405180602001604052805f815250611213565b806111f284611a19565b604051602001611203929190612ce4565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061131d83611ae3565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361138f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611386919061262d565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6113e58383836001611b1c565b505050565b5f806113f584611ae3565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461143657611435818486611cdb565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114c1576114755f855f80611b1c565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461154057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611665575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161165c91906121dd565b60405180910390fd5b5f61167183835f6113ea565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116e3575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016116da91906121dd565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361175857816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161174f91906121dd565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516118449190612097565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156119fd578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026118946113d1565b8685856040518563ffffffff1660e01b81526004016118b69493929190612d59565b6020604051808303815f875af19250505080156118f157506040513d601f19601f820116820180604052508101906118ee9190612db7565b60015b611972573d805f811461191f576040519150601f19603f3d011682016040523d82523d5f602084013e611924565b606091505b505f81510361196a57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161196191906121dd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146119fb57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119f291906121dd565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f6001611a2784611d9e565b0190505f8167ffffffffffffffff811115611a4557611a446122b6565b5b6040519080825280601f01601f191660200182016040528015611a775781602001600182028036833780820191505090505b5090505f82602001820190505b600115611ad8578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611acd57611acc612de2565b5b0494505f8503611a84575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611b5457505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611c86575f611b6384611312565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bcd57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611be05750611bde818461121b565b155b15611c2257826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611c1991906121dd565b60405180910390fd5b8115611c8457838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611ce6838383611eef565b611d99575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d5a57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611d51919061262d565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611d90929190612e0f565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611dfa577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611df057611def612de2565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611e37576d04ee2d6d415b85acef81000000008381611e2d57611e2c612de2565b5b0492506020810190505b662386f26fc100008310611e6657662386f26fc100008381611e5c57611e5b612de2565b5b0492506010810190505b6305f5e1008310611e8f576305f5e1008381611e8557611e84612de2565b5b0492506008810190505b6127108310611eb4576127108381611eaa57611ea9612de2565b5b0492506004810190505b60648310611ed75760648381611ecd57611ecc612de2565b5b0492506002810190505b600a8310611ee6576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611fa657508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611f675750611f66848461121b565b5b80611fa557508273ffffffffffffffffffffffffffffffffffffffff16611f8d83611398565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b60405180608001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081525090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61203181611ffd565b811461203b575f80fd5b50565b5f8135905061204c81612028565b92915050565b5f6020828403121561206757612066611ff5565b5b5f6120748482850161203e565b91505092915050565b5f8115159050919050565b6120918161207d565b82525050565b5f6020820190506120aa5f830184612088565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6120f2826120b0565b6120fc81856120ba565b935061210c8185602086016120ca565b612115816120d8565b840191505092915050565b5f6020820190508181035f83015261213881846120e8565b905092915050565b5f819050919050565b61215281612140565b811461215c575f80fd5b50565b5f8135905061216d81612149565b92915050565b5f6020828403121561218857612187611ff5565b5b5f6121958482850161215f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6121c78261219e565b9050919050565b6121d7816121bd565b82525050565b5f6020820190506121f05f8301846121ce565b92915050565b6121ff816121bd565b8114612209575f80fd5b50565b5f8135905061221a816121f6565b92915050565b5f806040838503121561223657612235611ff5565b5b5f6122438582860161220c565b92505060206122548582860161215f565b9150509250929050565b5f805f6060848603121561227557612274611ff5565b5b5f6122828682870161220c565b93505060206122938682870161220c565b92505060406122a48682870161215f565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6122ec826120d8565b810181811067ffffffffffffffff8211171561230b5761230a6122b6565b5b80604052505050565b5f61231d611fec565b905061232982826122e3565b919050565b5f67ffffffffffffffff821115612348576123476122b6565b5b612351826120d8565b9050602081019050919050565b828183375f83830152505050565b5f61237e6123798461232e565b612314565b90508281526020810184848401111561239a576123996122b2565b5b6123a584828561235e565b509392505050565b5f82601f8301126123c1576123c06122ae565b5b81356123d184826020860161236c565b91505092915050565b5f805f606084860312156123f1576123f0611ff5565b5b5f84013567ffffffffffffffff81111561240e5761240d611ff9565b5b61241a868287016123ad565b935050602084013567ffffffffffffffff81111561243b5761243a611ff9565b5b612447868287016123ad565b925050604084013567ffffffffffffffff81111561246857612467611ff9565b5b612474868287016123ad565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6124b0816121bd565b82525050565b5f82825260208201905092915050565b5f6124d0826120b0565b6124da81856124b6565b93506124ea8185602086016120ca565b6124f3816120d8565b840191505092915050565b5f608083015f8301516125135f8601826124a7565b506020830151848203602086015261252b82826124c6565b9150506040830151848203604086015261254582826124c6565b9150506060830151848203606086015261255f82826124c6565b9150508091505092915050565b5f61257783836124fe565b905092915050565b5f602082019050919050565b5f6125958261247e565b61259f8185612488565b9350836020820285016125b185612498565b805f5b858110156125ec57848403895281516125cd858261256c565b94506125d88361257f565b925060208a019950506001810190506125b4565b50829750879550505050505092915050565b5f6020820190508181035f830152612616818461258b565b905092915050565b61262781612140565b82525050565b5f6020820190506126405f83018461261e565b92915050565b5f6020828403121561265b5761265a611ff5565b5b5f6126688482850161220c565b91505092915050565b5f6080820190506126845f8301876121ce565b818103602083015261269681866120e8565b905081810360408301526126aa81856120e8565b905081810360608301526126be81846120e8565b905095945050505050565b6126d28161207d565b81146126dc575f80fd5b50565b5f813590506126ed816126c9565b92915050565b5f806040838503121561270957612708611ff5565b5b5f6127168582860161220c565b9250506020612727858286016126df565b9150509250929050565b5f67ffffffffffffffff82111561274b5761274a6122b6565b5b612754826120d8565b9050602081019050919050565b5f61277361276e84612731565b612314565b90508281526020810184848401111561278f5761278e6122b2565b5b61279a84828561235e565b509392505050565b5f82601f8301126127b6576127b56122ae565b5b81356127c6848260208601612761565b91505092915050565b5f805f80608085870312156127e7576127e6611ff5565b5b5f6127f48782880161220c565b94505060206128058782880161220c565b93505060406128168782880161215f565b925050606085013567ffffffffffffffff81111561283757612836611ff9565b5b612843878288016127a2565b91505092959194509250565b5f806040838503121561286557612864611ff5565b5b5f6128728582860161220c565b92505060206128838582860161220c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806128d157607f821691505b6020821081036128e4576128e361288d565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60608201905061292a5f8301866121ce565b612937602083018561261e565b61294460408301846121ce565b949350505050565b7f4e6f206d6f7265206861696b75730000000000000000000000000000000000005f82015250565b5f612980600e836120ba565b915061298b8261294c565b602082019050919050565b5f6020820190508181035f8301526129ad81612974565b9050919050565b5f81905092915050565b5f6129c8826120b0565b6129d281856129b4565b93506129e28185602086016120ca565b80840191505092915050565b5f6129f982846129be565b915081905092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612a607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a25565b612a6a8683612a25565b95508019841693508086168417925050509392505050565b5f819050919050565b5f612aa5612aa0612a9b84612140565b612a82565b612140565b9050919050565b5f819050919050565b612abe83612a8b565b612ad2612aca82612aac565b848454612a31565b825550505050565b5f90565b612ae6612ada565b612af1818484612ab5565b505050565b5b81811015612b1457612b095f82612ade565b600181019050612af7565b5050565b601f821115612b5957612b2a81612a04565b612b3384612a16565b81016020851015612b42578190505b612b56612b4e85612a16565b830182612af6565b50505b505050565b5f82821c905092915050565b5f612b795f1984600802612b5e565b1980831691505092915050565b5f612b918383612b6a565b9150826002028217905092915050565b612baa826120b0565b67ffffffffffffffff811115612bc357612bc26122b6565b5b612bcd82546128ba565b612bd8828285612b18565b5f60209050601f831160018114612c09575f8415612bf7578287015190505b612c018582612b86565b865550612c68565b601f198416612c1786612a04565b5f5b82811015612c3e57848901518255600182019150602085019450602081019050612c19565b86831015612c5b5784890151612c57601f891682612b6a565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612ca782612140565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612cd957612cd8612c70565b5b600182019050919050565b5f612cef82856129be565b9150612cfb82846129be565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f612d2b82612d07565b612d358185612d11565b9350612d458185602086016120ca565b612d4e816120d8565b840191505092915050565b5f608082019050612d6c5f8301876121ce565b612d7960208301866121ce565b612d86604083018561261e565b8181036060830152612d988184612d21565b905095945050505050565b5f81519050612db181612028565b92915050565b5f60208284031215612dcc57612dcb611ff5565b5b5f612dd984828501612da3565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f604082019050612e225f8301856121ce565b612e2f602083018461261e565b939250505056fea26469706673582212202b407af1abc77e84d594a145cdc772f26c52d80a2034e6147883b65791c5cea364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4861696B754E4654000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4841494B55000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST POP POP POP PUSH2 0x3B0 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x122 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x135 JUMPI PUSH2 0x134 PUSH2 0xDE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x197 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1A1 DUP7 DUP4 PUSH2 0x15C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5 PUSH2 0x1E0 PUSH2 0x1DB DUP5 PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE DUP4 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x212 PUSH2 0x20A DUP3 PUSH2 0x1EC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x168 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x21A JUMP JUMPDEST PUSH2 0x231 DUP2 DUP5 DUP5 PUSH2 0x1F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH2 0x249 PUSH0 DUP3 PUSH2 0x21E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x237 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x299 JUMPI PUSH2 0x26A DUP2 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x273 DUP5 PUSH2 0x14D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x282 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x296 PUSH2 0x28E DUP6 PUSH2 0x14D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x236 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x29E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D1 DUP4 DUP4 PUSH2 0x2AA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EA DUP3 PUSH2 0xA7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0xB1 JUMP JUMPDEST JUMPDEST PUSH2 0x30D DUP3 SLOAD PUSH2 0x10B JUMP JUMPDEST PUSH2 0x318 DUP3 DUP3 DUP6 PUSH2 0x258 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x349 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x337 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x341 DUP6 DUP3 PUSH2 0x2C6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x357 DUP7 PUSH2 0x13B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x37E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x359 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x39B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x397 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2AA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2E6C DUP1 PUSH2 0x3BD PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61BC221A GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x97AFE82D GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x97AFE82D EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3B2 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x61BC221A EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x7CB82B2A EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FC JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x350FE165 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x49AF5BFE EQ PUSH2 0x22D JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x884D540 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x23DA JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH2 0xA55 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x25FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x2646 JUMP JUMPDEST PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x1182 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x1198 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x284F JUMP JUMPDEST PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4AC JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4BC JUMPI POP PUSH2 0x4BB DUP3 PUSH2 0x12A9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4D1 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FD SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x548 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x548 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x55C DUP3 PUSH2 0x1312 JUMP JUMPDEST POP PUSH2 0x566 DUP3 PUSH2 0x1398 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x28EA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x61E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x3CE4E3200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP POP JUMP JUMPDEST PUSH2 0x695 DUP3 DUP3 PUSH2 0x690 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x13D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x709 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x71C DUP4 DUP4 PUSH2 0x717 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x13EA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x792 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x789 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x9 SLOAD GT ISZERO PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D5 SWAP1 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7EE SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x83B JUMPI POP PUSH1 0x8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x86D JUMPI POP PUSH1 0x8 DUP2 PUSH1 0x40 MLOAD PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x693A889E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x922 SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xA14 SWAP2 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0xA2A SWAP2 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST POP POP POP PUSH2 0xA39 CALLER PUSH1 0x9 SLOAD PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA4B SWAP1 PUSH2 0x2C9D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xA6F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1198 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8826A6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0D PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB47 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xB34 PUSH2 0x1FAF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB2C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE05 JUMPI PUSH1 0x6 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBA5 JUMPI PUSH2 0xBA4 PUSH2 0x28EA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xBBF JUMPI PUSH2 0xBBE PUSH2 0x28EA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xC3A SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC66 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCB1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC88 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCB1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC94 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xCCA SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCF6 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD41 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD18 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD41 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD24 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xD5A SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD86 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDA8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDED JUMPI PUSH2 0xDEC PUSH2 0x28EA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xB4C JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xE1E DUP3 PUSH2 0x1312 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE96 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8D SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEEA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xF2E SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF5A SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFA5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF7C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFA5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF88 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xFBA SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFE6 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1031 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1008 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1031 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1014 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1046 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1072 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1094 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x10D6 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1102 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x114D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1124 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x114D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1130 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1170 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1194 PUSH2 0x118D PUSH2 0x13D1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x16E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11A3 DUP5 DUP5 DUP5 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x11AF DUP5 DUP5 DUP5 DUP5 PUSH2 0x1851 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11C0 DUP3 PUSH2 0x1312 JUMP JUMPDEST POP PUSH0 PUSH2 0x11CA PUSH2 0x1A03 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x11E8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1213 JUMP JUMPDEST DUP1 PUSH2 0x11F2 DUP5 PUSH2 0x1A19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1203 SWAP3 SWAP2 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x131D DUP4 PUSH2 0x1AE3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x138F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1386 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13E5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13F5 DUP5 PUSH2 0x1AE3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1436 JUMPI PUSH2 0x1435 DUP2 DUP5 DUP7 PUSH2 0x1CDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C1 JUMPI PUSH2 0x1475 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1540 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1665 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165C SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1671 DUP4 DUP4 PUSH0 PUSH2 0x13EA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DA SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1758 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174F SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1844 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x19FD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1894 PUSH2 0x13D1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18F1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18EE SWAP2 SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1972 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x191F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x196A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1961 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x19FB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F2 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1A27 DUP5 PUSH2 0x1D9E JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A45 JUMPI PUSH2 0x1A44 PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A77 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1AD8 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1ACD JUMPI PUSH2 0x1ACC PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1A84 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1B54 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1C86 JUMPI PUSH0 PUSH2 0x1B63 DUP5 PUSH2 0x1312 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BCD JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1BE0 JUMPI POP PUSH2 0x1BDE DUP2 DUP5 PUSH2 0x121B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1C22 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C19 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1C84 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1CE6 DUP4 DUP4 DUP4 PUSH2 0x1EEF JUMP JUMPDEST PUSH2 0x1D99 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D5A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D51 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D90 SWAP3 SWAP2 SWAP1 PUSH2 0x2E0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1DFA JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1DF0 JUMPI PUSH2 0x1DEF PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1E37 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1E2D JUMPI PUSH2 0x1E2C PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1E66 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1E5C JUMPI PUSH2 0x1E5B PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1E8F JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1E85 JUMPI PUSH2 0x1E84 PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1EB4 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1EAA JUMPI PUSH2 0x1EA9 PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1ED7 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1ECD JUMPI PUSH2 0x1ECC PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1EE6 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1FA6 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1F67 JUMPI POP PUSH2 0x1F66 DUP5 DUP5 PUSH2 0x121B JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1FA5 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F8D DUP4 PUSH2 0x1398 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2031 DUP2 PUSH2 0x1FFD JUMP JUMPDEST DUP2 EQ PUSH2 0x203B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x204C DUP2 PUSH2 0x2028 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2067 JUMPI PUSH2 0x2066 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2074 DUP5 DUP3 DUP6 ADD PUSH2 0x203E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2091 DUP2 PUSH2 0x207D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20AA PUSH0 DUP4 ADD DUP5 PUSH2 0x2088 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20F2 DUP3 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x20FC DUP2 DUP6 PUSH2 0x20BA JUMP JUMPDEST SWAP4 POP PUSH2 0x210C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x2115 DUP2 PUSH2 0x20D8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2138 DUP2 DUP5 PUSH2 0x20E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2152 DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP2 EQ PUSH2 0x215C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x216D DUP2 PUSH2 0x2149 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2188 JUMPI PUSH2 0x2187 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2195 DUP5 DUP3 DUP6 ADD PUSH2 0x215F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21C7 DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D7 DUP2 PUSH2 0x21BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x21CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21FF DUP2 PUSH2 0x21BD JUMP JUMPDEST DUP2 EQ PUSH2 0x2209 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x221A DUP2 PUSH2 0x21F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2236 JUMPI PUSH2 0x2235 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2243 DUP6 DUP3 DUP7 ADD PUSH2 0x220C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2254 DUP6 DUP3 DUP7 ADD PUSH2 0x215F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2275 JUMPI PUSH2 0x2274 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2282 DUP7 DUP3 DUP8 ADD PUSH2 0x220C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2293 DUP7 DUP3 DUP8 ADD PUSH2 0x220C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22A4 DUP7 DUP3 DUP8 ADD PUSH2 0x215F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x22EC DUP3 PUSH2 0x20D8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x230B JUMPI PUSH2 0x230A PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x231D PUSH2 0x1FEC JUMP JUMPDEST SWAP1 POP PUSH2 0x2329 DUP3 DUP3 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2348 JUMPI PUSH2 0x2347 PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST PUSH2 0x2351 DUP3 PUSH2 0x20D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x237E PUSH2 0x2379 DUP5 PUSH2 0x232E JUMP JUMPDEST PUSH2 0x2314 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x239A JUMPI PUSH2 0x2399 PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST PUSH2 0x23A5 DUP5 DUP3 DUP6 PUSH2 0x235E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23C1 JUMPI PUSH2 0x23C0 PUSH2 0x22AE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23D1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x236C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23F1 JUMPI PUSH2 0x23F0 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x240E JUMPI PUSH2 0x240D PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH2 0x241A DUP7 DUP3 DUP8 ADD PUSH2 0x23AD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x243B JUMPI PUSH2 0x243A PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH2 0x2447 DUP7 DUP3 DUP8 ADD PUSH2 0x23AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH2 0x2474 DUP7 DUP3 DUP8 ADD PUSH2 0x23AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B0 DUP2 PUSH2 0x21BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24D0 DUP3 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x24DA DUP2 DUP6 PUSH2 0x24B6 JUMP JUMPDEST SWAP4 POP PUSH2 0x24EA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x24F3 DUP2 PUSH2 0x20D8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x2513 PUSH0 DUP7 ADD DUP3 PUSH2 0x24A7 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x252B DUP3 DUP3 PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2545 DUP3 DUP3 PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x255F DUP3 DUP3 PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2577 DUP4 DUP4 PUSH2 0x24FE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2595 DUP3 PUSH2 0x247E JUMP JUMPDEST PUSH2 0x259F DUP2 DUP6 PUSH2 0x2488 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x25B1 DUP6 PUSH2 0x2498 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x25EC JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x25CD DUP6 DUP3 PUSH2 0x256C JUMP JUMPDEST SWAP5 POP PUSH2 0x25D8 DUP4 PUSH2 0x257F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25B4 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2616 DUP2 DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2627 DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2640 PUSH0 DUP4 ADD DUP5 PUSH2 0x261E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x265B JUMPI PUSH2 0x265A PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2668 DUP5 DUP3 DUP6 ADD PUSH2 0x220C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2684 PUSH0 DUP4 ADD DUP8 PUSH2 0x21CE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2696 DUP2 DUP7 PUSH2 0x20E8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x26AA DUP2 DUP6 PUSH2 0x20E8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x26BE DUP2 DUP5 PUSH2 0x20E8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x26D2 DUP2 PUSH2 0x207D JUMP JUMPDEST DUP2 EQ PUSH2 0x26DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26ED DUP2 PUSH2 0x26C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2709 JUMPI PUSH2 0x2708 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2716 DUP6 DUP3 DUP7 ADD PUSH2 0x220C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2727 DUP6 DUP3 DUP7 ADD PUSH2 0x26DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x274B JUMPI PUSH2 0x274A PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST PUSH2 0x2754 DUP3 PUSH2 0x20D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2773 PUSH2 0x276E DUP5 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0x2314 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x278F JUMPI PUSH2 0x278E PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST PUSH2 0x279A DUP5 DUP3 DUP6 PUSH2 0x235E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27B6 JUMPI PUSH2 0x27B5 PUSH2 0x22AE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27C6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2761 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27E7 JUMPI PUSH2 0x27E6 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27F4 DUP8 DUP3 DUP9 ADD PUSH2 0x220C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2805 DUP8 DUP3 DUP9 ADD PUSH2 0x220C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2816 DUP8 DUP3 DUP9 ADD PUSH2 0x215F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2837 JUMPI PUSH2 0x2836 PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH2 0x2843 DUP8 DUP3 DUP9 ADD PUSH2 0x27A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2865 JUMPI PUSH2 0x2864 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2872 DUP6 DUP3 DUP7 ADD PUSH2 0x220C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2883 DUP6 DUP3 DUP7 ADD PUSH2 0x220C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x28D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x28E4 JUMPI PUSH2 0x28E3 PUSH2 0x288D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x292A PUSH0 DUP4 ADD DUP7 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x2937 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x261E JUMP JUMPDEST PUSH2 0x2944 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x21CE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F206D6F7265206861696B7573000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2980 PUSH1 0xE DUP4 PUSH2 0x20BA JUMP JUMPDEST SWAP2 POP PUSH2 0x298B DUP3 PUSH2 0x294C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29AD DUP2 PUSH2 0x2974 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29C8 DUP3 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x29D2 DUP2 DUP6 PUSH2 0x29B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x29E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20CA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29F9 DUP3 DUP5 PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2A60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A25 JUMP JUMPDEST PUSH2 0x2A6A DUP7 DUP4 PUSH2 0x2A25 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AA5 PUSH2 0x2AA0 PUSH2 0x2A9B DUP5 PUSH2 0x2140 JUMP JUMPDEST PUSH2 0x2A82 JUMP JUMPDEST PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2ABE DUP4 PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0x2AD2 PUSH2 0x2ACA DUP3 PUSH2 0x2AAC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A31 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2AE6 PUSH2 0x2ADA JUMP JUMPDEST PUSH2 0x2AF1 DUP2 DUP5 DUP5 PUSH2 0x2AB5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B14 JUMPI PUSH2 0x2B09 PUSH0 DUP3 PUSH2 0x2ADE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2AF7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2B59 JUMPI PUSH2 0x2B2A DUP2 PUSH2 0x2A04 JUMP JUMPDEST PUSH2 0x2B33 DUP5 PUSH2 0x2A16 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2B42 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2B56 PUSH2 0x2B4E DUP6 PUSH2 0x2A16 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2AF6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B79 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2B5E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B91 DUP4 DUP4 PUSH2 0x2B6A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BAA DUP3 PUSH2 0x20B0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BC3 JUMPI PUSH2 0x2BC2 PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST PUSH2 0x2BCD DUP3 SLOAD PUSH2 0x28BA JUMP JUMPDEST PUSH2 0x2BD8 DUP3 DUP3 DUP6 PUSH2 0x2B18 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C09 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2BF7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2C01 DUP6 DUP3 PUSH2 0x2B86 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2C68 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2C17 DUP7 PUSH2 0x2A04 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C3E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C19 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2C5B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2C57 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2B6A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2CA7 DUP3 PUSH2 0x2140 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2CD9 JUMPI PUSH2 0x2CD8 PUSH2 0x2C70 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CEF DUP3 DUP6 PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFB DUP3 DUP5 PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D2B DUP3 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x2D35 DUP2 DUP6 PUSH2 0x2D11 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D45 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x2D4E DUP2 PUSH2 0x20D8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2D6C PUSH0 DUP4 ADD DUP8 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x2D79 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x2D86 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x261E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2D98 DUP2 DUP5 PUSH2 0x2D21 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2DB1 DUP2 PUSH2 0x2028 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DCC JUMPI PUSH2 0x2DCB PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DD9 DUP5 DUP3 DUP6 ADD PUSH2 0x2DA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E22 PUSH0 DUP4 ADD DUP6 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x2E2F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x261E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B BLOCKHASH PUSH27 0xF1ABC77E84D594A145CDC772F26C52D80A2034E6147883B65791C5 0xCE LOG3 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "188:2799:11:-:0;;;758:1;733:26;;865:44;;;;;;;;;;1381:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;188:2799:11;;7:99:12;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;188:2799:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1014": {
									"entryPoint": 6940,
									"id": 1014,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_948": {
									"entryPoint": 5080,
									"id": 948,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_341": {
									"entryPoint": 6659,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_596": {
									"entryPoint": 7387,
									"id": 596,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1144": {
									"entryPoint": 6225,
									"id": 1144,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_523": {
									"entryPoint": 5016,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_559": {
									"entryPoint": 7919,
									"id": 559,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_752": {
									"entryPoint": 5621,
									"id": 752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1320": {
									"entryPoint": 5073,
									"id": 1320,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_510": {
									"entryPoint": 6883,
									"id": 510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1080": {
									"entryPoint": 4882,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1051": {
									"entryPoint": 5864,
									"id": 1051,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_702": {
									"entryPoint": 5098,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_357": {
									"entryPoint": 1667,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_265": {
									"entryPoint": 3621,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@counter_2819": {
									"entryPoint": 3598,
									"id": 2819,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getApproved_374": {
									"entryPoint": 1362,
									"id": 374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMySharedHaikus_2997": {
									"entryPoint": 2676,
									"id": 2997,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@haikus_2807": {
									"entryPoint": 3803,
									"id": 2807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isApprovedForAll_407": {
									"entryPoint": 4635,
									"id": 407,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2503": {
									"entryPoint": 7582,
									"id": 2503,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintHaiku_2908": {
									"entryPoint": 1944,
									"id": 2908,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_287": {
									"entryPoint": 1219,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_278": {
									"entryPoint": 3604,
									"id": 278,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_471": {
									"entryPoint": 2645,
									"id": 471,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_497": {
									"entryPoint": 4504,
									"id": 497,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_390": {
									"entryPoint": 4482,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@shareHaiku_2935": {
									"entryPoint": 1389,
									"id": 2935,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sharedHaikus_2812": {
									"entryPoint": 4439,
									"id": 2812,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1616": {
									"entryPoint": 4777,
									"id": 1616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_237": {
									"entryPoint": 994,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_296": {
									"entryPoint": 4295,
									"id": 296,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1406": {
									"entryPoint": 6681,
									"id": 1406,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_332": {
									"entryPoint": 4533,
									"id": 332,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_453": {
									"entryPoint": 1689,
									"id": 453,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 10081,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 9068,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 11683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 10146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 9133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 10191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 11703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 9178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_Haiku_$2803_memory_ptr_to_t_struct$_Haiku_$2803_memory_ptr": {
									"entryPoint": 9580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 9383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 9414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Haiku_$2803_memory_ptr_to_t_struct$_Haiku_$2803_memory_ptr": {
									"entryPoint": 9470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11609,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9841,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11791,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10519,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 10033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 9006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 10756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 11527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 9398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 11032,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 8637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 11169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9054,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8394,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 10774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 10426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 11142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 11421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 11114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11376,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11746,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10381,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8886,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8878,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8181,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 10789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 11102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64": {
									"entryPoint": 10572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 10801,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 10933,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10970,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:28276:12",
										"nodeType": "YulBlock",
										"src": "0:28276:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1577:40:12",
													"nodeType": "YulBlock",
													"src": "1577:40:12",
													"statements": [
														{
															"nativeSrc": "1588:22:12",
															"nodeType": "YulAssignment",
															"src": "1588:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:12"
																},
																"nativeSrc": "1598:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:12",
														"nodeType": "YulTypedName",
														"src": "1560:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:12",
														"nodeType": "YulTypedName",
														"src": "1570:6:12",
														"type": ""
													}
												],
												"src": "1518:99:12"
											},
											{
												"body": {
													"nativeSrc": "1719:73:12",
													"nodeType": "YulBlock",
													"src": "1719:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:12"
																},
																"nativeSrc": "1729:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:12"
															},
															"nativeSrc": "1729:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:12"
														},
														{
															"nativeSrc": "1757:29:12",
															"nodeType": "YulAssignment",
															"src": "1757:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:12"
																},
																"nativeSrc": "1772:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:12",
														"nodeType": "YulTypedName",
														"src": "1691:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:12",
														"nodeType": "YulTypedName",
														"src": "1696:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:12",
														"nodeType": "YulTypedName",
														"src": "1707:11:12",
														"type": ""
													}
												],
												"src": "1623:169:12"
											},
											{
												"body": {
													"nativeSrc": "1860:77:12",
													"nodeType": "YulBlock",
													"src": "1860:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:12"
																},
																"nativeSrc": "1871:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:12"
															},
															"nativeSrc": "1871:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:12"
																		},
																		"nativeSrc": "1910:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:12"
																},
																"nativeSrc": "1903:27:12",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:12"
															},
															"nativeSrc": "1903:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:12",
														"nodeType": "YulTypedName",
														"src": "1842:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:12",
														"nodeType": "YulTypedName",
														"src": "1847:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:12",
														"nodeType": "YulTypedName",
														"src": "1852:6:12",
														"type": ""
													}
												],
												"src": "1798:139:12"
											},
											{
												"body": {
													"nativeSrc": "1991:54:12",
													"nodeType": "YulBlock",
													"src": "1991:54:12",
													"statements": [
														{
															"nativeSrc": "2001:38:12",
															"nodeType": "YulAssignment",
															"src": "2001:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:12"
																		},
																		"nativeSrc": "2015:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:12"
																		},
																		"nativeSrc": "2031:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:12"
																},
																"nativeSrc": "2011:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:12",
														"nodeType": "YulTypedName",
														"src": "1974:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:12",
														"nodeType": "YulTypedName",
														"src": "1984:6:12",
														"type": ""
													}
												],
												"src": "1943:102:12"
											},
											{
												"body": {
													"nativeSrc": "2143:285:12",
													"nodeType": "YulBlock",
													"src": "2143:285:12",
													"statements": [
														{
															"nativeSrc": "2153:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:12"
																},
																"nativeSrc": "2167:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:12",
															"nodeType": "YulAssignment",
															"src": "2215:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:12"
																},
																"nativeSrc": "2222:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:12"
																		},
																		"nativeSrc": "2337:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:12"
																},
																"nativeSrc": "2302:65:12",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:12"
															},
															"nativeSrc": "2302:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:12"
														},
														{
															"nativeSrc": "2376:46:12",
															"nodeType": "YulAssignment",
															"src": "2376:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:12"
																		},
																		"nativeSrc": "2392:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:12"
																},
																"nativeSrc": "2383:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:12",
														"nodeType": "YulTypedName",
														"src": "2124:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:12",
														"nodeType": "YulTypedName",
														"src": "2131:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:12",
														"nodeType": "YulTypedName",
														"src": "2139:3:12",
														"type": ""
													}
												],
												"src": "2051:377:12"
											},
											{
												"body": {
													"nativeSrc": "2552:195:12",
													"nodeType": "YulBlock",
													"src": "2552:195:12",
													"statements": [
														{
															"nativeSrc": "2562:26:12",
															"nodeType": "YulAssignment",
															"src": "2562:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:12"
																},
																"nativeSrc": "2570:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:12"
																		},
																		"nativeSrc": "2605:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:12"
																		},
																		"nativeSrc": "2624:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:12"
																},
																"nativeSrc": "2598:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:12"
															},
															"nativeSrc": "2598:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:12"
														},
														{
															"nativeSrc": "2654:86:12",
															"nodeType": "YulAssignment",
															"src": "2654:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:12"
																},
																"nativeSrc": "2662:78:12",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:12",
														"nodeType": "YulTypedName",
														"src": "2524:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:12",
														"nodeType": "YulTypedName",
														"src": "2536:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:12",
														"nodeType": "YulTypedName",
														"src": "2547:4:12",
														"type": ""
													}
												],
												"src": "2434:313:12"
											},
											{
												"body": {
													"nativeSrc": "2798:32:12",
													"nodeType": "YulBlock",
													"src": "2798:32:12",
													"statements": [
														{
															"nativeSrc": "2808:16:12",
															"nodeType": "YulAssignment",
															"src": "2808:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:12",
																"nodeType": "YulIdentifier",
																"src": "2819:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:12",
														"nodeType": "YulTypedName",
														"src": "2780:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:12",
														"nodeType": "YulTypedName",
														"src": "2790:7:12",
														"type": ""
													}
												],
												"src": "2753:77:12"
											},
											{
												"body": {
													"nativeSrc": "2879:79:12",
													"nodeType": "YulBlock",
													"src": "2879:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:12",
																"nodeType": "YulBlock",
																"src": "2936:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:12"
																			},
																			"nativeSrc": "2938:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:12"
																		},
																		"nativeSrc": "2938:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:12"
																				},
																				"nativeSrc": "2909:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:12"
																		},
																		"nativeSrc": "2899:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:12"
																},
																"nativeSrc": "2892:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:12"
															},
															"nativeSrc": "2889:63:12",
															"nodeType": "YulIf",
															"src": "2889:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:12",
														"nodeType": "YulTypedName",
														"src": "2872:5:12",
														"type": ""
													}
												],
												"src": "2836:122:12"
											},
											{
												"body": {
													"nativeSrc": "3016:87:12",
													"nodeType": "YulBlock",
													"src": "3016:87:12",
													"statements": [
														{
															"nativeSrc": "3026:29:12",
															"nodeType": "YulAssignment",
															"src": "3026:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:12"
																},
																"nativeSrc": "3035:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:12"
																},
																"nativeSrc": "3064:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:12"
															},
															"nativeSrc": "3064:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:12",
														"nodeType": "YulTypedName",
														"src": "2994:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:12",
														"nodeType": "YulTypedName",
														"src": "3002:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:12",
														"nodeType": "YulTypedName",
														"src": "3010:5:12",
														"type": ""
													}
												],
												"src": "2964:139:12"
											},
											{
												"body": {
													"nativeSrc": "3175:263:12",
													"nodeType": "YulBlock",
													"src": "3175:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:12",
																"nodeType": "YulBlock",
																"src": "3221:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:12"
																			},
																			"nativeSrc": "3223:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:12"
																		},
																		"nativeSrc": "3223:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:12"
																		},
																		"nativeSrc": "3192:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:12"
																},
																"nativeSrc": "3188:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:12"
															},
															"nativeSrc": "3185:119:12",
															"nodeType": "YulIf",
															"src": "3185:119:12"
														},
														{
															"nativeSrc": "3314:117:12",
															"nodeType": "YulBlock",
															"src": "3314:117:12",
															"statements": [
																{
																	"nativeSrc": "3329:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:12"
																				},
																				"nativeSrc": "3389:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:12"
																		},
																		"nativeSrc": "3368:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:12",
														"nodeType": "YulTypedName",
														"src": "3145:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:12",
														"nodeType": "YulTypedName",
														"src": "3156:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:12",
														"nodeType": "YulTypedName",
														"src": "3168:6:12",
														"type": ""
													}
												],
												"src": "3109:329:12"
											},
											{
												"body": {
													"nativeSrc": "3489:81:12",
													"nodeType": "YulBlock",
													"src": "3489:81:12",
													"statements": [
														{
															"nativeSrc": "3499:65:12",
															"nodeType": "YulAssignment",
															"src": "3499:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:12",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:12"
																},
																"nativeSrc": "3510:54:12",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:12",
														"nodeType": "YulTypedName",
														"src": "3471:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:12",
														"nodeType": "YulTypedName",
														"src": "3481:7:12",
														"type": ""
													}
												],
												"src": "3444:126:12"
											},
											{
												"body": {
													"nativeSrc": "3621:51:12",
													"nodeType": "YulBlock",
													"src": "3621:51:12",
													"statements": [
														{
															"nativeSrc": "3631:35:12",
															"nodeType": "YulAssignment",
															"src": "3631:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:12"
																},
																"nativeSrc": "3642:24:12",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:12",
														"nodeType": "YulTypedName",
														"src": "3603:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:12",
														"nodeType": "YulTypedName",
														"src": "3613:7:12",
														"type": ""
													}
												],
												"src": "3576:96:12"
											},
											{
												"body": {
													"nativeSrc": "3743:53:12",
													"nodeType": "YulBlock",
													"src": "3743:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:12"
																		},
																		"nativeSrc": "3765:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:12"
																},
																"nativeSrc": "3753:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:12"
															},
															"nativeSrc": "3753:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:12",
														"nodeType": "YulTypedName",
														"src": "3731:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:12",
														"nodeType": "YulTypedName",
														"src": "3738:3:12",
														"type": ""
													}
												],
												"src": "3678:118:12"
											},
											{
												"body": {
													"nativeSrc": "3900:124:12",
													"nodeType": "YulBlock",
													"src": "3900:124:12",
													"statements": [
														{
															"nativeSrc": "3910:26:12",
															"nodeType": "YulAssignment",
															"src": "3910:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:12"
																},
																"nativeSrc": "3918:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:12"
																		},
																		"nativeSrc": "3999:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:12"
																},
																"nativeSrc": "3946:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:12"
															},
															"nativeSrc": "3946:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:12",
														"nodeType": "YulTypedName",
														"src": "3872:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:12",
														"nodeType": "YulTypedName",
														"src": "3884:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:12",
														"nodeType": "YulTypedName",
														"src": "3895:4:12",
														"type": ""
													}
												],
												"src": "3802:222:12"
											},
											{
												"body": {
													"nativeSrc": "4073:79:12",
													"nodeType": "YulBlock",
													"src": "4073:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:12",
																"nodeType": "YulBlock",
																"src": "4130:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:12"
																			},
																			"nativeSrc": "4132:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:12"
																		},
																		"nativeSrc": "4132:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:12"
																				},
																				"nativeSrc": "4103:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:12"
																		},
																		"nativeSrc": "4093:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:12"
																},
																"nativeSrc": "4086:43:12",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:12"
															},
															"nativeSrc": "4083:63:12",
															"nodeType": "YulIf",
															"src": "4083:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:12",
														"nodeType": "YulTypedName",
														"src": "4066:5:12",
														"type": ""
													}
												],
												"src": "4030:122:12"
											},
											{
												"body": {
													"nativeSrc": "4210:87:12",
													"nodeType": "YulBlock",
													"src": "4210:87:12",
													"statements": [
														{
															"nativeSrc": "4220:29:12",
															"nodeType": "YulAssignment",
															"src": "4220:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:12"
																},
																"nativeSrc": "4229:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:12"
																},
																"nativeSrc": "4258:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:12"
															},
															"nativeSrc": "4258:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:12",
														"nodeType": "YulTypedName",
														"src": "4188:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:12",
														"nodeType": "YulTypedName",
														"src": "4196:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:12",
														"nodeType": "YulTypedName",
														"src": "4204:5:12",
														"type": ""
													}
												],
												"src": "4158:139:12"
											},
											{
												"body": {
													"nativeSrc": "4386:391:12",
													"nodeType": "YulBlock",
													"src": "4386:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:12",
																"nodeType": "YulBlock",
																"src": "4432:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:12"
																			},
																			"nativeSrc": "4434:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:12"
																		},
																		"nativeSrc": "4434:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:12"
																		},
																		"nativeSrc": "4403:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:12"
																},
																"nativeSrc": "4399:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:12"
															},
															"nativeSrc": "4396:119:12",
															"nodeType": "YulIf",
															"src": "4396:119:12"
														},
														{
															"nativeSrc": "4525:117:12",
															"nodeType": "YulBlock",
															"src": "4525:117:12",
															"statements": [
																{
																	"nativeSrc": "4540:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:12"
																				},
																				"nativeSrc": "4600:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:12"
																		},
																		"nativeSrc": "4579:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:12",
															"nodeType": "YulBlock",
															"src": "4652:118:12",
															"statements": [
																{
																	"nativeSrc": "4667:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:12"
																				},
																				"nativeSrc": "4728:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:12"
																		},
																		"nativeSrc": "4707:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:12",
														"nodeType": "YulTypedName",
														"src": "4348:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:12",
														"nodeType": "YulTypedName",
														"src": "4359:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:12",
														"nodeType": "YulTypedName",
														"src": "4371:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:12",
														"nodeType": "YulTypedName",
														"src": "4379:6:12",
														"type": ""
													}
												],
												"src": "4303:474:12"
											},
											{
												"body": {
													"nativeSrc": "4883:519:12",
													"nodeType": "YulBlock",
													"src": "4883:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:12",
																"nodeType": "YulBlock",
																"src": "4929:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:12"
																			},
																			"nativeSrc": "4931:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:12"
																		},
																		"nativeSrc": "4931:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:12"
																		},
																		"nativeSrc": "4900:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:12"
																},
																"nativeSrc": "4896:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:12"
															},
															"nativeSrc": "4893:119:12",
															"nodeType": "YulIf",
															"src": "4893:119:12"
														},
														{
															"nativeSrc": "5022:117:12",
															"nodeType": "YulBlock",
															"src": "5022:117:12",
															"statements": [
																{
																	"nativeSrc": "5037:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:12"
																				},
																				"nativeSrc": "5097:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:12"
																		},
																		"nativeSrc": "5076:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:12",
															"nodeType": "YulBlock",
															"src": "5149:118:12",
															"statements": [
																{
																	"nativeSrc": "5164:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:12"
																				},
																				"nativeSrc": "5225:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:12"
																		},
																		"nativeSrc": "5204:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:12",
															"nodeType": "YulBlock",
															"src": "5277:118:12",
															"statements": [
																{
																	"nativeSrc": "5292:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:12"
																				},
																				"nativeSrc": "5353:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:12"
																		},
																		"nativeSrc": "5332:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:12",
														"nodeType": "YulTypedName",
														"src": "4837:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:12",
														"nodeType": "YulTypedName",
														"src": "4848:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:12",
														"nodeType": "YulTypedName",
														"src": "4860:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:12",
														"nodeType": "YulTypedName",
														"src": "4868:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:12",
														"nodeType": "YulTypedName",
														"src": "4876:6:12",
														"type": ""
													}
												],
												"src": "4783:619:12"
											},
											{
												"body": {
													"nativeSrc": "5497:28:12",
													"nodeType": "YulBlock",
													"src": "5497:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5514:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5514:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5517:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5517:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5507:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5507:6:12"
																},
																"nativeSrc": "5507:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5507:12:12"
															},
															"nativeSrc": "5507:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "5507:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5408:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5408:117:12"
											},
											{
												"body": {
													"nativeSrc": "5620:28:12",
													"nodeType": "YulBlock",
													"src": "5620:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5637:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5637:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5640:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5640:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5630:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5630:6:12"
																},
																"nativeSrc": "5630:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5630:12:12"
															},
															"nativeSrc": "5630:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "5630:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "5531:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5531:117:12"
											},
											{
												"body": {
													"nativeSrc": "5682:152:12",
													"nodeType": "YulBlock",
													"src": "5682:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5699:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5699:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5702:77:12",
																		"nodeType": "YulLiteral",
																		"src": "5702:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5692:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:12"
																},
																"nativeSrc": "5692:88:12",
																"nodeType": "YulFunctionCall",
																"src": "5692:88:12"
															},
															"nativeSrc": "5692:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "5692:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5796:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5796:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5799:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5799:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5789:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5789:6:12"
																},
																"nativeSrc": "5789:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5789:15:12"
															},
															"nativeSrc": "5789:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5789:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5820:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5820:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5823:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5823:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5813:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5813:6:12"
																},
																"nativeSrc": "5813:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5813:15:12"
															},
															"nativeSrc": "5813:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5813:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5654:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5654:180:12"
											},
											{
												"body": {
													"nativeSrc": "5883:238:12",
													"nodeType": "YulBlock",
													"src": "5883:238:12",
													"statements": [
														{
															"nativeSrc": "5893:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5893:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5915:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5915:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5945:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5945:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5923:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "5923:21:12"
																		},
																		"nativeSrc": "5923:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5923:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5911:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5911:3:12"
																},
																"nativeSrc": "5911:40:12",
																"nodeType": "YulFunctionCall",
																"src": "5911:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5897:10:12",
																	"nodeType": "YulTypedName",
																	"src": "5897:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6062:22:12",
																"nodeType": "YulBlock",
																"src": "6062:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6064:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "6064:16:12"
																			},
																			"nativeSrc": "6064:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6064:18:12"
																		},
																		"nativeSrc": "6064:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6064:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6005:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "6005:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6017:18:12",
																				"nodeType": "YulLiteral",
																				"src": "6017:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6002:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "6002:2:12"
																		},
																		"nativeSrc": "6002:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6002:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6041:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "6041:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6053:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6053:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6038:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "6038:2:12"
																		},
																		"nativeSrc": "6038:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6038:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5999:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5999:2:12"
																},
																"nativeSrc": "5999:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5999:62:12"
															},
															"nativeSrc": "5996:88:12",
															"nodeType": "YulIf",
															"src": "5996:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6100:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6100:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6104:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "6104:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6093:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6093:6:12"
																},
																"nativeSrc": "6093:22:12",
																"nodeType": "YulFunctionCall",
																"src": "6093:22:12"
															},
															"nativeSrc": "6093:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "6093:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5840:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5869:6:12",
														"nodeType": "YulTypedName",
														"src": "5869:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5877:4:12",
														"nodeType": "YulTypedName",
														"src": "5877:4:12",
														"type": ""
													}
												],
												"src": "5840:281:12"
											},
											{
												"body": {
													"nativeSrc": "6168:88:12",
													"nodeType": "YulBlock",
													"src": "6168:88:12",
													"statements": [
														{
															"nativeSrc": "6178:30:12",
															"nodeType": "YulAssignment",
															"src": "6178:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6188:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "6188:18:12"
																},
																"nativeSrc": "6188:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6188:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6178:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6237:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6237:6:12"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6245:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6245:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6217:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "6217:19:12"
																},
																"nativeSrc": "6217:33:12",
																"nodeType": "YulFunctionCall",
																"src": "6217:33:12"
															},
															"nativeSrc": "6217:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "6217:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6127:129:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6152:4:12",
														"nodeType": "YulTypedName",
														"src": "6152:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6161:6:12",
														"nodeType": "YulTypedName",
														"src": "6161:6:12",
														"type": ""
													}
												],
												"src": "6127:129:12"
											},
											{
												"body": {
													"nativeSrc": "6329:241:12",
													"nodeType": "YulBlock",
													"src": "6329:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6434:22:12",
																"nodeType": "YulBlock",
																"src": "6434:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6436:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "6436:16:12"
																			},
																			"nativeSrc": "6436:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6436:18:12"
																		},
																		"nativeSrc": "6436:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6436:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6406:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6406:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6414:18:12",
																		"nodeType": "YulLiteral",
																		"src": "6414:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6403:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6403:2:12"
																},
																"nativeSrc": "6403:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6403:30:12"
															},
															"nativeSrc": "6400:56:12",
															"nodeType": "YulIf",
															"src": "6400:56:12"
														},
														{
															"nativeSrc": "6466:37:12",
															"nodeType": "YulAssignment",
															"src": "6466:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6496:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6496:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6474:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "6474:21:12"
																},
																"nativeSrc": "6474:29:12",
																"nodeType": "YulFunctionCall",
																"src": "6474:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6466:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6466:4:12"
																}
															]
														},
														{
															"nativeSrc": "6540:23:12",
															"nodeType": "YulAssignment",
															"src": "6540:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6552:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6552:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6558:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6558:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6548:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6548:3:12"
																},
																"nativeSrc": "6548:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6548:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6540:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6540:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "6262:308:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6313:6:12",
														"nodeType": "YulTypedName",
														"src": "6313:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6324:4:12",
														"nodeType": "YulTypedName",
														"src": "6324:4:12",
														"type": ""
													}
												],
												"src": "6262:308:12"
											},
											{
												"body": {
													"nativeSrc": "6640:84:12",
													"nodeType": "YulBlock",
													"src": "6640:84:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6664:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6664:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6669:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6669:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6674:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6674:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "6651:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "6651:12:12"
																},
																"nativeSrc": "6651:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6651:30:12"
															},
															"nativeSrc": "6651:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6651:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6701:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6701:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6706:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6706:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6697:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6697:3:12"
																		},
																		"nativeSrc": "6697:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6697:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6715:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6715:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6690:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6690:6:12"
																},
																"nativeSrc": "6690:27:12",
																"nodeType": "YulFunctionCall",
																"src": "6690:27:12"
															},
															"nativeSrc": "6690:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "6690:27:12"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "6576:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6622:3:12",
														"nodeType": "YulTypedName",
														"src": "6622:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6627:3:12",
														"nodeType": "YulTypedName",
														"src": "6627:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6632:6:12",
														"nodeType": "YulTypedName",
														"src": "6632:6:12",
														"type": ""
													}
												],
												"src": "6576:148:12"
											},
											{
												"body": {
													"nativeSrc": "6814:341:12",
													"nodeType": "YulBlock",
													"src": "6814:341:12",
													"statements": [
														{
															"nativeSrc": "6824:75:12",
															"nodeType": "YulAssignment",
															"src": "6824:75:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6891:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6891:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6849:41:12",
																			"nodeType": "YulIdentifier",
																			"src": "6849:41:12"
																		},
																		"nativeSrc": "6849:49:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6849:49:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6833:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "6833:15:12"
																},
																"nativeSrc": "6833:66:12",
																"nodeType": "YulFunctionCall",
																"src": "6833:66:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6824:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6824:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6915:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6915:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6922:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6922:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6908:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6908:6:12"
																},
																"nativeSrc": "6908:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6908:21:12"
															},
															"nativeSrc": "6908:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6908:21:12"
														},
														{
															"nativeSrc": "6938:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6938:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6953:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6953:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6960:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6960:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6949:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:12"
																},
																"nativeSrc": "6949:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6949:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6942:3:12",
																	"nodeType": "YulTypedName",
																	"src": "6942:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7003:83:12",
																"nodeType": "YulBlock",
																"src": "7003:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7005:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7005:77:12"
																			},
																			"nativeSrc": "7005:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7005:79:12"
																		},
																		"nativeSrc": "7005:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7005:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6984:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6984:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6989:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6989:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6980:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6980:3:12"
																		},
																		"nativeSrc": "6980:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6980:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6998:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6998:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6977:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6977:2:12"
																},
																"nativeSrc": "6977:25:12",
																"nodeType": "YulFunctionCall",
																"src": "6977:25:12"
															},
															"nativeSrc": "6974:112:12",
															"nodeType": "YulIf",
															"src": "6974:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7132:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7132:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7137:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7137:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7142:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7142:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7095:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "7095:36:12"
																},
																"nativeSrc": "7095:54:12",
																"nodeType": "YulFunctionCall",
																"src": "7095:54:12"
															},
															"nativeSrc": "7095:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "7095:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6730:425:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6787:3:12",
														"nodeType": "YulTypedName",
														"src": "6787:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6792:6:12",
														"nodeType": "YulTypedName",
														"src": "6792:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6800:3:12",
														"nodeType": "YulTypedName",
														"src": "6800:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6808:5:12",
														"nodeType": "YulTypedName",
														"src": "6808:5:12",
														"type": ""
													}
												],
												"src": "6730:425:12"
											},
											{
												"body": {
													"nativeSrc": "7237:278:12",
													"nodeType": "YulBlock",
													"src": "7237:278:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7286:83:12",
																"nodeType": "YulBlock",
																"src": "7286:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7288:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7288:77:12"
																			},
																			"nativeSrc": "7288:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7288:79:12"
																		},
																		"nativeSrc": "7288:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7288:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7265:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7265:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7273:4:12",
																						"nodeType": "YulLiteral",
																						"src": "7273:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7261:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7261:3:12"
																				},
																				"nativeSrc": "7261:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7261:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7280:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7280:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7257:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7257:3:12"
																		},
																		"nativeSrc": "7257:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7257:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7250:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7250:6:12"
																},
																"nativeSrc": "7250:35:12",
																"nodeType": "YulFunctionCall",
																"src": "7250:35:12"
															},
															"nativeSrc": "7247:122:12",
															"nodeType": "YulIf",
															"src": "7247:122:12"
														},
														{
															"nativeSrc": "7378:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7378:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7405:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7405:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7392:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7392:12:12"
																},
																"nativeSrc": "7392:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7392:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7382:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7382:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7421:88:12",
															"nodeType": "YulAssignment",
															"src": "7421:88:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7482:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7482:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7490:4:12",
																				"nodeType": "YulLiteral",
																				"src": "7490:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7478:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7478:3:12"
																		},
																		"nativeSrc": "7478:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7478:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7497:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7497:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7505:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7505:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "7430:47:12",
																	"nodeType": "YulIdentifier",
																	"src": "7430:47:12"
																},
																"nativeSrc": "7430:79:12",
																"nodeType": "YulFunctionCall",
																"src": "7430:79:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7421:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7421:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7175:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7215:6:12",
														"nodeType": "YulTypedName",
														"src": "7215:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7223:3:12",
														"nodeType": "YulTypedName",
														"src": "7223:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7231:5:12",
														"nodeType": "YulTypedName",
														"src": "7231:5:12",
														"type": ""
													}
												],
												"src": "7175:340:12"
											},
											{
												"body": {
													"nativeSrc": "7651:1029:12",
													"nodeType": "YulBlock",
													"src": "7651:1029:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7697:83:12",
																"nodeType": "YulBlock",
																"src": "7697:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7699:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7699:77:12"
																			},
																			"nativeSrc": "7699:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7699:79:12"
																		},
																		"nativeSrc": "7699:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7699:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7672:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7672:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7681:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7681:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7668:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7668:3:12"
																		},
																		"nativeSrc": "7668:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7668:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7693:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7693:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7664:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7664:3:12"
																},
																"nativeSrc": "7664:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7664:32:12"
															},
															"nativeSrc": "7661:119:12",
															"nodeType": "YulIf",
															"src": "7661:119:12"
														},
														{
															"nativeSrc": "7790:287:12",
															"nodeType": "YulBlock",
															"src": "7790:287:12",
															"statements": [
																{
																	"nativeSrc": "7805:45:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7805:45:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7836:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7836:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7847:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7847:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7832:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7832:3:12"
																				},
																				"nativeSrc": "7832:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7832:17:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7819:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "7819:12:12"
																		},
																		"nativeSrc": "7819:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7819:31:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7809:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7809:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7897:83:12",
																		"nodeType": "YulBlock",
																		"src": "7897:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7899:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "7899:77:12"
																					},
																					"nativeSrc": "7899:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7899:79:12"
																				},
																				"nativeSrc": "7899:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "7899:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7869:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7869:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7877:18:12",
																				"nodeType": "YulLiteral",
																				"src": "7877:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7866:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7866:2:12"
																		},
																		"nativeSrc": "7866:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7866:30:12"
																	},
																	"nativeSrc": "7863:117:12",
																	"nodeType": "YulIf",
																	"src": "7863:117:12"
																},
																{
																	"nativeSrc": "7994:73:12",
																	"nodeType": "YulAssignment",
																	"src": "7994:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8039:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8039:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8050:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8050:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8035:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8035:3:12"
																				},
																				"nativeSrc": "8035:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8035:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8059:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8059:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8004:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "8004:30:12"
																		},
																		"nativeSrc": "8004:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8004:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7994:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7994:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8087:288:12",
															"nodeType": "YulBlock",
															"src": "8087:288:12",
															"statements": [
																{
																	"nativeSrc": "8102:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8102:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8133:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8133:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8144:2:12",
																						"nodeType": "YulLiteral",
																						"src": "8144:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8129:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8129:3:12"
																				},
																				"nativeSrc": "8129:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8129:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8116:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "8116:12:12"
																		},
																		"nativeSrc": "8116:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8116:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8106:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8106:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8195:83:12",
																		"nodeType": "YulBlock",
																		"src": "8195:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8197:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "8197:77:12"
																					},
																					"nativeSrc": "8197:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8197:79:12"
																				},
																				"nativeSrc": "8197:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8197:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8167:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8167:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8175:18:12",
																				"nodeType": "YulLiteral",
																				"src": "8175:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8164:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8164:2:12"
																		},
																		"nativeSrc": "8164:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8164:30:12"
																	},
																	"nativeSrc": "8161:117:12",
																	"nodeType": "YulIf",
																	"src": "8161:117:12"
																},
																{
																	"nativeSrc": "8292:73:12",
																	"nodeType": "YulAssignment",
																	"src": "8292:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8337:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8337:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8348:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8348:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8333:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8333:3:12"
																				},
																				"nativeSrc": "8333:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8333:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8357:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8357:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8302:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "8302:30:12"
																		},
																		"nativeSrc": "8302:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8302:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8292:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8292:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8385:288:12",
															"nodeType": "YulBlock",
															"src": "8385:288:12",
															"statements": [
																{
																	"nativeSrc": "8400:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8400:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8431:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8431:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8442:2:12",
																						"nodeType": "YulLiteral",
																						"src": "8442:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8427:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8427:3:12"
																				},
																				"nativeSrc": "8427:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8427:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8414:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "8414:12:12"
																		},
																		"nativeSrc": "8414:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8414:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8404:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8404:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8493:83:12",
																		"nodeType": "YulBlock",
																		"src": "8493:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8495:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "8495:77:12"
																					},
																					"nativeSrc": "8495:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8495:79:12"
																				},
																				"nativeSrc": "8495:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "8495:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8465:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8465:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8473:18:12",
																				"nodeType": "YulLiteral",
																				"src": "8473:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8462:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8462:2:12"
																		},
																		"nativeSrc": "8462:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8462:30:12"
																	},
																	"nativeSrc": "8459:117:12",
																	"nodeType": "YulIf",
																	"src": "8459:117:12"
																},
																{
																	"nativeSrc": "8590:73:12",
																	"nodeType": "YulAssignment",
																	"src": "8590:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8635:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8635:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8646:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8646:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8631:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8631:3:12"
																				},
																				"nativeSrc": "8631:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8631:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8655:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8655:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "8600:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "8600:30:12"
																		},
																		"nativeSrc": "8600:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8590:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8590:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "7521:1159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7605:9:12",
														"nodeType": "YulTypedName",
														"src": "7605:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7616:7:12",
														"nodeType": "YulTypedName",
														"src": "7616:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7628:6:12",
														"nodeType": "YulTypedName",
														"src": "7628:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7636:6:12",
														"nodeType": "YulTypedName",
														"src": "7636:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7644:6:12",
														"nodeType": "YulTypedName",
														"src": "7644:6:12",
														"type": ""
													}
												],
												"src": "7521:1159:12"
											},
											{
												"body": {
													"nativeSrc": "8783:40:12",
													"nodeType": "YulBlock",
													"src": "8783:40:12",
													"statements": [
														{
															"nativeSrc": "8794:22:12",
															"nodeType": "YulAssignment",
															"src": "8794:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8810:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8810:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8804:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8804:5:12"
																},
																"nativeSrc": "8804:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8804:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8794:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8794:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "8686:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8766:5:12",
														"nodeType": "YulTypedName",
														"src": "8766:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8776:6:12",
														"nodeType": "YulTypedName",
														"src": "8776:6:12",
														"type": ""
													}
												],
												"src": "8686:137:12"
											},
											{
												"body": {
													"nativeSrc": "8963:73:12",
													"nodeType": "YulBlock",
													"src": "8963:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8980:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8980:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8985:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8985:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8973:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8973:6:12"
																},
																"nativeSrc": "8973:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8973:19:12"
															},
															"nativeSrc": "8973:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "8973:19:12"
														},
														{
															"nativeSrc": "9001:29:12",
															"nodeType": "YulAssignment",
															"src": "9001:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9020:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9020:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9025:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9025:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9016:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9016:3:12"
																},
																"nativeSrc": "9016:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9016:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9001:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "9001:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "8829:207:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8935:3:12",
														"nodeType": "YulTypedName",
														"src": "8935:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8940:6:12",
														"nodeType": "YulTypedName",
														"src": "8940:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8951:11:12",
														"nodeType": "YulTypedName",
														"src": "8951:11:12",
														"type": ""
													}
												],
												"src": "8829:207:12"
											},
											{
												"body": {
													"nativeSrc": "9137:60:12",
													"nodeType": "YulBlock",
													"src": "9137:60:12",
													"statements": [
														{
															"nativeSrc": "9147:11:12",
															"nodeType": "YulAssignment",
															"src": "9147:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "9155:3:12",
																"nodeType": "YulIdentifier",
																"src": "9155:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9147:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9147:4:12"
																}
															]
														},
														{
															"nativeSrc": "9168:22:12",
															"nodeType": "YulAssignment",
															"src": "9168:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "9180:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9180:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9185:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9185:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9176:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9176:3:12"
																},
																"nativeSrc": "9176:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9176:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9168:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9168:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "9042:155:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9124:3:12",
														"nodeType": "YulTypedName",
														"src": "9124:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9132:4:12",
														"nodeType": "YulTypedName",
														"src": "9132:4:12",
														"type": ""
													}
												],
												"src": "9042:155:12"
											},
											{
												"body": {
													"nativeSrc": "9258:53:12",
													"nodeType": "YulBlock",
													"src": "9258:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9275:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9275:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9298:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9298:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9280:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "9280:17:12"
																		},
																		"nativeSrc": "9280:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9280:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9268:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9268:6:12"
																},
																"nativeSrc": "9268:37:12",
																"nodeType": "YulFunctionCall",
																"src": "9268:37:12"
															},
															"nativeSrc": "9268:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "9268:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "9203:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9246:5:12",
														"nodeType": "YulTypedName",
														"src": "9246:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9253:3:12",
														"nodeType": "YulTypedName",
														"src": "9253:3:12",
														"type": ""
													}
												],
												"src": "9203:108:12"
											},
											{
												"body": {
													"nativeSrc": "9403:73:12",
													"nodeType": "YulBlock",
													"src": "9403:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9420:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9420:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9425:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9425:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9413:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9413:6:12"
																},
																"nativeSrc": "9413:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9413:19:12"
															},
															"nativeSrc": "9413:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "9413:19:12"
														},
														{
															"nativeSrc": "9441:29:12",
															"nodeType": "YulAssignment",
															"src": "9441:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9460:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9460:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9465:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9465:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9456:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9456:3:12"
																},
																"nativeSrc": "9456:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9456:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9441:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "9441:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nativeSrc": "9317:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9375:3:12",
														"nodeType": "YulTypedName",
														"src": "9375:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9380:6:12",
														"nodeType": "YulTypedName",
														"src": "9380:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9391:11:12",
														"nodeType": "YulTypedName",
														"src": "9391:11:12",
														"type": ""
													}
												],
												"src": "9317:159:12"
											},
											{
												"body": {
													"nativeSrc": "9564:275:12",
													"nodeType": "YulBlock",
													"src": "9564:275:12",
													"statements": [
														{
															"nativeSrc": "9574:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9574:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9621:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9621:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "9588:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "9588:32:12"
																},
																"nativeSrc": "9588:39:12",
																"nodeType": "YulFunctionCall",
																"src": "9588:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9578:6:12",
																	"nodeType": "YulTypedName",
																	"src": "9578:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9636:68:12",
															"nodeType": "YulAssignment",
															"src": "9636:68:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9692:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9692:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9697:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9697:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nativeSrc": "9643:48:12",
																	"nodeType": "YulIdentifier",
																	"src": "9643:48:12"
																},
																"nativeSrc": "9643:61:12",
																"nodeType": "YulFunctionCall",
																"src": "9643:61:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9636:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9636:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9752:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9752:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9759:4:12",
																				"nodeType": "YulLiteral",
																				"src": "9759:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9748:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9748:3:12"
																		},
																		"nativeSrc": "9748:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9748:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9766:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9766:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9771:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9771:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9713:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "9713:34:12"
																},
																"nativeSrc": "9713:65:12",
																"nodeType": "YulFunctionCall",
																"src": "9713:65:12"
															},
															"nativeSrc": "9713:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "9713:65:12"
														},
														{
															"nativeSrc": "9787:46:12",
															"nodeType": "YulAssignment",
															"src": "9787:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9798:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9798:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9825:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9825:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9803:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "9803:21:12"
																		},
																		"nativeSrc": "9803:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9803:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9794:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9794:3:12"
																},
																"nativeSrc": "9794:39:12",
																"nodeType": "YulFunctionCall",
																"src": "9794:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9787:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9787:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "9482:357:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9545:5:12",
														"nodeType": "YulTypedName",
														"src": "9545:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9552:3:12",
														"nodeType": "YulTypedName",
														"src": "9552:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9560:3:12",
														"nodeType": "YulTypedName",
														"src": "9560:3:12",
														"type": ""
													}
												],
												"src": "9482:357:12"
											},
											{
												"body": {
													"nativeSrc": "10009:976:12",
													"nodeType": "YulBlock",
													"src": "10009:976:12",
													"statements": [
														{
															"nativeSrc": "10019:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10019:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10035:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10035:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10040:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10040:4:12",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10031:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10031:3:12"
																},
																"nativeSrc": "10031:14:12",
																"nodeType": "YulFunctionCall",
																"src": "10031:14:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "10023:4:12",
																	"nodeType": "YulTypedName",
																	"src": "10023:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10055:165:12",
															"nodeType": "YulBlock",
															"src": "10055:165:12",
															"statements": [
																{
																	"nativeSrc": "10091:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10091:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10121:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "10121:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10128:4:12",
																						"nodeType": "YulLiteral",
																						"src": "10128:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10117:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10117:3:12"
																				},
																				"nativeSrc": "10117:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10117:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10111:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "10111:5:12"
																		},
																		"nativeSrc": "10111:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10111:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10095:12:12",
																			"nodeType": "YulTypedName",
																			"src": "10095:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10181:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "10181:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10199:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "10199:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10204:4:12",
																						"nodeType": "YulLiteral",
																						"src": "10204:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10195:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10195:3:12"
																				},
																				"nativeSrc": "10195:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10195:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "10147:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "10147:33:12"
																		},
																		"nativeSrc": "10147:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10147:63:12"
																	},
																	"nativeSrc": "10147:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "10147:63:12"
																}
															]
														},
														{
															"nativeSrc": "10230:236:12",
															"nodeType": "YulBlock",
															"src": "10230:236:12",
															"statements": [
																{
																	"nativeSrc": "10266:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10266:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10296:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "10296:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10303:4:12",
																						"nodeType": "YulLiteral",
																						"src": "10303:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10292:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10292:3:12"
																				},
																				"nativeSrc": "10292:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10292:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10286:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "10286:5:12"
																		},
																		"nativeSrc": "10286:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10286:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10270:12:12",
																			"nodeType": "YulTypedName",
																			"src": "10270:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10334:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "10334:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10339:4:12",
																						"nodeType": "YulLiteral",
																						"src": "10339:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10330:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10330:3:12"
																				},
																				"nativeSrc": "10330:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10330:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "10350:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "10350:4:12"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "10356:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "10356:3:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10346:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10346:3:12"
																				},
																				"nativeSrc": "10346:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10346:14:12"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "10323:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10323:6:12"
																		},
																		"nativeSrc": "10323:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10323:38:12"
																	},
																	"nativeSrc": "10323:38:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "10323:38:12"
																},
																{
																	"nativeSrc": "10374:81:12",
																	"nodeType": "YulAssignment",
																	"src": "10374:81:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10436:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "10436:12:12"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "10450:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10450:4:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "10382:53:12",
																			"nodeType": "YulIdentifier",
																			"src": "10382:53:12"
																		},
																		"nativeSrc": "10382:73:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10382:73:12"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "10374:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "10374:4:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10476:236:12",
															"nodeType": "YulBlock",
															"src": "10476:236:12",
															"statements": [
																{
																	"nativeSrc": "10512:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10512:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10542:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "10542:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10549:4:12",
																						"nodeType": "YulLiteral",
																						"src": "10549:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10538:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10538:3:12"
																				},
																				"nativeSrc": "10538:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10538:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10532:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "10532:5:12"
																		},
																		"nativeSrc": "10532:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10532:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10516:12:12",
																			"nodeType": "YulTypedName",
																			"src": "10516:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10580:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "10580:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10585:4:12",
																						"nodeType": "YulLiteral",
																						"src": "10585:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10576:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10576:3:12"
																				},
																				"nativeSrc": "10576:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10576:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "10596:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "10596:4:12"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "10602:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "10602:3:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10592:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10592:3:12"
																				},
																				"nativeSrc": "10592:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10592:14:12"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "10569:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10569:6:12"
																		},
																		"nativeSrc": "10569:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10569:38:12"
																	},
																	"nativeSrc": "10569:38:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "10569:38:12"
																},
																{
																	"nativeSrc": "10620:81:12",
																	"nodeType": "YulAssignment",
																	"src": "10620:81:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10682:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "10682:12:12"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "10696:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10696:4:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "10628:53:12",
																			"nodeType": "YulIdentifier",
																			"src": "10628:53:12"
																		},
																		"nativeSrc": "10628:73:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10628:73:12"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "10620:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "10620:4:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10722:236:12",
															"nodeType": "YulBlock",
															"src": "10722:236:12",
															"statements": [
																{
																	"nativeSrc": "10758:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10758:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10788:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "10788:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10795:4:12",
																						"nodeType": "YulLiteral",
																						"src": "10795:4:12",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10784:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10784:3:12"
																				},
																				"nativeSrc": "10784:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10784:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10778:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "10778:5:12"
																		},
																		"nativeSrc": "10778:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10778:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "10762:12:12",
																			"nodeType": "YulTypedName",
																			"src": "10762:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "10826:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "10826:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10831:4:12",
																						"nodeType": "YulLiteral",
																						"src": "10831:4:12",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10822:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10822:3:12"
																				},
																				"nativeSrc": "10822:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10822:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "10842:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "10842:4:12"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "10848:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "10848:3:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10838:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10838:3:12"
																				},
																				"nativeSrc": "10838:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10838:14:12"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "10815:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10815:6:12"
																		},
																		"nativeSrc": "10815:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10815:38:12"
																	},
																	"nativeSrc": "10815:38:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "10815:38:12"
																},
																{
																	"nativeSrc": "10866:81:12",
																	"nodeType": "YulAssignment",
																	"src": "10866:81:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "10928:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "10928:12:12"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "10942:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10942:4:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "10874:53:12",
																			"nodeType": "YulIdentifier",
																			"src": "10874:53:12"
																		},
																		"nativeSrc": "10874:73:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10874:73:12"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "10866:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "10866:4:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10968:11:12",
															"nodeType": "YulAssignment",
															"src": "10968:11:12",
															"value": {
																"name": "tail",
																"nativeSrc": "10975:4:12",
																"nodeType": "YulIdentifier",
																"src": "10975:4:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10968:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10968:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Haiku_$2803_memory_ptr_to_t_struct$_Haiku_$2803_memory_ptr",
												"nativeSrc": "9899:1086:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9988:5:12",
														"nodeType": "YulTypedName",
														"src": "9988:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9995:3:12",
														"nodeType": "YulTypedName",
														"src": "9995:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10004:3:12",
														"nodeType": "YulTypedName",
														"src": "10004:3:12",
														"type": ""
													}
												],
												"src": "9899:1086:12"
											},
											{
												"body": {
													"nativeSrc": "11117:122:12",
													"nodeType": "YulBlock",
													"src": "11117:122:12",
													"statements": [
														{
															"nativeSrc": "11127:106:12",
															"nodeType": "YulAssignment",
															"src": "11127:106:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11221:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11221:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11229:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11229:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Haiku_$2803_memory_ptr_to_t_struct$_Haiku_$2803_memory_ptr",
																	"nativeSrc": "11141:79:12",
																	"nodeType": "YulIdentifier",
																	"src": "11141:79:12"
																},
																"nativeSrc": "11141:92:12",
																"nodeType": "YulFunctionCall",
																"src": "11141:92:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "11127:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "11127:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Haiku_$2803_memory_ptr_to_t_struct$_Haiku_$2803_memory_ptr",
												"nativeSrc": "10991:248:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "11090:6:12",
														"nodeType": "YulTypedName",
														"src": "11090:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11098:3:12",
														"nodeType": "YulTypedName",
														"src": "11098:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "11106:10:12",
														"nodeType": "YulTypedName",
														"src": "11106:10:12",
														"type": ""
													}
												],
												"src": "10991:248:12"
											},
											{
												"body": {
													"nativeSrc": "11343:38:12",
													"nodeType": "YulBlock",
													"src": "11343:38:12",
													"statements": [
														{
															"nativeSrc": "11353:22:12",
															"nodeType": "YulAssignment",
															"src": "11353:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "11365:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11365:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11370:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11370:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11361:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11361:3:12"
																},
																"nativeSrc": "11361:14:12",
																"nodeType": "YulFunctionCall",
																"src": "11361:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "11353:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11353:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "11245:136:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11330:3:12",
														"nodeType": "YulTypedName",
														"src": "11330:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "11338:4:12",
														"nodeType": "YulTypedName",
														"src": "11338:4:12",
														"type": ""
													}
												],
												"src": "11245:136:12"
											},
											{
												"body": {
													"nativeSrc": "11615:925:12",
													"nodeType": "YulBlock",
													"src": "11615:925:12",
													"statements": [
														{
															"nativeSrc": "11625:91:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11625:91:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11710:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11710:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "11639:70:12",
																	"nodeType": "YulIdentifier",
																	"src": "11639:70:12"
																},
																"nativeSrc": "11639:77:12",
																"nodeType": "YulFunctionCall",
																"src": "11639:77:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11629:6:12",
																	"nodeType": "YulTypedName",
																	"src": "11629:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11725:116:12",
															"nodeType": "YulAssignment",
															"src": "11725:116:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11829:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11829:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11834:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11834:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "11732:96:12",
																	"nodeType": "YulIdentifier",
																	"src": "11732:96:12"
																},
																"nativeSrc": "11732:109:12",
																"nodeType": "YulFunctionCall",
																"src": "11732:109:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11725:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11725:3:12"
																}
															]
														},
														{
															"nativeSrc": "11850:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11850:20:12",
															"value": {
																"name": "pos",
																"nativeSrc": "11867:3:12",
																"nodeType": "YulIdentifier",
																"src": "11867:3:12"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nativeSrc": "11854:9:12",
																	"nodeType": "YulTypedName",
																	"src": "11854:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11879:39:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11879:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11895:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11895:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11904:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11904:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11912:4:12",
																				"nodeType": "YulLiteral",
																				"src": "11912:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "11900:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11900:3:12"
																		},
																		"nativeSrc": "11900:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11900:17:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11891:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11891:3:12"
																},
																"nativeSrc": "11891:27:12",
																"nodeType": "YulFunctionCall",
																"src": "11891:27:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "11883:4:12",
																	"nodeType": "YulTypedName",
																	"src": "11883:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11927:94:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11927:94:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12015:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12015:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "11942:72:12",
																	"nodeType": "YulIdentifier",
																	"src": "11942:72:12"
																},
																"nativeSrc": "11942:79:12",
																"nodeType": "YulFunctionCall",
																"src": "11942:79:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "11931:7:12",
																	"nodeType": "YulTypedName",
																	"src": "11931:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12030:21:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12030:21:12",
															"value": {
																"name": "baseRef",
																"nativeSrc": "12044:7:12",
																"nodeType": "YulIdentifier",
																"src": "12044:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "12034:6:12",
																	"nodeType": "YulTypedName",
																	"src": "12034:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12120:375:12",
																"nodeType": "YulBlock",
																"src": "12120:375:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "12141:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12141:3:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "12150:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "12150:4:12"
																						},
																						{
																							"name": "headStart",
																							"nativeSrc": "12156:9:12",
																							"nodeType": "YulIdentifier",
																							"src": "12156:9:12"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "12146:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "12146:3:12"
																					},
																					"nativeSrc": "12146:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12146:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12134:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12134:6:12"
																			},
																			"nativeSrc": "12134:33:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12134:33:12"
																		},
																		"nativeSrc": "12134:33:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12134:33:12"
																	},
																	{
																		"nativeSrc": "12180:34:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12180:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "12207:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "12207:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "12201:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "12201:5:12"
																			},
																			"nativeSrc": "12201:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12201:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "12184:13:12",
																				"nodeType": "YulTypedName",
																				"src": "12184:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12227:118:12",
																		"nodeType": "YulAssignment",
																		"src": "12227:118:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "12325:13:12",
																					"nodeType": "YulIdentifier",
																					"src": "12325:13:12"
																				},
																				{
																					"name": "tail",
																					"nativeSrc": "12340:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "12340:4:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Haiku_$2803_memory_ptr_to_t_struct$_Haiku_$2803_memory_ptr",
																				"nativeSrc": "12235:89:12",
																				"nodeType": "YulIdentifier",
																				"src": "12235:89:12"
																			},
																			"nativeSrc": "12235:110:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12235:110:12"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nativeSrc": "12227:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12227:4:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12358:93:12",
																		"nodeType": "YulAssignment",
																		"src": "12358:93:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "12444:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "12444:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "12368:75:12",
																				"nodeType": "YulIdentifier",
																				"src": "12368:75:12"
																			},
																			"nativeSrc": "12368:83:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12368:83:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "12358:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12358:6:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12464:21:12",
																		"nodeType": "YulAssignment",
																		"src": "12464:21:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "12475:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12475:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12480:4:12",
																					"nodeType": "YulLiteral",
																					"src": "12480:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12471:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12471:3:12"
																			},
																			"nativeSrc": "12471:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12471:14:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "12464:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12464:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "12082:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "12082:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12085:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12085:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12079:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12079:2:12"
																},
																"nativeSrc": "12079:13:12",
																"nodeType": "YulFunctionCall",
																"src": "12079:13:12"
															},
															"nativeSrc": "12060:435:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12093:18:12",
																"nodeType": "YulBlock",
																"src": "12093:18:12",
																"statements": [
																	{
																		"nativeSrc": "12095:14:12",
																		"nodeType": "YulAssignment",
																		"src": "12095:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "12104:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "12104:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12107:1:12",
																					"nodeType": "YulLiteral",
																					"src": "12107:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12100:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12100:3:12"
																			},
																			"nativeSrc": "12100:9:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12100:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "12095:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "12095:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12064:14:12",
																"nodeType": "YulBlock",
																"src": "12064:14:12",
																"statements": [
																	{
																		"nativeSrc": "12066:10:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12066:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "12075:1:12",
																			"nodeType": "YulLiteral",
																			"src": "12075:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "12070:1:12",
																				"nodeType": "YulTypedName",
																				"src": "12070:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12060:435:12"
														},
														{
															"nativeSrc": "12504:11:12",
															"nodeType": "YulAssignment",
															"src": "12504:11:12",
															"value": {
																"name": "tail",
																"nativeSrc": "12511:4:12",
																"nodeType": "YulIdentifier",
																"src": "12511:4:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12504:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12504:3:12"
																}
															]
														},
														{
															"nativeSrc": "12524:10:12",
															"nodeType": "YulAssignment",
															"src": "12524:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "12531:3:12",
																"nodeType": "YulIdentifier",
																"src": "12531:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12524:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12524:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "11445:1095:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11594:5:12",
														"nodeType": "YulTypedName",
														"src": "11594:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11601:3:12",
														"nodeType": "YulTypedName",
														"src": "11601:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11610:3:12",
														"nodeType": "YulTypedName",
														"src": "11610:3:12",
														"type": ""
													}
												],
												"src": "11445:1095:12"
											},
											{
												"body": {
													"nativeSrc": "12740:271:12",
													"nodeType": "YulBlock",
													"src": "12740:271:12",
													"statements": [
														{
															"nativeSrc": "12750:26:12",
															"nodeType": "YulAssignment",
															"src": "12750:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12762:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12762:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12773:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12773:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12758:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12758:3:12"
																},
																"nativeSrc": "12758:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12758:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12750:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12750:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12797:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12797:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12808:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12808:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12793:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12793:3:12"
																		},
																		"nativeSrc": "12793:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12793:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12816:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12816:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12822:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12822:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12812:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12812:3:12"
																		},
																		"nativeSrc": "12812:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12812:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12786:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12786:6:12"
																},
																"nativeSrc": "12786:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12786:47:12"
															},
															"nativeSrc": "12786:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12786:47:12"
														},
														{
															"nativeSrc": "12842:162:12",
															"nodeType": "YulAssignment",
															"src": "12842:162:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12990:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12990:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "12999:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12999:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "12850:139:12",
																	"nodeType": "YulIdentifier",
																	"src": "12850:139:12"
																},
																"nativeSrc": "12850:154:12",
																"nodeType": "YulFunctionCall",
																"src": "12850:154:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12842:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12842:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "12546:465:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12712:9:12",
														"nodeType": "YulTypedName",
														"src": "12712:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12724:6:12",
														"nodeType": "YulTypedName",
														"src": "12724:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12735:4:12",
														"nodeType": "YulTypedName",
														"src": "12735:4:12",
														"type": ""
													}
												],
												"src": "12546:465:12"
											},
											{
												"body": {
													"nativeSrc": "13082:53:12",
													"nodeType": "YulBlock",
													"src": "13082:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13099:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13099:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13122:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13122:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "13104:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "13104:17:12"
																		},
																		"nativeSrc": "13104:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13104:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13092:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13092:6:12"
																},
																"nativeSrc": "13092:37:12",
																"nodeType": "YulFunctionCall",
																"src": "13092:37:12"
															},
															"nativeSrc": "13092:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "13092:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "13017:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13070:5:12",
														"nodeType": "YulTypedName",
														"src": "13070:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13077:3:12",
														"nodeType": "YulTypedName",
														"src": "13077:3:12",
														"type": ""
													}
												],
												"src": "13017:118:12"
											},
											{
												"body": {
													"nativeSrc": "13239:124:12",
													"nodeType": "YulBlock",
													"src": "13239:124:12",
													"statements": [
														{
															"nativeSrc": "13249:26:12",
															"nodeType": "YulAssignment",
															"src": "13249:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13261:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13261:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13272:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13272:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13257:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13257:3:12"
																},
																"nativeSrc": "13257:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13257:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13249:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13249:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13329:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13329:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13342:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13342:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13353:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13353:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13338:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13338:3:12"
																		},
																		"nativeSrc": "13338:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13338:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13285:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "13285:43:12"
																},
																"nativeSrc": "13285:71:12",
																"nodeType": "YulFunctionCall",
																"src": "13285:71:12"
															},
															"nativeSrc": "13285:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "13285:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13141:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13211:9:12",
														"nodeType": "YulTypedName",
														"src": "13211:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13223:6:12",
														"nodeType": "YulTypedName",
														"src": "13223:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13234:4:12",
														"nodeType": "YulTypedName",
														"src": "13234:4:12",
														"type": ""
													}
												],
												"src": "13141:222:12"
											},
											{
												"body": {
													"nativeSrc": "13435:263:12",
													"nodeType": "YulBlock",
													"src": "13435:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "13481:83:12",
																"nodeType": "YulBlock",
																"src": "13481:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13483:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "13483:77:12"
																			},
																			"nativeSrc": "13483:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13483:79:12"
																		},
																		"nativeSrc": "13483:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13483:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13456:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13456:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13465:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13465:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13452:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13452:3:12"
																		},
																		"nativeSrc": "13452:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13452:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13477:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13477:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13448:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13448:3:12"
																},
																"nativeSrc": "13448:32:12",
																"nodeType": "YulFunctionCall",
																"src": "13448:32:12"
															},
															"nativeSrc": "13445:119:12",
															"nodeType": "YulIf",
															"src": "13445:119:12"
														},
														{
															"nativeSrc": "13574:117:12",
															"nodeType": "YulBlock",
															"src": "13574:117:12",
															"statements": [
																{
																	"nativeSrc": "13589:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13589:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13603:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13603:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13593:6:12",
																			"nodeType": "YulTypedName",
																			"src": "13593:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13618:63:12",
																	"nodeType": "YulAssignment",
																	"src": "13618:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13653:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "13653:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13664:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "13664:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13649:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13649:3:12"
																				},
																				"nativeSrc": "13649:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13649:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13673:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13673:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13628:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "13628:20:12"
																		},
																		"nativeSrc": "13628:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13628:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13618:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "13618:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "13369:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13405:9:12",
														"nodeType": "YulTypedName",
														"src": "13405:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13416:7:12",
														"nodeType": "YulTypedName",
														"src": "13416:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13428:6:12",
														"nodeType": "YulTypedName",
														"src": "13428:6:12",
														"type": ""
													}
												],
												"src": "13369:329:12"
											},
											{
												"body": {
													"nativeSrc": "13946:584:12",
													"nodeType": "YulBlock",
													"src": "13946:584:12",
													"statements": [
														{
															"nativeSrc": "13956:27:12",
															"nodeType": "YulAssignment",
															"src": "13956:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13968:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13968:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13979:3:12",
																		"nodeType": "YulLiteral",
																		"src": "13979:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13964:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13964:3:12"
																},
																"nativeSrc": "13964:19:12",
																"nodeType": "YulFunctionCall",
																"src": "13964:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13956:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13956:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14037:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14037:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14050:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14050:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14061:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14061:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14046:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14046:3:12"
																		},
																		"nativeSrc": "14046:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14046:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13993:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "13993:43:12"
																},
																"nativeSrc": "13993:71:12",
																"nodeType": "YulFunctionCall",
																"src": "13993:71:12"
															},
															"nativeSrc": "13993:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "13993:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14085:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14085:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14096:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14096:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14081:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14081:3:12"
																		},
																		"nativeSrc": "14081:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14081:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14105:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14105:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14111:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14111:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14101:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14101:3:12"
																		},
																		"nativeSrc": "14101:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14101:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14074:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14074:6:12"
																},
																"nativeSrc": "14074:48:12",
																"nodeType": "YulFunctionCall",
																"src": "14074:48:12"
															},
															"nativeSrc": "14074:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "14074:48:12"
														},
														{
															"nativeSrc": "14131:86:12",
															"nodeType": "YulAssignment",
															"src": "14131:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14203:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14203:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14212:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14212:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14139:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "14139:63:12"
																},
																"nativeSrc": "14139:78:12",
																"nodeType": "YulFunctionCall",
																"src": "14139:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14131:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14131:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14238:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14238:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14249:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14249:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14234:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14234:3:12"
																		},
																		"nativeSrc": "14234:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14234:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14258:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14258:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14264:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14264:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14254:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14254:3:12"
																		},
																		"nativeSrc": "14254:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14254:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14227:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14227:6:12"
																},
																"nativeSrc": "14227:48:12",
																"nodeType": "YulFunctionCall",
																"src": "14227:48:12"
															},
															"nativeSrc": "14227:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "14227:48:12"
														},
														{
															"nativeSrc": "14284:86:12",
															"nodeType": "YulAssignment",
															"src": "14284:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14356:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14356:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14365:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14365:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14292:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "14292:63:12"
																},
																"nativeSrc": "14292:78:12",
																"nodeType": "YulFunctionCall",
																"src": "14292:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14284:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14284:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14391:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14391:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14402:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14402:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14387:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14387:3:12"
																		},
																		"nativeSrc": "14387:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14387:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14411:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14411:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14417:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14417:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14407:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14407:3:12"
																		},
																		"nativeSrc": "14407:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14407:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14380:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14380:6:12"
																},
																"nativeSrc": "14380:48:12",
																"nodeType": "YulFunctionCall",
																"src": "14380:48:12"
															},
															"nativeSrc": "14380:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "14380:48:12"
														},
														{
															"nativeSrc": "14437:86:12",
															"nodeType": "YulAssignment",
															"src": "14437:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14509:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14509:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14518:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14518:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14445:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "14445:63:12"
																},
																"nativeSrc": "14445:78:12",
																"nodeType": "YulFunctionCall",
																"src": "14445:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14437:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14437:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13704:826:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13894:9:12",
														"nodeType": "YulTypedName",
														"src": "13894:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13906:6:12",
														"nodeType": "YulTypedName",
														"src": "13906:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13914:6:12",
														"nodeType": "YulTypedName",
														"src": "13914:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13922:6:12",
														"nodeType": "YulTypedName",
														"src": "13922:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13930:6:12",
														"nodeType": "YulTypedName",
														"src": "13930:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13941:4:12",
														"nodeType": "YulTypedName",
														"src": "13941:4:12",
														"type": ""
													}
												],
												"src": "13704:826:12"
											},
											{
												"body": {
													"nativeSrc": "14576:76:12",
													"nodeType": "YulBlock",
													"src": "14576:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "14630:16:12",
																"nodeType": "YulBlock",
																"src": "14630:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14639:1:12",
																					"nodeType": "YulLiteral",
																					"src": "14639:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14642:1:12",
																					"nodeType": "YulLiteral",
																					"src": "14642:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14632:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14632:6:12"
																			},
																			"nativeSrc": "14632:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14632:12:12"
																		},
																		"nativeSrc": "14632:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14632:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14599:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "14599:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14621:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "14621:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14606:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "14606:14:12"
																				},
																				"nativeSrc": "14606:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14606:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14596:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "14596:2:12"
																		},
																		"nativeSrc": "14596:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14596:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14589:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14589:6:12"
																},
																"nativeSrc": "14589:40:12",
																"nodeType": "YulFunctionCall",
																"src": "14589:40:12"
															},
															"nativeSrc": "14586:60:12",
															"nodeType": "YulIf",
															"src": "14586:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "14536:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14569:5:12",
														"nodeType": "YulTypedName",
														"src": "14569:5:12",
														"type": ""
													}
												],
												"src": "14536:116:12"
											},
											{
												"body": {
													"nativeSrc": "14707:84:12",
													"nodeType": "YulBlock",
													"src": "14707:84:12",
													"statements": [
														{
															"nativeSrc": "14717:29:12",
															"nodeType": "YulAssignment",
															"src": "14717:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14739:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14739:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "14726:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "14726:12:12"
																},
																"nativeSrc": "14726:20:12",
																"nodeType": "YulFunctionCall",
																"src": "14726:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14717:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "14717:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14779:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "14779:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "14755:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "14755:23:12"
																},
																"nativeSrc": "14755:30:12",
																"nodeType": "YulFunctionCall",
																"src": "14755:30:12"
															},
															"nativeSrc": "14755:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "14755:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "14658:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14685:6:12",
														"nodeType": "YulTypedName",
														"src": "14685:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14693:3:12",
														"nodeType": "YulTypedName",
														"src": "14693:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14701:5:12",
														"nodeType": "YulTypedName",
														"src": "14701:5:12",
														"type": ""
													}
												],
												"src": "14658:133:12"
											},
											{
												"body": {
													"nativeSrc": "14877:388:12",
													"nodeType": "YulBlock",
													"src": "14877:388:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "14923:83:12",
																"nodeType": "YulBlock",
																"src": "14923:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14925:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "14925:77:12"
																			},
																			"nativeSrc": "14925:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14925:79:12"
																		},
																		"nativeSrc": "14925:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14925:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14898:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "14898:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14907:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14907:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14894:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14894:3:12"
																		},
																		"nativeSrc": "14894:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14894:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14919:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14919:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14890:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14890:3:12"
																},
																"nativeSrc": "14890:32:12",
																"nodeType": "YulFunctionCall",
																"src": "14890:32:12"
															},
															"nativeSrc": "14887:119:12",
															"nodeType": "YulIf",
															"src": "14887:119:12"
														},
														{
															"nativeSrc": "15016:117:12",
															"nodeType": "YulBlock",
															"src": "15016:117:12",
															"statements": [
																{
																	"nativeSrc": "15031:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15031:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15045:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15045:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15035:6:12",
																			"nodeType": "YulTypedName",
																			"src": "15035:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15060:63:12",
																	"nodeType": "YulAssignment",
																	"src": "15060:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15095:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "15095:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15106:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "15106:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15091:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "15091:3:12"
																				},
																				"nativeSrc": "15091:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "15091:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15115:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15115:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15070:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "15070:20:12"
																		},
																		"nativeSrc": "15070:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15070:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15060:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "15060:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15143:115:12",
															"nodeType": "YulBlock",
															"src": "15143:115:12",
															"statements": [
																{
																	"nativeSrc": "15158:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15158:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15172:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15172:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15162:6:12",
																			"nodeType": "YulTypedName",
																			"src": "15162:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15188:60:12",
																	"nodeType": "YulAssignment",
																	"src": "15188:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15220:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "15220:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15231:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "15231:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15216:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "15216:3:12"
																				},
																				"nativeSrc": "15216:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "15216:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15240:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "15240:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "15198:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "15198:17:12"
																		},
																		"nativeSrc": "15198:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15198:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "15188:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "15188:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "14797:468:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14839:9:12",
														"nodeType": "YulTypedName",
														"src": "14839:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14850:7:12",
														"nodeType": "YulTypedName",
														"src": "14850:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14862:6:12",
														"nodeType": "YulTypedName",
														"src": "14862:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14870:6:12",
														"nodeType": "YulTypedName",
														"src": "14870:6:12",
														"type": ""
													}
												],
												"src": "14797:468:12"
											},
											{
												"body": {
													"nativeSrc": "15337:241:12",
													"nodeType": "YulBlock",
													"src": "15337:241:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "15442:22:12",
																"nodeType": "YulBlock",
																"src": "15442:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "15444:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "15444:16:12"
																			},
																			"nativeSrc": "15444:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15444:18:12"
																		},
																		"nativeSrc": "15444:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15444:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "15414:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15414:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15422:18:12",
																		"nodeType": "YulLiteral",
																		"src": "15422:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15411:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15411:2:12"
																},
																"nativeSrc": "15411:30:12",
																"nodeType": "YulFunctionCall",
																"src": "15411:30:12"
															},
															"nativeSrc": "15408:56:12",
															"nodeType": "YulIf",
															"src": "15408:56:12"
														},
														{
															"nativeSrc": "15474:37:12",
															"nodeType": "YulAssignment",
															"src": "15474:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "15504:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15504:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "15482:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "15482:21:12"
																},
																"nativeSrc": "15482:29:12",
																"nodeType": "YulFunctionCall",
																"src": "15482:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "15474:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15474:4:12"
																}
															]
														},
														{
															"nativeSrc": "15548:23:12",
															"nodeType": "YulAssignment",
															"src": "15548:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "15560:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15560:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15566:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15566:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15556:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15556:3:12"
																},
																"nativeSrc": "15556:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15556:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "15548:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15548:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "15271:307:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "15321:6:12",
														"nodeType": "YulTypedName",
														"src": "15321:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "15332:4:12",
														"nodeType": "YulTypedName",
														"src": "15332:4:12",
														"type": ""
													}
												],
												"src": "15271:307:12"
											},
											{
												"body": {
													"nativeSrc": "15667:340:12",
													"nodeType": "YulBlock",
													"src": "15667:340:12",
													"statements": [
														{
															"nativeSrc": "15677:74:12",
															"nodeType": "YulAssignment",
															"src": "15677:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15743:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15743:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "15702:40:12",
																			"nodeType": "YulIdentifier",
																			"src": "15702:40:12"
																		},
																		"nativeSrc": "15702:48:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15702:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "15686:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "15686:15:12"
																},
																"nativeSrc": "15686:65:12",
																"nodeType": "YulFunctionCall",
																"src": "15686:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "15677:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "15677:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "15767:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15767:5:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15774:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15774:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15760:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15760:6:12"
																},
																"nativeSrc": "15760:21:12",
																"nodeType": "YulFunctionCall",
																"src": "15760:21:12"
															},
															"nativeSrc": "15760:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "15760:21:12"
														},
														{
															"nativeSrc": "15790:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "15790:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "15805:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15805:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15812:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15812:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15801:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15801:3:12"
																},
																"nativeSrc": "15801:16:12",
																"nodeType": "YulFunctionCall",
																"src": "15801:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "15794:3:12",
																	"nodeType": "YulTypedName",
																	"src": "15794:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15855:83:12",
																"nodeType": "YulBlock",
																"src": "15855:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "15857:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "15857:77:12"
																			},
																			"nativeSrc": "15857:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15857:79:12"
																		},
																		"nativeSrc": "15857:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15857:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "15836:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "15836:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "15841:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15841:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15832:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15832:3:12"
																		},
																		"nativeSrc": "15832:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15832:16:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15850:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15850:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15829:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15829:2:12"
																},
																"nativeSrc": "15829:25:12",
																"nodeType": "YulFunctionCall",
																"src": "15829:25:12"
															},
															"nativeSrc": "15826:112:12",
															"nodeType": "YulIf",
															"src": "15826:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "15984:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15984:3:12"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "15989:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15989:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15994:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15994:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "15947:36:12",
																	"nodeType": "YulIdentifier",
																	"src": "15947:36:12"
																},
																"nativeSrc": "15947:54:12",
																"nodeType": "YulFunctionCall",
																"src": "15947:54:12"
															},
															"nativeSrc": "15947:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "15947:54:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "15584:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "15640:3:12",
														"nodeType": "YulTypedName",
														"src": "15640:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15645:6:12",
														"nodeType": "YulTypedName",
														"src": "15645:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15653:3:12",
														"nodeType": "YulTypedName",
														"src": "15653:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "15661:5:12",
														"nodeType": "YulTypedName",
														"src": "15661:5:12",
														"type": ""
													}
												],
												"src": "15584:423:12"
											},
											{
												"body": {
													"nativeSrc": "16087:277:12",
													"nodeType": "YulBlock",
													"src": "16087:277:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "16136:83:12",
																"nodeType": "YulBlock",
																"src": "16136:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "16138:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "16138:77:12"
																			},
																			"nativeSrc": "16138:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16138:79:12"
																		},
																		"nativeSrc": "16138:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16138:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "16115:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16115:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16123:4:12",
																						"nodeType": "YulLiteral",
																						"src": "16123:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16111:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16111:3:12"
																				},
																				"nativeSrc": "16111:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16111:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "16130:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "16130:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "16107:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16107:3:12"
																		},
																		"nativeSrc": "16107:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16107:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16100:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16100:6:12"
																},
																"nativeSrc": "16100:35:12",
																"nodeType": "YulFunctionCall",
																"src": "16100:35:12"
															},
															"nativeSrc": "16097:122:12",
															"nodeType": "YulIf",
															"src": "16097:122:12"
														},
														{
															"nativeSrc": "16228:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "16228:34:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16255:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16255:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "16242:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "16242:12:12"
																},
																"nativeSrc": "16242:20:12",
																"nodeType": "YulFunctionCall",
																"src": "16242:20:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16232:6:12",
																	"nodeType": "YulTypedName",
																	"src": "16232:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16271:87:12",
															"nodeType": "YulAssignment",
															"src": "16271:87:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "16331:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16331:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16339:4:12",
																				"nodeType": "YulLiteral",
																				"src": "16339:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16327:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16327:3:12"
																		},
																		"nativeSrc": "16327:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16327:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16346:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16346:6:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "16354:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16354:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "16280:46:12",
																	"nodeType": "YulIdentifier",
																	"src": "16280:46:12"
																},
																"nativeSrc": "16280:78:12",
																"nodeType": "YulFunctionCall",
																"src": "16280:78:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "16271:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "16271:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "16026:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16065:6:12",
														"nodeType": "YulTypedName",
														"src": "16065:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16073:3:12",
														"nodeType": "YulTypedName",
														"src": "16073:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "16081:5:12",
														"nodeType": "YulTypedName",
														"src": "16081:5:12",
														"type": ""
													}
												],
												"src": "16026:338:12"
											},
											{
												"body": {
													"nativeSrc": "16496:817:12",
													"nodeType": "YulBlock",
													"src": "16496:817:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "16543:83:12",
																"nodeType": "YulBlock",
																"src": "16543:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16545:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "16545:77:12"
																			},
																			"nativeSrc": "16545:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16545:79:12"
																		},
																		"nativeSrc": "16545:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16545:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16517:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16517:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16526:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16526:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16513:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16513:3:12"
																		},
																		"nativeSrc": "16513:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16513:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16538:3:12",
																		"nodeType": "YulLiteral",
																		"src": "16538:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16509:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16509:3:12"
																},
																"nativeSrc": "16509:33:12",
																"nodeType": "YulFunctionCall",
																"src": "16509:33:12"
															},
															"nativeSrc": "16506:120:12",
															"nodeType": "YulIf",
															"src": "16506:120:12"
														},
														{
															"nativeSrc": "16636:117:12",
															"nodeType": "YulBlock",
															"src": "16636:117:12",
															"statements": [
																{
																	"nativeSrc": "16651:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16651:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16665:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16665:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16655:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16655:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16680:63:12",
																	"nodeType": "YulAssignment",
																	"src": "16680:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16715:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16715:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16726:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16726:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16711:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16711:3:12"
																				},
																				"nativeSrc": "16711:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16711:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16735:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16735:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16690:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "16690:20:12"
																		},
																		"nativeSrc": "16690:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16690:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16680:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16680:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16763:118:12",
															"nodeType": "YulBlock",
															"src": "16763:118:12",
															"statements": [
																{
																	"nativeSrc": "16778:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16778:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16792:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16792:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16782:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16782:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16808:63:12",
																	"nodeType": "YulAssignment",
																	"src": "16808:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16843:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16843:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16854:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16854:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16839:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16839:3:12"
																				},
																				"nativeSrc": "16839:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16839:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16863:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16863:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16818:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "16818:20:12"
																		},
																		"nativeSrc": "16818:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16818:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16808:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16808:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16891:118:12",
															"nodeType": "YulBlock",
															"src": "16891:118:12",
															"statements": [
																{
																	"nativeSrc": "16906:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16906:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16920:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16920:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16910:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16910:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16936:63:12",
																	"nodeType": "YulAssignment",
																	"src": "16936:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16971:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16971:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16982:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "16982:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16967:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16967:3:12"
																				},
																				"nativeSrc": "16967:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16967:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16991:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16991:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16946:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "16946:20:12"
																		},
																		"nativeSrc": "16946:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16946:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "16936:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16936:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17019:287:12",
															"nodeType": "YulBlock",
															"src": "17019:287:12",
															"statements": [
																{
																	"nativeSrc": "17034:46:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17034:46:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17065:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "17065:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17076:2:12",
																						"nodeType": "YulLiteral",
																						"src": "17076:2:12",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17061:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17061:3:12"
																				},
																				"nativeSrc": "17061:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17061:18:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "17048:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "17048:12:12"
																		},
																		"nativeSrc": "17048:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17048:32:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17038:6:12",
																			"nodeType": "YulTypedName",
																			"src": "17038:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "17127:83:12",
																		"nodeType": "YulBlock",
																		"src": "17127:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "17129:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "17129:77:12"
																					},
																					"nativeSrc": "17129:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "17129:79:12"
																				},
																				"nativeSrc": "17129:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "17129:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "17099:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17099:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17107:18:12",
																				"nodeType": "YulLiteral",
																				"src": "17107:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "17096:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "17096:2:12"
																		},
																		"nativeSrc": "17096:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17096:30:12"
																	},
																	"nativeSrc": "17093:117:12",
																	"nodeType": "YulIf",
																	"src": "17093:117:12"
																},
																{
																	"nativeSrc": "17224:72:12",
																	"nodeType": "YulAssignment",
																	"src": "17224:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17268:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "17268:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17279:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "17279:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17264:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17264:3:12"
																				},
																				"nativeSrc": "17264:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17264:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17288:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17288:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "17234:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "17234:29:12"
																		},
																		"nativeSrc": "17234:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17234:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "17224:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "17224:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "16370:943:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16442:9:12",
														"nodeType": "YulTypedName",
														"src": "16442:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16453:7:12",
														"nodeType": "YulTypedName",
														"src": "16453:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16465:6:12",
														"nodeType": "YulTypedName",
														"src": "16465:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16473:6:12",
														"nodeType": "YulTypedName",
														"src": "16473:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16481:6:12",
														"nodeType": "YulTypedName",
														"src": "16481:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16489:6:12",
														"nodeType": "YulTypedName",
														"src": "16489:6:12",
														"type": ""
													}
												],
												"src": "16370:943:12"
											},
											{
												"body": {
													"nativeSrc": "17402:391:12",
													"nodeType": "YulBlock",
													"src": "17402:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "17448:83:12",
																"nodeType": "YulBlock",
																"src": "17448:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17450:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "17450:77:12"
																			},
																			"nativeSrc": "17450:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17450:79:12"
																		},
																		"nativeSrc": "17450:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17450:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17423:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17423:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17432:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17432:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17419:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17419:3:12"
																		},
																		"nativeSrc": "17419:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17419:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17444:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17444:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17415:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17415:3:12"
																},
																"nativeSrc": "17415:32:12",
																"nodeType": "YulFunctionCall",
																"src": "17415:32:12"
															},
															"nativeSrc": "17412:119:12",
															"nodeType": "YulIf",
															"src": "17412:119:12"
														},
														{
															"nativeSrc": "17541:117:12",
															"nodeType": "YulBlock",
															"src": "17541:117:12",
															"statements": [
																{
																	"nativeSrc": "17556:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17556:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17570:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17570:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17560:6:12",
																			"nodeType": "YulTypedName",
																			"src": "17560:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17585:63:12",
																	"nodeType": "YulAssignment",
																	"src": "17585:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17620:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "17620:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17631:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "17631:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17616:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17616:3:12"
																				},
																				"nativeSrc": "17616:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17616:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17640:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17640:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17595:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "17595:20:12"
																		},
																		"nativeSrc": "17595:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17595:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17585:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "17585:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17668:118:12",
															"nodeType": "YulBlock",
															"src": "17668:118:12",
															"statements": [
																{
																	"nativeSrc": "17683:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17683:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17697:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17697:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17687:6:12",
																			"nodeType": "YulTypedName",
																			"src": "17687:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17713:63:12",
																	"nodeType": "YulAssignment",
																	"src": "17713:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17748:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "17748:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17759:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "17759:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17744:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "17744:3:12"
																				},
																				"nativeSrc": "17744:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17744:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17768:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17768:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17723:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "17723:20:12"
																		},
																		"nativeSrc": "17723:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17723:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17713:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "17713:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "17319:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17364:9:12",
														"nodeType": "YulTypedName",
														"src": "17364:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17375:7:12",
														"nodeType": "YulTypedName",
														"src": "17375:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17387:6:12",
														"nodeType": "YulTypedName",
														"src": "17387:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17395:6:12",
														"nodeType": "YulTypedName",
														"src": "17395:6:12",
														"type": ""
													}
												],
												"src": "17319:474:12"
											},
											{
												"body": {
													"nativeSrc": "17827:152:12",
													"nodeType": "YulBlock",
													"src": "17827:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17844:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17844:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17847:77:12",
																		"nodeType": "YulLiteral",
																		"src": "17847:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17837:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17837:6:12"
																},
																"nativeSrc": "17837:88:12",
																"nodeType": "YulFunctionCall",
																"src": "17837:88:12"
															},
															"nativeSrc": "17837:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "17837:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17941:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17941:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17944:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17944:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17934:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17934:6:12"
																},
																"nativeSrc": "17934:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17934:15:12"
															},
															"nativeSrc": "17934:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17934:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17965:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17965:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17968:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17968:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17958:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17958:6:12"
																},
																"nativeSrc": "17958:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17958:15:12"
															},
															"nativeSrc": "17958:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17958:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "17799:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "17799:180:12"
											},
											{
												"body": {
													"nativeSrc": "18036:269:12",
													"nodeType": "YulBlock",
													"src": "18036:269:12",
													"statements": [
														{
															"nativeSrc": "18046:22:12",
															"nodeType": "YulAssignment",
															"src": "18046:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18060:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18060:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18066:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18066:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18056:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18056:3:12"
																},
																"nativeSrc": "18056:12:12",
																"nodeType": "YulFunctionCall",
																"src": "18056:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18046:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18046:6:12"
																}
															]
														},
														{
															"nativeSrc": "18077:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "18077:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18107:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18107:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18113:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18113:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18103:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18103:3:12"
																},
																"nativeSrc": "18103:12:12",
																"nodeType": "YulFunctionCall",
																"src": "18103:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "18081:18:12",
																	"nodeType": "YulTypedName",
																	"src": "18081:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18154:51:12",
																"nodeType": "YulBlock",
																"src": "18154:51:12",
																"statements": [
																	{
																		"nativeSrc": "18168:27:12",
																		"nodeType": "YulAssignment",
																		"src": "18168:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "18182:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "18182:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18190:4:12",
																					"nodeType": "YulLiteral",
																					"src": "18190:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "18178:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "18178:3:12"
																			},
																			"nativeSrc": "18178:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18178:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "18168:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18168:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "18134:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "18134:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18127:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18127:6:12"
																},
																"nativeSrc": "18127:26:12",
																"nodeType": "YulFunctionCall",
																"src": "18127:26:12"
															},
															"nativeSrc": "18124:81:12",
															"nodeType": "YulIf",
															"src": "18124:81:12"
														},
														{
															"body": {
																"nativeSrc": "18257:42:12",
																"nodeType": "YulBlock",
																"src": "18257:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "18271:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "18271:16:12"
																			},
																			"nativeSrc": "18271:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18271:18:12"
																		},
																		"nativeSrc": "18271:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "18271:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "18221:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "18221:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "18244:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18244:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18252:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18252:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "18241:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "18241:2:12"
																		},
																		"nativeSrc": "18241:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18241:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18218:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "18218:2:12"
																},
																"nativeSrc": "18218:38:12",
																"nodeType": "YulFunctionCall",
																"src": "18218:38:12"
															},
															"nativeSrc": "18215:84:12",
															"nodeType": "YulIf",
															"src": "18215:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "17985:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18020:4:12",
														"nodeType": "YulTypedName",
														"src": "18020:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18029:6:12",
														"nodeType": "YulTypedName",
														"src": "18029:6:12",
														"type": ""
													}
												],
												"src": "17985:320:12"
											},
											{
												"body": {
													"nativeSrc": "18339:152:12",
													"nodeType": "YulBlock",
													"src": "18339:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18356:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18356:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18359:77:12",
																		"nodeType": "YulLiteral",
																		"src": "18359:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18349:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18349:6:12"
																},
																"nativeSrc": "18349:88:12",
																"nodeType": "YulFunctionCall",
																"src": "18349:88:12"
															},
															"nativeSrc": "18349:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "18349:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18453:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18453:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18456:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18456:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18446:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18446:6:12"
																},
																"nativeSrc": "18446:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18446:15:12"
															},
															"nativeSrc": "18446:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18446:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18477:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18477:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18480:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18480:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18470:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18470:6:12"
																},
																"nativeSrc": "18470:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18470:15:12"
															},
															"nativeSrc": "18470:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18470:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "18311:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "18311:180:12"
											},
											{
												"body": {
													"nativeSrc": "18651:288:12",
													"nodeType": "YulBlock",
													"src": "18651:288:12",
													"statements": [
														{
															"nativeSrc": "18661:26:12",
															"nodeType": "YulAssignment",
															"src": "18661:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18673:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18673:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18684:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18684:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18669:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18669:3:12"
																},
																"nativeSrc": "18669:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18669:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18661:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18661:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18741:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18754:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18754:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18765:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18765:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18750:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18750:3:12"
																		},
																		"nativeSrc": "18750:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18750:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18697:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18697:43:12"
																},
																"nativeSrc": "18697:71:12",
																"nodeType": "YulFunctionCall",
																"src": "18697:71:12"
															},
															"nativeSrc": "18697:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "18697:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18822:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18822:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18835:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18835:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18846:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18846:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18831:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18831:3:12"
																		},
																		"nativeSrc": "18831:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18831:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18778:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18778:43:12"
																},
																"nativeSrc": "18778:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18778:72:12"
															},
															"nativeSrc": "18778:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18778:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18904:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18904:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18917:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18917:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18928:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18928:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18913:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18913:3:12"
																		},
																		"nativeSrc": "18913:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18913:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18860:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18860:43:12"
																},
																"nativeSrc": "18860:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18860:72:12"
															},
															"nativeSrc": "18860:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18860:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "18497:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18607:9:12",
														"nodeType": "YulTypedName",
														"src": "18607:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18619:6:12",
														"nodeType": "YulTypedName",
														"src": "18619:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18627:6:12",
														"nodeType": "YulTypedName",
														"src": "18627:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18635:6:12",
														"nodeType": "YulTypedName",
														"src": "18635:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18646:4:12",
														"nodeType": "YulTypedName",
														"src": "18646:4:12",
														"type": ""
													}
												],
												"src": "18497:442:12"
											},
											{
												"body": {
													"nativeSrc": "19051:58:12",
													"nodeType": "YulBlock",
													"src": "19051:58:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19073:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "19073:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19081:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19081:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19069:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19069:3:12"
																		},
																		"nativeSrc": "19069:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19069:14:12"
																	},
																	{
																		"hexValue": "4e6f206d6f7265206861696b7573",
																		"kind": "string",
																		"nativeSrc": "19085:16:12",
																		"nodeType": "YulLiteral",
																		"src": "19085:16:12",
																		"type": "",
																		"value": "No more haikus"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19062:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19062:6:12"
																},
																"nativeSrc": "19062:40:12",
																"nodeType": "YulFunctionCall",
																"src": "19062:40:12"
															},
															"nativeSrc": "19062:40:12",
															"nodeType": "YulExpressionStatement",
															"src": "19062:40:12"
														}
													]
												},
												"name": "store_literal_in_memory_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64",
												"nativeSrc": "18945:164:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19043:6:12",
														"nodeType": "YulTypedName",
														"src": "19043:6:12",
														"type": ""
													}
												],
												"src": "18945:164:12"
											},
											{
												"body": {
													"nativeSrc": "19261:220:12",
													"nodeType": "YulBlock",
													"src": "19261:220:12",
													"statements": [
														{
															"nativeSrc": "19271:74:12",
															"nodeType": "YulAssignment",
															"src": "19271:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19337:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19337:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19342:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19342:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19278:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "19278:58:12"
																},
																"nativeSrc": "19278:67:12",
																"nodeType": "YulFunctionCall",
																"src": "19278:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19271:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19271:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19443:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19443:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64",
																	"nativeSrc": "19354:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "19354:88:12"
																},
																"nativeSrc": "19354:93:12",
																"nodeType": "YulFunctionCall",
																"src": "19354:93:12"
															},
															"nativeSrc": "19354:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "19354:93:12"
														},
														{
															"nativeSrc": "19456:19:12",
															"nodeType": "YulAssignment",
															"src": "19456:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19467:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19467:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19472:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19472:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19463:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19463:3:12"
																},
																"nativeSrc": "19463:12:12",
																"nodeType": "YulFunctionCall",
																"src": "19463:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19456:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19456:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19115:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19249:3:12",
														"nodeType": "YulTypedName",
														"src": "19249:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19257:3:12",
														"nodeType": "YulTypedName",
														"src": "19257:3:12",
														"type": ""
													}
												],
												"src": "19115:366:12"
											},
											{
												"body": {
													"nativeSrc": "19658:248:12",
													"nodeType": "YulBlock",
													"src": "19658:248:12",
													"statements": [
														{
															"nativeSrc": "19668:26:12",
															"nodeType": "YulAssignment",
															"src": "19668:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19680:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19680:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19691:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19691:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19676:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19676:3:12"
																},
																"nativeSrc": "19676:18:12",
																"nodeType": "YulFunctionCall",
																"src": "19676:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19668:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19668:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19715:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19715:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19726:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19726:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19711:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19711:3:12"
																		},
																		"nativeSrc": "19711:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19711:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19734:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19734:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19740:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19740:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19730:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19730:3:12"
																		},
																		"nativeSrc": "19730:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19730:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19704:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19704:6:12"
																},
																"nativeSrc": "19704:47:12",
																"nodeType": "YulFunctionCall",
																"src": "19704:47:12"
															},
															"nativeSrc": "19704:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "19704:47:12"
														},
														{
															"nativeSrc": "19760:139:12",
															"nodeType": "YulAssignment",
															"src": "19760:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19894:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19894:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19768:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "19768:124:12"
																},
																"nativeSrc": "19768:131:12",
																"nodeType": "YulFunctionCall",
																"src": "19768:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19760:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19760:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19487:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19638:9:12",
														"nodeType": "YulTypedName",
														"src": "19638:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19653:4:12",
														"nodeType": "YulTypedName",
														"src": "19653:4:12",
														"type": ""
													}
												],
												"src": "19487:419:12"
											},
											{
												"body": {
													"nativeSrc": "20026:34:12",
													"nodeType": "YulBlock",
													"src": "20026:34:12",
													"statements": [
														{
															"nativeSrc": "20036:18:12",
															"nodeType": "YulAssignment",
															"src": "20036:18:12",
															"value": {
																"name": "pos",
																"nativeSrc": "20051:3:12",
																"nodeType": "YulIdentifier",
																"src": "20051:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20036:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "20036:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "19912:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19998:3:12",
														"nodeType": "YulTypedName",
														"src": "19998:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20003:6:12",
														"nodeType": "YulTypedName",
														"src": "20003:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20014:11:12",
														"nodeType": "YulTypedName",
														"src": "20014:11:12",
														"type": ""
													}
												],
												"src": "19912:148:12"
											},
											{
												"body": {
													"nativeSrc": "20176:280:12",
													"nodeType": "YulBlock",
													"src": "20176:280:12",
													"statements": [
														{
															"nativeSrc": "20186:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "20186:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20233:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "20233:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "20200:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "20200:32:12"
																},
																"nativeSrc": "20200:39:12",
																"nodeType": "YulFunctionCall",
																"src": "20200:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20190:6:12",
																	"nodeType": "YulTypedName",
																	"src": "20190:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20248:96:12",
															"nodeType": "YulAssignment",
															"src": "20248:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20332:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20332:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20337:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20337:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20255:76:12",
																	"nodeType": "YulIdentifier",
																	"src": "20255:76:12"
																},
																"nativeSrc": "20255:89:12",
																"nodeType": "YulFunctionCall",
																"src": "20255:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20248:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20248:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20392:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "20392:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20399:4:12",
																				"nodeType": "YulLiteral",
																				"src": "20399:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20388:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20388:3:12"
																		},
																		"nativeSrc": "20388:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20388:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20406:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20406:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20411:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20411:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "20353:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "20353:34:12"
																},
																"nativeSrc": "20353:65:12",
																"nodeType": "YulFunctionCall",
																"src": "20353:65:12"
															},
															"nativeSrc": "20353:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "20353:65:12"
														},
														{
															"nativeSrc": "20427:23:12",
															"nodeType": "YulAssignment",
															"src": "20427:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20438:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20438:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20443:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20443:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20434:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20434:3:12"
																},
																"nativeSrc": "20434:16:12",
																"nodeType": "YulFunctionCall",
																"src": "20434:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20427:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20427:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20066:390:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20157:5:12",
														"nodeType": "YulTypedName",
														"src": "20157:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20164:3:12",
														"nodeType": "YulTypedName",
														"src": "20164:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20172:3:12",
														"nodeType": "YulTypedName",
														"src": "20172:3:12",
														"type": ""
													}
												],
												"src": "20066:390:12"
											},
											{
												"body": {
													"nativeSrc": "20598:139:12",
													"nodeType": "YulBlock",
													"src": "20598:139:12",
													"statements": [
														{
															"nativeSrc": "20609:102:12",
															"nodeType": "YulAssignment",
															"src": "20609:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20698:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20707:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20707:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20616:81:12",
																	"nodeType": "YulIdentifier",
																	"src": "20616:81:12"
																},
																"nativeSrc": "20616:95:12",
																"nodeType": "YulFunctionCall",
																"src": "20616:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20609:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20609:3:12"
																}
															]
														},
														{
															"nativeSrc": "20721:10:12",
															"nodeType": "YulAssignment",
															"src": "20721:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "20728:3:12",
																"nodeType": "YulIdentifier",
																"src": "20728:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20721:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20721:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "20462:275:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20577:3:12",
														"nodeType": "YulTypedName",
														"src": "20577:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20583:6:12",
														"nodeType": "YulTypedName",
														"src": "20583:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20594:3:12",
														"nodeType": "YulTypedName",
														"src": "20594:3:12",
														"type": ""
													}
												],
												"src": "20462:275:12"
											},
											{
												"body": {
													"nativeSrc": "20797:87:12",
													"nodeType": "YulBlock",
													"src": "20797:87:12",
													"statements": [
														{
															"nativeSrc": "20807:11:12",
															"nodeType": "YulAssignment",
															"src": "20807:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "20815:3:12",
																"nodeType": "YulIdentifier",
																"src": "20815:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20807:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20807:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20835:1:12",
																		"nodeType": "YulLiteral",
																		"src": "20835:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "20838:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20838:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20828:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20828:6:12"
																},
																"nativeSrc": "20828:14:12",
																"nodeType": "YulFunctionCall",
																"src": "20828:14:12"
															},
															"nativeSrc": "20828:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "20828:14:12"
														},
														{
															"nativeSrc": "20851:26:12",
															"nodeType": "YulAssignment",
															"src": "20851:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20869:1:12",
																		"nodeType": "YulLiteral",
																		"src": "20869:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20872:4:12",
																		"nodeType": "YulLiteral",
																		"src": "20872:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "20859:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "20859:9:12"
																},
																"nativeSrc": "20859:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20859:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20851:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20851:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "20743:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "20784:3:12",
														"nodeType": "YulTypedName",
														"src": "20784:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "20792:4:12",
														"nodeType": "YulTypedName",
														"src": "20792:4:12",
														"type": ""
													}
												],
												"src": "20743:141:12"
											},
											{
												"body": {
													"nativeSrc": "20934:49:12",
													"nodeType": "YulBlock",
													"src": "20934:49:12",
													"statements": [
														{
															"nativeSrc": "20944:33:12",
															"nodeType": "YulAssignment",
															"src": "20944:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20962:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "20962:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20969:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20969:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20958:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20958:3:12"
																		},
																		"nativeSrc": "20958:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20958:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20974:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20974:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "20954:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20954:3:12"
																},
																"nativeSrc": "20954:23:12",
																"nodeType": "YulFunctionCall",
																"src": "20954:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20944:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "20890:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20917:5:12",
														"nodeType": "YulTypedName",
														"src": "20917:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "20927:6:12",
														"nodeType": "YulTypedName",
														"src": "20927:6:12",
														"type": ""
													}
												],
												"src": "20890:93:12"
											},
											{
												"body": {
													"nativeSrc": "21042:54:12",
													"nodeType": "YulBlock",
													"src": "21042:54:12",
													"statements": [
														{
															"nativeSrc": "21052:37:12",
															"nodeType": "YulAssignment",
															"src": "21052:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "21077:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21077:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21083:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "21083:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "21073:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21073:3:12"
																},
																"nativeSrc": "21073:16:12",
																"nodeType": "YulFunctionCall",
																"src": "21073:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "21052:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "21052:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "20989:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "21017:4:12",
														"nodeType": "YulTypedName",
														"src": "21017:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "21023:5:12",
														"nodeType": "YulTypedName",
														"src": "21023:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "21033:8:12",
														"nodeType": "YulTypedName",
														"src": "21033:8:12",
														"type": ""
													}
												],
												"src": "20989:107:12"
											},
											{
												"body": {
													"nativeSrc": "21178:317:12",
													"nodeType": "YulBlock",
													"src": "21178:317:12",
													"statements": [
														{
															"nativeSrc": "21188:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "21188:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "21209:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "21209:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21221:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21221:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "21205:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21205:3:12"
																},
																"nativeSrc": "21205:18:12",
																"nodeType": "YulFunctionCall",
																"src": "21205:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "21192:9:12",
																	"nodeType": "YulTypedName",
																	"src": "21192:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21232:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "21232:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "21263:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21263:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21274:66:12",
																		"nodeType": "YulLiteral",
																		"src": "21274:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "21244:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "21244:18:12"
																},
																"nativeSrc": "21244:97:12",
																"nodeType": "YulFunctionCall",
																"src": "21244:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "21236:4:12",
																	"nodeType": "YulTypedName",
																	"src": "21236:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21350:51:12",
															"nodeType": "YulAssignment",
															"src": "21350:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "21381:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21381:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "21392:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "21392:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "21362:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "21362:18:12"
																},
																"nativeSrc": "21362:39:12",
																"nodeType": "YulFunctionCall",
																"src": "21362:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "21350:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "21350:8:12"
																}
															]
														},
														{
															"nativeSrc": "21410:30:12",
															"nodeType": "YulAssignment",
															"src": "21410:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21423:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "21423:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "21434:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21434:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "21430:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21430:3:12"
																		},
																		"nativeSrc": "21430:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21430:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21419:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21419:3:12"
																},
																"nativeSrc": "21419:21:12",
																"nodeType": "YulFunctionCall",
																"src": "21419:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21410:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "21410:5:12"
																}
															]
														},
														{
															"nativeSrc": "21449:40:12",
															"nodeType": "YulAssignment",
															"src": "21449:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21462:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "21462:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "21473:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "21473:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "21483:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21483:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "21469:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21469:3:12"
																		},
																		"nativeSrc": "21469:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21469:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21459:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "21459:2:12"
																},
																"nativeSrc": "21459:30:12",
																"nodeType": "YulFunctionCall",
																"src": "21459:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21449:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21449:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "21102:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21139:5:12",
														"nodeType": "YulTypedName",
														"src": "21139:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "21146:10:12",
														"nodeType": "YulTypedName",
														"src": "21146:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "21158:8:12",
														"nodeType": "YulTypedName",
														"src": "21158:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21171:6:12",
														"nodeType": "YulTypedName",
														"src": "21171:6:12",
														"type": ""
													}
												],
												"src": "21102:393:12"
											},
											{
												"body": {
													"nativeSrc": "21533:28:12",
													"nodeType": "YulBlock",
													"src": "21533:28:12",
													"statements": [
														{
															"nativeSrc": "21543:12:12",
															"nodeType": "YulAssignment",
															"src": "21543:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "21550:5:12",
																"nodeType": "YulIdentifier",
																"src": "21550:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21543:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21543:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "21501:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21519:5:12",
														"nodeType": "YulTypedName",
														"src": "21519:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21529:3:12",
														"nodeType": "YulTypedName",
														"src": "21529:3:12",
														"type": ""
													}
												],
												"src": "21501:60:12"
											},
											{
												"body": {
													"nativeSrc": "21627:82:12",
													"nodeType": "YulBlock",
													"src": "21627:82:12",
													"statements": [
														{
															"nativeSrc": "21637:66:12",
															"nodeType": "YulAssignment",
															"src": "21637:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21695:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "21695:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "21677:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "21677:17:12"
																				},
																				"nativeSrc": "21677:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "21677:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "21668:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "21668:8:12"
																		},
																		"nativeSrc": "21668:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21668:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21650:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "21650:17:12"
																},
																"nativeSrc": "21650:53:12",
																"nodeType": "YulFunctionCall",
																"src": "21650:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "21637:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "21637:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "21567:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21607:5:12",
														"nodeType": "YulTypedName",
														"src": "21607:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "21617:9:12",
														"nodeType": "YulTypedName",
														"src": "21617:9:12",
														"type": ""
													}
												],
												"src": "21567:142:12"
											},
											{
												"body": {
													"nativeSrc": "21762:28:12",
													"nodeType": "YulBlock",
													"src": "21762:28:12",
													"statements": [
														{
															"nativeSrc": "21772:12:12",
															"nodeType": "YulAssignment",
															"src": "21772:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "21779:5:12",
																"nodeType": "YulIdentifier",
																"src": "21779:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21772:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "21715:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21748:5:12",
														"nodeType": "YulTypedName",
														"src": "21748:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21758:3:12",
														"nodeType": "YulTypedName",
														"src": "21758:3:12",
														"type": ""
													}
												],
												"src": "21715:75:12"
											},
											{
												"body": {
													"nativeSrc": "21872:193:12",
													"nodeType": "YulBlock",
													"src": "21872:193:12",
													"statements": [
														{
															"nativeSrc": "21882:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "21882:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "21937:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "21937:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "21906:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "21906:30:12"
																},
																"nativeSrc": "21906:39:12",
																"nodeType": "YulFunctionCall",
																"src": "21906:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "21886:16:12",
																	"nodeType": "YulTypedName",
																	"src": "21886:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "21961:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21961:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "22001:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "22001:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "21995:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "21995:5:12"
																				},
																				"nativeSrc": "21995:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "21995:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "22008:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "22008:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "22040:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "22040:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "22016:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "22016:23:12"
																				},
																				"nativeSrc": "22016:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "22016:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "21967:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "21967:27:12"
																		},
																		"nativeSrc": "21967:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21967:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "21954:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21954:6:12"
																},
																"nativeSrc": "21954:105:12",
																"nodeType": "YulFunctionCall",
																"src": "21954:105:12"
															},
															"nativeSrc": "21954:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "21954:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "21796:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21849:4:12",
														"nodeType": "YulTypedName",
														"src": "21849:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "21855:6:12",
														"nodeType": "YulTypedName",
														"src": "21855:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "21863:7:12",
														"nodeType": "YulTypedName",
														"src": "21863:7:12",
														"type": ""
													}
												],
												"src": "21796:269:12"
											},
											{
												"body": {
													"nativeSrc": "22120:24:12",
													"nodeType": "YulBlock",
													"src": "22120:24:12",
													"statements": [
														{
															"nativeSrc": "22130:8:12",
															"nodeType": "YulAssignment",
															"src": "22130:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "22137:1:12",
																"nodeType": "YulLiteral",
																"src": "22137:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22130:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22130:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "22071:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22116:3:12",
														"nodeType": "YulTypedName",
														"src": "22116:3:12",
														"type": ""
													}
												],
												"src": "22071:73:12"
											},
											{
												"body": {
													"nativeSrc": "22203:136:12",
													"nodeType": "YulBlock",
													"src": "22203:136:12",
													"statements": [
														{
															"nativeSrc": "22213:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "22213:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "22227:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "22227:30:12"
																},
																"nativeSrc": "22227:32:12",
																"nodeType": "YulFunctionCall",
																"src": "22227:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "22217:6:12",
																	"nodeType": "YulTypedName",
																	"src": "22217:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22312:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22312:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "22318:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22318:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "22326:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "22326:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "22268:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "22268:43:12"
																},
																"nativeSrc": "22268:65:12",
																"nodeType": "YulFunctionCall",
																"src": "22268:65:12"
															},
															"nativeSrc": "22268:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "22268:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "22150:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22189:4:12",
														"nodeType": "YulTypedName",
														"src": "22189:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "22195:6:12",
														"nodeType": "YulTypedName",
														"src": "22195:6:12",
														"type": ""
													}
												],
												"src": "22150:189:12"
											},
											{
												"body": {
													"nativeSrc": "22395:136:12",
													"nodeType": "YulBlock",
													"src": "22395:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "22462:63:12",
																"nodeType": "YulBlock",
																"src": "22462:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "22506:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "22506:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22513:1:12",
																					"nodeType": "YulLiteral",
																					"src": "22513:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "22476:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "22476:29:12"
																			},
																			"nativeSrc": "22476:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "22476:39:12"
																		},
																		"nativeSrc": "22476:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "22476:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "22415:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "22415:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "22422:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22422:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "22412:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "22412:2:12"
																},
																"nativeSrc": "22412:14:12",
																"nodeType": "YulFunctionCall",
																"src": "22412:14:12"
															},
															"nativeSrc": "22405:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "22427:26:12",
																"nodeType": "YulBlock",
																"src": "22427:26:12",
																"statements": [
																	{
																		"nativeSrc": "22429:22:12",
																		"nodeType": "YulAssignment",
																		"src": "22429:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "22442:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "22442:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22449:1:12",
																					"nodeType": "YulLiteral",
																					"src": "22449:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "22438:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "22438:3:12"
																			},
																			"nativeSrc": "22438:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "22438:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "22429:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "22429:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "22409:2:12",
																"nodeType": "YulBlock",
																"src": "22409:2:12",
																"statements": []
															},
															"src": "22405:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "22345:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "22383:5:12",
														"nodeType": "YulTypedName",
														"src": "22383:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22390:3:12",
														"nodeType": "YulTypedName",
														"src": "22390:3:12",
														"type": ""
													}
												],
												"src": "22345:186:12"
											},
											{
												"body": {
													"nativeSrc": "22616:464:12",
													"nodeType": "YulBlock",
													"src": "22616:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "22642:431:12",
																"nodeType": "YulBlock",
																"src": "22642:431:12",
																"statements": [
																	{
																		"nativeSrc": "22656:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "22656:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "22704:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "22704:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "22672:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "22672:31:12"
																			},
																			"nativeSrc": "22672:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "22672:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "22660:8:12",
																				"nodeType": "YulTypedName",
																				"src": "22660:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "22723:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "22723:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "22746:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "22746:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "22774:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "22774:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "22756:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "22756:17:12"
																					},
																					"nativeSrc": "22756:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "22756:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "22742:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "22742:3:12"
																			},
																			"nativeSrc": "22742:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "22742:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "22727:11:12",
																				"nodeType": "YulTypedName",
																				"src": "22727:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "22943:27:12",
																			"nodeType": "YulBlock",
																			"src": "22943:27:12",
																			"statements": [
																				{
																					"nativeSrc": "22945:23:12",
																					"nodeType": "YulAssignment",
																					"src": "22945:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "22960:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "22960:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "22945:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "22945:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "22927:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "22927:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22939:2:12",
																					"nodeType": "YulLiteral",
																					"src": "22939:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "22924:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "22924:2:12"
																			},
																			"nativeSrc": "22924:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "22924:18:12"
																		},
																		"nativeSrc": "22921:49:12",
																		"nodeType": "YulIf",
																		"src": "22921:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "23012:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "23012:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "23029:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "23029:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "23057:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "23057:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "23039:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "23039:17:12"
																							},
																							"nativeSrc": "23039:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "23039:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "23025:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "23025:3:12"
																					},
																					"nativeSrc": "23025:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "23025:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "22983:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "22983:28:12"
																			},
																			"nativeSrc": "22983:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "22983:80:12"
																		},
																		"nativeSrc": "22983:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "22983:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "22633:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22633:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22638:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22638:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22630:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "22630:2:12"
																},
																"nativeSrc": "22630:11:12",
																"nodeType": "YulFunctionCall",
																"src": "22630:11:12"
															},
															"nativeSrc": "22627:446:12",
															"nodeType": "YulIf",
															"src": "22627:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "22537:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "22592:5:12",
														"nodeType": "YulTypedName",
														"src": "22592:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "22599:3:12",
														"nodeType": "YulTypedName",
														"src": "22599:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "22604:10:12",
														"nodeType": "YulTypedName",
														"src": "22604:10:12",
														"type": ""
													}
												],
												"src": "22537:543:12"
											},
											{
												"body": {
													"nativeSrc": "23149:54:12",
													"nodeType": "YulBlock",
													"src": "23149:54:12",
													"statements": [
														{
															"nativeSrc": "23159:37:12",
															"nodeType": "YulAssignment",
															"src": "23159:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "23184:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23184:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "23190:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "23190:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "23180:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23180:3:12"
																},
																"nativeSrc": "23180:16:12",
																"nodeType": "YulFunctionCall",
																"src": "23180:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "23159:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "23159:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "23086:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "23124:4:12",
														"nodeType": "YulTypedName",
														"src": "23124:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "23130:5:12",
														"nodeType": "YulTypedName",
														"src": "23130:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "23140:8:12",
														"nodeType": "YulTypedName",
														"src": "23140:8:12",
														"type": ""
													}
												],
												"src": "23086:117:12"
											},
											{
												"body": {
													"nativeSrc": "23260:118:12",
													"nodeType": "YulBlock",
													"src": "23260:118:12",
													"statements": [
														{
															"nativeSrc": "23270:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "23270:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23319:1:12",
																						"nodeType": "YulLiteral",
																						"src": "23319:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "23322:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "23322:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "23315:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "23315:3:12"
																				},
																				"nativeSrc": "23315:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "23315:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23334:1:12",
																						"nodeType": "YulLiteral",
																						"src": "23334:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "23330:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "23330:3:12"
																				},
																				"nativeSrc": "23330:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "23330:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "23286:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "23286:28:12"
																		},
																		"nativeSrc": "23286:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23286:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "23282:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23282:3:12"
																},
																"nativeSrc": "23282:56:12",
																"nodeType": "YulFunctionCall",
																"src": "23282:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "23274:4:12",
																	"nodeType": "YulTypedName",
																	"src": "23274:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23347:25:12",
															"nodeType": "YulAssignment",
															"src": "23347:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23361:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23361:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "23367:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23367:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23357:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23357:3:12"
																},
																"nativeSrc": "23357:15:12",
																"nodeType": "YulFunctionCall",
																"src": "23357:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23347:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23347:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "23209:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "23237:4:12",
														"nodeType": "YulTypedName",
														"src": "23237:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "23243:5:12",
														"nodeType": "YulTypedName",
														"src": "23243:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "23253:6:12",
														"nodeType": "YulTypedName",
														"src": "23253:6:12",
														"type": ""
													}
												],
												"src": "23209:169:12"
											},
											{
												"body": {
													"nativeSrc": "23464:214:12",
													"nodeType": "YulBlock",
													"src": "23464:214:12",
													"statements": [
														{
															"nativeSrc": "23597:37:12",
															"nodeType": "YulAssignment",
															"src": "23597:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23624:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23624:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "23630:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23630:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "23605:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "23605:18:12"
																},
																"nativeSrc": "23605:29:12",
																"nodeType": "YulFunctionCall",
																"src": "23605:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "23597:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23597:4:12"
																}
															]
														},
														{
															"nativeSrc": "23643:29:12",
															"nodeType": "YulAssignment",
															"src": "23643:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23654:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23654:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "23664:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23664:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "23667:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "23667:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "23660:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23660:3:12"
																		},
																		"nativeSrc": "23660:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23660:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "23651:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "23651:2:12"
																},
																"nativeSrc": "23651:21:12",
																"nodeType": "YulFunctionCall",
																"src": "23651:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "23643:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23643:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "23383:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "23445:4:12",
														"nodeType": "YulTypedName",
														"src": "23445:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "23451:3:12",
														"nodeType": "YulTypedName",
														"src": "23451:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "23459:4:12",
														"nodeType": "YulTypedName",
														"src": "23459:4:12",
														"type": ""
													}
												],
												"src": "23383:295:12"
											},
											{
												"body": {
													"nativeSrc": "23775:1303:12",
													"nodeType": "YulBlock",
													"src": "23775:1303:12",
													"statements": [
														{
															"nativeSrc": "23786:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "23786:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "23833:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23833:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "23800:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "23800:32:12"
																},
																"nativeSrc": "23800:37:12",
																"nodeType": "YulFunctionCall",
																"src": "23800:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "23790:6:12",
																	"nodeType": "YulTypedName",
																	"src": "23790:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23922:22:12",
																"nodeType": "YulBlock",
																"src": "23922:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "23924:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "23924:16:12"
																			},
																			"nativeSrc": "23924:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "23924:18:12"
																		},
																		"nativeSrc": "23924:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "23924:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "23894:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23894:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23902:18:12",
																		"nodeType": "YulLiteral",
																		"src": "23902:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23891:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "23891:2:12"
																},
																"nativeSrc": "23891:30:12",
																"nodeType": "YulFunctionCall",
																"src": "23891:30:12"
															},
															"nativeSrc": "23888:56:12",
															"nodeType": "YulIf",
															"src": "23888:56:12"
														},
														{
															"nativeSrc": "23954:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "23954:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "24000:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "24000:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "23994:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "23994:5:12"
																		},
																		"nativeSrc": "23994:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23994:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "23968:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "23968:25:12"
																},
																"nativeSrc": "23968:38:12",
																"nodeType": "YulFunctionCall",
																"src": "23968:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "23958:6:12",
																	"nodeType": "YulTypedName",
																	"src": "23958:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24099:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "24099:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "24105:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "24105:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "24113:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "24113:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "24053:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "24053:45:12"
																},
																"nativeSrc": "24053:67:12",
																"nodeType": "YulFunctionCall",
																"src": "24053:67:12"
															},
															"nativeSrc": "24053:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "24053:67:12"
														},
														{
															"nativeSrc": "24130:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "24130:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "24147:1:12",
																"nodeType": "YulLiteral",
																"src": "24147:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "24134:9:12",
																	"nodeType": "YulTypedName",
																	"src": "24134:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24158:17:12",
															"nodeType": "YulAssignment",
															"src": "24158:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "24171:4:12",
																"nodeType": "YulLiteral",
																"src": "24171:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "24158:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "24158:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "24222:611:12",
																		"nodeType": "YulBlock",
																		"src": "24222:611:12",
																		"statements": [
																			{
																				"nativeSrc": "24236:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24236:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "24255:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "24255:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "24267:4:12",
																									"nodeType": "YulLiteral",
																									"src": "24267:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "24263:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "24263:3:12"
																							},
																							"nativeSrc": "24263:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "24263:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "24251:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "24251:3:12"
																					},
																					"nativeSrc": "24251:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "24251:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "24240:7:12",
																						"nodeType": "YulTypedName",
																						"src": "24240:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "24287:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24287:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24333:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "24333:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "24301:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "24301:31:12"
																					},
																					"nativeSrc": "24301:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "24301:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "24291:6:12",
																						"nodeType": "YulTypedName",
																						"src": "24291:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "24351:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24351:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "24360:1:12",
																					"nodeType": "YulLiteral",
																					"src": "24360:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "24355:1:12",
																						"nodeType": "YulTypedName",
																						"src": "24355:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "24419:163:12",
																					"nodeType": "YulBlock",
																					"src": "24419:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24444:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "24444:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "24462:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "24462:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "24467:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "24467:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "24458:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "24458:3:12"
																												},
																												"nativeSrc": "24458:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "24458:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "24452:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "24452:5:12"
																										},
																										"nativeSrc": "24452:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "24452:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "24437:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "24437:6:12"
																								},
																								"nativeSrc": "24437:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "24437:42:12"
																							},
																							"nativeSrc": "24437:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "24437:42:12"
																						},
																						{
																							"nativeSrc": "24496:24:12",
																							"nodeType": "YulAssignment",
																							"src": "24496:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24510:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "24510:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24518:1:12",
																										"nodeType": "YulLiteral",
																										"src": "24518:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24506:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "24506:3:12"
																								},
																								"nativeSrc": "24506:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "24506:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "24496:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "24496:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "24537:31:12",
																							"nodeType": "YulAssignment",
																							"src": "24537:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "24554:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "24554:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24565:2:12",
																										"nodeType": "YulLiteral",
																										"src": "24565:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24550:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "24550:3:12"
																								},
																								"nativeSrc": "24550:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "24550:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "24537:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "24537:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "24385:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "24385:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "24388:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "24388:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "24382:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "24382:2:12"
																					},
																					"nativeSrc": "24382:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "24382:14:12"
																				},
																				"nativeSrc": "24374:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "24397:21:12",
																					"nodeType": "YulBlock",
																					"src": "24397:21:12",
																					"statements": [
																						{
																							"nativeSrc": "24399:17:12",
																							"nodeType": "YulAssignment",
																							"src": "24399:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "24408:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "24408:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24411:4:12",
																										"nodeType": "YulLiteral",
																										"src": "24411:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24404:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "24404:3:12"
																								},
																								"nativeSrc": "24404:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "24404:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "24399:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "24399:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "24378:3:12",
																					"nodeType": "YulBlock",
																					"src": "24378:3:12",
																					"statements": []
																				},
																				"src": "24374:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "24618:156:12",
																					"nodeType": "YulBlock",
																					"src": "24618:156:12",
																					"statements": [
																						{
																							"nativeSrc": "24636:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "24636:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "24663:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "24663:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "24668:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "24668:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24659:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "24659:3:12"
																										},
																										"nativeSrc": "24659:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "24659:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "24653:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "24653:5:12"
																								},
																								"nativeSrc": "24653:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "24653:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "24640:9:12",
																									"nodeType": "YulTypedName",
																									"src": "24640:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24703:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "24703:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "24730:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "24730:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "24745:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "24745:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "24753:4:12",
																														"nodeType": "YulLiteral",
																														"src": "24753:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "24741:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "24741:3:12"
																												},
																												"nativeSrc": "24741:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "24741:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "24711:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "24711:18:12"
																										},
																										"nativeSrc": "24711:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "24711:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "24696:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "24696:6:12"
																								},
																								"nativeSrc": "24696:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "24696:64:12"
																							},
																							"nativeSrc": "24696:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "24696:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "24601:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "24601:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "24610:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "24610:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "24598:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "24598:2:12"
																					},
																					"nativeSrc": "24598:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "24598:19:12"
																				},
																				"nativeSrc": "24595:179:12",
																				"nodeType": "YulIf",
																				"src": "24595:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24794:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "24794:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "24808:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "24808:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "24816:1:12",
																											"nodeType": "YulLiteral",
																											"src": "24816:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "24804:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "24804:3:12"
																									},
																									"nativeSrc": "24804:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "24804:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "24820:1:12",
																									"nodeType": "YulLiteral",
																									"src": "24820:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "24800:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "24800:3:12"
																							},
																							"nativeSrc": "24800:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "24800:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "24787:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "24787:6:12"
																					},
																					"nativeSrc": "24787:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "24787:36:12"
																				},
																				"nativeSrc": "24787:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "24787:36:12"
																			}
																		]
																	},
																	"nativeSrc": "24215:618:12",
																	"nodeType": "YulCase",
																	"src": "24215:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24220:1:12",
																		"nodeType": "YulLiteral",
																		"src": "24220:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "24850:222:12",
																		"nodeType": "YulBlock",
																		"src": "24850:222:12",
																		"statements": [
																			{
																				"nativeSrc": "24864:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24864:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "24877:1:12",
																					"nodeType": "YulLiteral",
																					"src": "24877:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "24868:5:12",
																						"nodeType": "YulTypedName",
																						"src": "24868:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "24901:67:12",
																					"nodeType": "YulBlock",
																					"src": "24901:67:12",
																					"statements": [
																						{
																							"nativeSrc": "24919:35:12",
																							"nodeType": "YulAssignment",
																							"src": "24919:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "24938:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "24938:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "24943:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "24943:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24934:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "24934:3:12"
																										},
																										"nativeSrc": "24934:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "24934:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "24928:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "24928:5:12"
																								},
																								"nativeSrc": "24928:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "24928:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "24919:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "24919:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "24894:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "24894:6:12"
																				},
																				"nativeSrc": "24891:77:12",
																				"nodeType": "YulIf",
																				"src": "24891:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24988:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "24988:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "25047:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "25047:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "25054:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "25054:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "24994:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "24994:52:12"
																							},
																							"nativeSrc": "24994:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "24994:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "24981:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "24981:6:12"
																					},
																					"nativeSrc": "24981:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "24981:81:12"
																				},
																				"nativeSrc": "24981:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "24981:81:12"
																			}
																		]
																	},
																	"nativeSrc": "24842:230:12",
																	"nodeType": "YulCase",
																	"src": "24842:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "24195:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "24195:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24203:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24203:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24192:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "24192:2:12"
																},
																"nativeSrc": "24192:14:12",
																"nodeType": "YulFunctionCall",
																"src": "24192:14:12"
															},
															"nativeSrc": "24185:887:12",
															"nodeType": "YulSwitch",
															"src": "24185:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "23683:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23764:4:12",
														"nodeType": "YulTypedName",
														"src": "23764:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "23770:3:12",
														"nodeType": "YulTypedName",
														"src": "23770:3:12",
														"type": ""
													}
												],
												"src": "23683:1395:12"
											},
											{
												"body": {
													"nativeSrc": "25112:152:12",
													"nodeType": "YulBlock",
													"src": "25112:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25129:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25129:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25132:77:12",
																		"nodeType": "YulLiteral",
																		"src": "25132:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25122:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25122:6:12"
																},
																"nativeSrc": "25122:88:12",
																"nodeType": "YulFunctionCall",
																"src": "25122:88:12"
															},
															"nativeSrc": "25122:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "25122:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25226:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25226:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25229:4:12",
																		"nodeType": "YulLiteral",
																		"src": "25229:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25219:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25219:6:12"
																},
																"nativeSrc": "25219:15:12",
																"nodeType": "YulFunctionCall",
																"src": "25219:15:12"
															},
															"nativeSrc": "25219:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "25219:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "25250:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25250:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25253:4:12",
																		"nodeType": "YulLiteral",
																		"src": "25253:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "25243:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25243:6:12"
																},
																"nativeSrc": "25243:15:12",
																"nodeType": "YulFunctionCall",
																"src": "25243:15:12"
															},
															"nativeSrc": "25243:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "25243:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "25084:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "25084:180:12"
											},
											{
												"body": {
													"nativeSrc": "25313:190:12",
													"nodeType": "YulBlock",
													"src": "25313:190:12",
													"statements": [
														{
															"nativeSrc": "25323:33:12",
															"nodeType": "YulAssignment",
															"src": "25323:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25350:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "25350:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25332:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "25332:17:12"
																},
																"nativeSrc": "25332:24:12",
																"nodeType": "YulFunctionCall",
																"src": "25332:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "25323:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "25323:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25446:22:12",
																"nodeType": "YulBlock",
																"src": "25446:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "25448:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "25448:16:12"
																			},
																			"nativeSrc": "25448:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "25448:18:12"
																		},
																		"nativeSrc": "25448:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "25448:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25371:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "25371:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25378:66:12",
																		"nodeType": "YulLiteral",
																		"src": "25378:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "25368:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "25368:2:12"
																},
																"nativeSrc": "25368:77:12",
																"nodeType": "YulFunctionCall",
																"src": "25368:77:12"
															},
															"nativeSrc": "25365:103:12",
															"nodeType": "YulIf",
															"src": "25365:103:12"
														},
														{
															"nativeSrc": "25477:20:12",
															"nodeType": "YulAssignment",
															"src": "25477:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25488:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "25488:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25495:1:12",
																		"nodeType": "YulLiteral",
																		"src": "25495:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25484:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25484:3:12"
																},
																"nativeSrc": "25484:13:12",
																"nodeType": "YulFunctionCall",
																"src": "25484:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "25477:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25477:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "25270:233:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25299:5:12",
														"nodeType": "YulTypedName",
														"src": "25299:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "25309:3:12",
														"nodeType": "YulTypedName",
														"src": "25309:3:12",
														"type": ""
													}
												],
												"src": "25270:233:12"
											},
											{
												"body": {
													"nativeSrc": "25693:251:12",
													"nodeType": "YulBlock",
													"src": "25693:251:12",
													"statements": [
														{
															"nativeSrc": "25704:102:12",
															"nodeType": "YulAssignment",
															"src": "25704:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25793:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25793:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "25802:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25802:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "25711:81:12",
																	"nodeType": "YulIdentifier",
																	"src": "25711:81:12"
																},
																"nativeSrc": "25711:95:12",
																"nodeType": "YulFunctionCall",
																"src": "25711:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25704:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25704:3:12"
																}
															]
														},
														{
															"nativeSrc": "25816:102:12",
															"nodeType": "YulAssignment",
															"src": "25816:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25905:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25905:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "25914:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25914:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "25823:81:12",
																	"nodeType": "YulIdentifier",
																	"src": "25823:81:12"
																},
																"nativeSrc": "25823:95:12",
																"nodeType": "YulFunctionCall",
																"src": "25823:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25816:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25816:3:12"
																}
															]
														},
														{
															"nativeSrc": "25928:10:12",
															"nodeType": "YulAssignment",
															"src": "25928:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "25935:3:12",
																"nodeType": "YulIdentifier",
																"src": "25935:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25928:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25928:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "25509:435:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25664:3:12",
														"nodeType": "YulTypedName",
														"src": "25664:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25670:6:12",
														"nodeType": "YulTypedName",
														"src": "25670:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25678:6:12",
														"nodeType": "YulTypedName",
														"src": "25678:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25689:3:12",
														"nodeType": "YulTypedName",
														"src": "25689:3:12",
														"type": ""
													}
												],
												"src": "25509:435:12"
											},
											{
												"body": {
													"nativeSrc": "26008:40:12",
													"nodeType": "YulBlock",
													"src": "26008:40:12",
													"statements": [
														{
															"nativeSrc": "26019:22:12",
															"nodeType": "YulAssignment",
															"src": "26019:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26035:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "26035:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "26029:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "26029:5:12"
																},
																"nativeSrc": "26029:12:12",
																"nodeType": "YulFunctionCall",
																"src": "26029:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "26019:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26019:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "25950:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25991:5:12",
														"nodeType": "YulTypedName",
														"src": "25991:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "26001:6:12",
														"nodeType": "YulTypedName",
														"src": "26001:6:12",
														"type": ""
													}
												],
												"src": "25950:98:12"
											},
											{
												"body": {
													"nativeSrc": "26149:73:12",
													"nodeType": "YulBlock",
													"src": "26149:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26166:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26166:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26171:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26171:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26159:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26159:6:12"
																},
																"nativeSrc": "26159:19:12",
																"nodeType": "YulFunctionCall",
																"src": "26159:19:12"
															},
															"nativeSrc": "26159:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "26159:19:12"
														},
														{
															"nativeSrc": "26187:29:12",
															"nodeType": "YulAssignment",
															"src": "26187:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26206:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26206:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26211:4:12",
																		"nodeType": "YulLiteral",
																		"src": "26211:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26202:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26202:3:12"
																},
																"nativeSrc": "26202:14:12",
																"nodeType": "YulFunctionCall",
																"src": "26202:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "26187:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "26187:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "26054:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26121:3:12",
														"nodeType": "YulTypedName",
														"src": "26121:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "26126:6:12",
														"nodeType": "YulTypedName",
														"src": "26126:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "26137:11:12",
														"nodeType": "YulTypedName",
														"src": "26137:11:12",
														"type": ""
													}
												],
												"src": "26054:168:12"
											},
											{
												"body": {
													"nativeSrc": "26318:283:12",
													"nodeType": "YulBlock",
													"src": "26318:283:12",
													"statements": [
														{
															"nativeSrc": "26328:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "26328:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26374:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "26374:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "26342:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "26342:31:12"
																},
																"nativeSrc": "26342:38:12",
																"nodeType": "YulFunctionCall",
																"src": "26342:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "26332:6:12",
																	"nodeType": "YulTypedName",
																	"src": "26332:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26389:77:12",
															"nodeType": "YulAssignment",
															"src": "26389:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26454:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26454:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26459:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26459:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "26396:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "26396:57:12"
																},
																"nativeSrc": "26396:70:12",
																"nodeType": "YulFunctionCall",
																"src": "26396:70:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26389:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26389:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "26514:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "26514:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26521:4:12",
																				"nodeType": "YulLiteral",
																				"src": "26521:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26510:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26510:3:12"
																		},
																		"nativeSrc": "26510:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26510:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "26528:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26528:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26533:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26533:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "26475:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "26475:34:12"
																},
																"nativeSrc": "26475:65:12",
																"nodeType": "YulFunctionCall",
																"src": "26475:65:12"
															},
															"nativeSrc": "26475:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "26475:65:12"
														},
														{
															"nativeSrc": "26549:46:12",
															"nodeType": "YulAssignment",
															"src": "26549:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26560:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26560:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "26587:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "26587:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "26565:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "26565:21:12"
																		},
																		"nativeSrc": "26565:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26565:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26556:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26556:3:12"
																},
																"nativeSrc": "26556:39:12",
																"nodeType": "YulFunctionCall",
																"src": "26556:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26549:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26549:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "26228:373:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26299:5:12",
														"nodeType": "YulTypedName",
														"src": "26299:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "26306:3:12",
														"nodeType": "YulTypedName",
														"src": "26306:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26314:3:12",
														"nodeType": "YulTypedName",
														"src": "26314:3:12",
														"type": ""
													}
												],
												"src": "26228:373:12"
											},
											{
												"body": {
													"nativeSrc": "26807:440:12",
													"nodeType": "YulBlock",
													"src": "26807:440:12",
													"statements": [
														{
															"nativeSrc": "26817:27:12",
															"nodeType": "YulAssignment",
															"src": "26817:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26829:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "26829:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26840:3:12",
																		"nodeType": "YulLiteral",
																		"src": "26840:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26825:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26825:3:12"
																},
																"nativeSrc": "26825:19:12",
																"nodeType": "YulFunctionCall",
																"src": "26825:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26817:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26817:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26898:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26898:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26911:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26911:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26922:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26922:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26907:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26907:3:12"
																		},
																		"nativeSrc": "26907:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26907:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26854:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "26854:43:12"
																},
																"nativeSrc": "26854:71:12",
																"nodeType": "YulFunctionCall",
																"src": "26854:71:12"
															},
															"nativeSrc": "26854:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "26854:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26979:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "26979:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26992:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26992:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27003:2:12",
																				"nodeType": "YulLiteral",
																				"src": "27003:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26988:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26988:3:12"
																		},
																		"nativeSrc": "26988:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26988:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26935:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "26935:43:12"
																},
																"nativeSrc": "26935:72:12",
																"nodeType": "YulFunctionCall",
																"src": "26935:72:12"
															},
															"nativeSrc": "26935:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "26935:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "27061:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "27061:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27074:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27074:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27085:2:12",
																				"nodeType": "YulLiteral",
																				"src": "27085:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27070:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27070:3:12"
																		},
																		"nativeSrc": "27070:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27070:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27017:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "27017:43:12"
																},
																"nativeSrc": "27017:72:12",
																"nodeType": "YulFunctionCall",
																"src": "27017:72:12"
															},
															"nativeSrc": "27017:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "27017:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27110:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27110:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27121:2:12",
																				"nodeType": "YulLiteral",
																				"src": "27121:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27106:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27106:3:12"
																		},
																		"nativeSrc": "27106:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27106:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27130:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "27130:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27136:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27136:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27126:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27126:3:12"
																		},
																		"nativeSrc": "27126:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27126:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27099:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "27099:6:12"
																},
																"nativeSrc": "27099:48:12",
																"nodeType": "YulFunctionCall",
																"src": "27099:48:12"
															},
															"nativeSrc": "27099:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "27099:48:12"
														},
														{
															"nativeSrc": "27156:84:12",
															"nodeType": "YulAssignment",
															"src": "27156:84:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "27226:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "27226:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "27235:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "27235:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "27164:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "27164:61:12"
																},
																"nativeSrc": "27164:76:12",
																"nodeType": "YulFunctionCall",
																"src": "27164:76:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27156:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27156:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "26607:640:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26755:9:12",
														"nodeType": "YulTypedName",
														"src": "26755:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "26767:6:12",
														"nodeType": "YulTypedName",
														"src": "26767:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "26775:6:12",
														"nodeType": "YulTypedName",
														"src": "26775:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26783:6:12",
														"nodeType": "YulTypedName",
														"src": "26783:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26791:6:12",
														"nodeType": "YulTypedName",
														"src": "26791:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26802:4:12",
														"nodeType": "YulTypedName",
														"src": "26802:4:12",
														"type": ""
													}
												],
												"src": "26607:640:12"
											},
											{
												"body": {
													"nativeSrc": "27315:79:12",
													"nodeType": "YulBlock",
													"src": "27315:79:12",
													"statements": [
														{
															"nativeSrc": "27325:22:12",
															"nodeType": "YulAssignment",
															"src": "27325:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "27340:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "27340:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "27334:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "27334:5:12"
																},
																"nativeSrc": "27334:13:12",
																"nodeType": "YulFunctionCall",
																"src": "27334:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "27325:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "27325:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27382:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "27382:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "27356:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "27356:25:12"
																},
																"nativeSrc": "27356:32:12",
																"nodeType": "YulFunctionCall",
																"src": "27356:32:12"
															},
															"nativeSrc": "27356:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "27356:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "27253:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "27293:6:12",
														"nodeType": "YulTypedName",
														"src": "27293:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "27301:3:12",
														"nodeType": "YulTypedName",
														"src": "27301:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "27309:5:12",
														"nodeType": "YulTypedName",
														"src": "27309:5:12",
														"type": ""
													}
												],
												"src": "27253:141:12"
											},
											{
												"body": {
													"nativeSrc": "27476:273:12",
													"nodeType": "YulBlock",
													"src": "27476:273:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "27522:83:12",
																"nodeType": "YulBlock",
																"src": "27522:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "27524:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "27524:77:12"
																			},
																			"nativeSrc": "27524:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "27524:79:12"
																		},
																		"nativeSrc": "27524:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "27524:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "27497:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "27497:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27506:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27506:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27493:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27493:3:12"
																		},
																		"nativeSrc": "27493:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27493:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27518:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27518:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "27489:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27489:3:12"
																},
																"nativeSrc": "27489:32:12",
																"nodeType": "YulFunctionCall",
																"src": "27489:32:12"
															},
															"nativeSrc": "27486:119:12",
															"nodeType": "YulIf",
															"src": "27486:119:12"
														},
														{
															"nativeSrc": "27615:127:12",
															"nodeType": "YulBlock",
															"src": "27615:127:12",
															"statements": [
																{
																	"nativeSrc": "27630:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "27630:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27644:1:12",
																		"nodeType": "YulLiteral",
																		"src": "27644:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "27634:6:12",
																			"nodeType": "YulTypedName",
																			"src": "27634:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "27659:73:12",
																	"nodeType": "YulAssignment",
																	"src": "27659:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "27704:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "27704:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "27715:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "27715:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "27700:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "27700:3:12"
																				},
																				"nativeSrc": "27700:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "27700:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "27724:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "27724:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "27669:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "27669:30:12"
																		},
																		"nativeSrc": "27669:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27669:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "27659:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "27659:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "27400:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27446:9:12",
														"nodeType": "YulTypedName",
														"src": "27446:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "27457:7:12",
														"nodeType": "YulTypedName",
														"src": "27457:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "27469:6:12",
														"nodeType": "YulTypedName",
														"src": "27469:6:12",
														"type": ""
													}
												],
												"src": "27400:349:12"
											},
											{
												"body": {
													"nativeSrc": "27783:152:12",
													"nodeType": "YulBlock",
													"src": "27783:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27800:1:12",
																		"nodeType": "YulLiteral",
																		"src": "27800:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27803:77:12",
																		"nodeType": "YulLiteral",
																		"src": "27803:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27793:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "27793:6:12"
																},
																"nativeSrc": "27793:88:12",
																"nodeType": "YulFunctionCall",
																"src": "27793:88:12"
															},
															"nativeSrc": "27793:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "27793:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27897:1:12",
																		"nodeType": "YulLiteral",
																		"src": "27897:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27900:4:12",
																		"nodeType": "YulLiteral",
																		"src": "27900:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27890:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "27890:6:12"
																},
																"nativeSrc": "27890:15:12",
																"nodeType": "YulFunctionCall",
																"src": "27890:15:12"
															},
															"nativeSrc": "27890:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "27890:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27921:1:12",
																		"nodeType": "YulLiteral",
																		"src": "27921:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27924:4:12",
																		"nodeType": "YulLiteral",
																		"src": "27924:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "27914:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "27914:6:12"
																},
																"nativeSrc": "27914:15:12",
																"nodeType": "YulFunctionCall",
																"src": "27914:15:12"
															},
															"nativeSrc": "27914:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "27914:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "27755:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "27755:180:12"
											},
											{
												"body": {
													"nativeSrc": "28067:206:12",
													"nodeType": "YulBlock",
													"src": "28067:206:12",
													"statements": [
														{
															"nativeSrc": "28077:26:12",
															"nodeType": "YulAssignment",
															"src": "28077:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28089:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "28089:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28100:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28100:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28085:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28085:3:12"
																},
																"nativeSrc": "28085:18:12",
																"nodeType": "YulFunctionCall",
																"src": "28085:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28077:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "28077:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28157:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "28157:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28170:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28170:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28181:1:12",
																				"nodeType": "YulLiteral",
																				"src": "28181:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28166:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28166:3:12"
																		},
																		"nativeSrc": "28166:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28166:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28113:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "28113:43:12"
																},
																"nativeSrc": "28113:71:12",
																"nodeType": "YulFunctionCall",
																"src": "28113:71:12"
															},
															"nativeSrc": "28113:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "28113:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28238:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "28238:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28251:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28251:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28262:2:12",
																				"nodeType": "YulLiteral",
																				"src": "28262:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28247:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28247:3:12"
																		},
																		"nativeSrc": "28247:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28247:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28194:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "28194:43:12"
																},
																"nativeSrc": "28194:72:12",
																"nodeType": "YulFunctionCall",
																"src": "28194:72:12"
															},
															"nativeSrc": "28194:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "28194:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "27941:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28031:9:12",
														"nodeType": "YulTypedName",
														"src": "28031:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28043:6:12",
														"nodeType": "YulTypedName",
														"src": "28043:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28051:6:12",
														"nodeType": "YulTypedName",
														"src": "28051:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28062:4:12",
														"nodeType": "YulTypedName",
														"src": "28062:4:12",
														"type": ""
													}
												],
												"src": "27941:332:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct HaikuNFT.Haiku -> struct HaikuNFT.Haiku\n    function abi_encode_t_struct$_Haiku_$2803_memory_ptr_to_t_struct$_Haiku_$2803_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // autor\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // line1\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // line2\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // line3\n\n            let memberValue0 := mload(add(value, 0x60))\n\n            mstore(add(pos, 0x60), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Haiku_$2803_memory_ptr_to_t_struct$_Haiku_$2803_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Haiku_$2803_memory_ptr_to_t_struct$_Haiku_$2803_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct HaikuNFT.Haiku[] -> struct HaikuNFT.Haiku[]\n    function abi_encode_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Haiku_$2803_memory_ptr_to_t_struct$_Haiku_$2803_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64(memPtr) {\n\n        mstore(add(memPtr, 0), \"No more haikus\")\n\n    }\n\n    function abi_encode_t_stringliteral_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011f575f3560e01c806361bc221a116100ab57806397afe82d1161006f57806397afe82d1461031a578063a22cb4651461034a578063b88d4fde14610366578063c87b56dd14610382578063e985e9c5146103b25761011f565b806361bc221a1461024b5780636352211e1461026957806370a08231146102995780637cb82b2a146102c957806395d89b41146102fc5761011f565b8063095ea7b3116100f2578063095ea7b3146101bd57806323b872dd146101d9578063350fe165146101f557806342842e0e1461021157806349af5bfe1461022d5761011f565b806301ffc9a71461012357806306fdde0314610153578063081812fc146101715780630884d540146101a1575b5f80fd5b61013d60048036038101906101389190612052565b6103e2565b60405161014a9190612097565b60405180910390f35b61015b6104c3565b6040516101689190612120565b60405180910390f35b61018b60048036038101906101869190612173565b610552565b60405161019891906121dd565b60405180910390f35b6101bb60048036038101906101b69190612220565b61056d565b005b6101d760048036038101906101d29190612220565b610683565b005b6101f360048036038101906101ee919061225e565b610699565b005b61020f600480360381019061020a91906123da565b610798565b005b61022b6004803603810190610226919061225e565b610a55565b005b610235610a74565b60405161024291906125fe565b60405180910390f35b610253610e0e565b604051610260919061262d565b60405180910390f35b610283600480360381019061027e9190612173565b610e14565b60405161029091906121dd565b60405180910390f35b6102b360048036038101906102ae9190612646565b610e25565b6040516102c0919061262d565b60405180910390f35b6102e360048036038101906102de9190612173565b610edb565b6040516102f39493929190612671565b60405180910390f35b6103046110c7565b6040516103119190612120565b60405180910390f35b610334600480360381019061032f9190612220565b611157565b604051610341919061262d565b60405180910390f35b610364600480360381019061035f91906126f3565b611182565b005b610380600480360381019061037b91906127cf565b611198565b005b61039c60048036038101906103979190612173565b6111b5565b6040516103a99190612120565b60405180910390f35b6103cc60048036038101906103c7919061284f565b61121b565b6040516103d99190612097565b60405180910390f35b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104ac57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104bc57506104bb826112a9565b5b9050919050565b60605f80546104d1906128ba565b80601f01602080910402602001604051908101604052809291908181526020018280546104fd906128ba565b80156105485780601f1061051f57610100808354040283529160200191610548565b820191905f5260205f20905b81548152906001019060200180831161052b57829003601f168201915b5050505050905090565b5f61055c82611312565b5061056682611398565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff1660068281548110610598576105976128ea565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461061e57806040517f03ce4e32000000000000000000000000000000000000000000000000000000008152600401610615919061262d565b60405180910390fd5b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f20015f90919091909150555050565b61069582826106906113d1565b6113d8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610709575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161070091906121dd565b60405180910390fd5b5f61071c83836107176113d1565b6113ea565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610792578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161078993929190612917565b60405180910390fd5b50505050565b600b60095411156107de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d590612996565b60405180910390fd5b6008836040516107ee91906129ee565b90815260200160405180910390205f9054906101000a900460ff168061083b575060088260405161081f91906129ee565b90815260200160405180910390205f9054906101000a900460ff165b8061086d575060088160405161085191906129ee565b90815260200160405180910390205f9054906101000a900460ff165b156108a4576040517f693a889e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016008846040516108b691906129ee565b90815260200160405180910390205f6101000a81548160ff02191690831515021790555060016008836040516108ec91906129ee565b90815260200160405180910390205f6101000a81548160ff021916908315150217905550600160088260405161092291906129ee565b90815260200160405180910390205f6101000a81548160ff021916908315150217905550600660405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816109fe9190612ba1565b506040820151816002019081610a149190612ba1565b506060820151816003019081610a2a9190612ba1565b505050610a39336009546115f5565b60095f815480929190610a4b90612c9d565b9190505550505050565b610a6f83838360405180602001604052805f815250611198565b505050565b60605f60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905090505f8103610af3576040517ff8826a6900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8167ffffffffffffffff811115610b0e57610b0d6122b6565b5b604051908082528060200260200182016040528015610b4757816020015b610b34611faf565b815260200190600190039081610b2c5790505b5090505f5b82811015610e0557600660075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610ba557610ba46128ea565b5b905f5260205f20015481548110610bbf57610bbe6128ea565b5b905f5260205f2090600402016040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610c3a906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610c66906128ba565b8015610cb15780601f10610c8857610100808354040283529160200191610cb1565b820191905f5260205f20905b815481529060010190602001808311610c9457829003601f168201915b50505050508152602001600282018054610cca906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf6906128ba565b8015610d415780601f10610d1857610100808354040283529160200191610d41565b820191905f5260205f20905b815481529060010190602001808311610d2457829003601f168201915b50505050508152602001600382018054610d5a906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610d86906128ba565b8015610dd15780601f10610da857610100808354040283529160200191610dd1565b820191905f5260205f20905b815481529060010190602001808311610db457829003601f168201915b505050505081525050828281518110610ded57610dec6128ea565b5b60200260200101819052508080600101915050610b4c565b50809250505090565b60095481565b5f610e1e82611312565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e96575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610e8d91906121dd565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60068181548110610eea575f80fd5b905f5260205f2090600402015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610f2e906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610f5a906128ba565b8015610fa55780601f10610f7c57610100808354040283529160200191610fa5565b820191905f5260205f20905b815481529060010190602001808311610f8857829003601f168201915b505050505090806002018054610fba906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610fe6906128ba565b80156110315780601f1061100857610100808354040283529160200191611031565b820191905f5260205f20905b81548152906001019060200180831161101457829003601f168201915b505050505090806003018054611046906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054611072906128ba565b80156110bd5780601f10611094576101008083540402835291602001916110bd565b820191905f5260205f20905b8154815290600101906020018083116110a057829003601f168201915b5050505050905084565b6060600180546110d6906128ba565b80601f0160208091040260200160405190810160405280929190818152602001828054611102906128ba565b801561114d5780601f106111245761010080835404028352916020019161114d565b820191905f5260205f20905b81548152906001019060200180831161113057829003601f168201915b5050505050905090565b6007602052815f5260405f208181548110611170575f80fd5b905f5260205f20015f91509150505481565b61119461118d6113d1565b83836116e8565b5050565b6111a3848484610699565b6111af84848484611851565b50505050565b60606111c082611312565b505f6111ca611a03565b90505f8151116111e85760405180602001604052805f815250611213565b806111f284611a19565b604051602001611203929190612ce4565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061131d83611ae3565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361138f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611386919061262d565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6113e58383836001611b1c565b505050565b5f806113f584611ae3565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461143657611435818486611cdb565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114c1576114755f855f80611b1c565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461154057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611665575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161165c91906121dd565b60405180910390fd5b5f61167183835f6113ea565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116e3575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016116da91906121dd565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361175857816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161174f91906121dd565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516118449190612097565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156119fd578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026118946113d1565b8685856040518563ffffffff1660e01b81526004016118b69493929190612d59565b6020604051808303815f875af19250505080156118f157506040513d601f19601f820116820180604052508101906118ee9190612db7565b60015b611972573d805f811461191f576040519150601f19603f3d011682016040523d82523d5f602084013e611924565b606091505b505f81510361196a57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161196191906121dd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146119fb57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119f291906121dd565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f6001611a2784611d9e565b0190505f8167ffffffffffffffff811115611a4557611a446122b6565b5b6040519080825280601f01601f191660200182016040528015611a775781602001600182028036833780820191505090505b5090505f82602001820190505b600115611ad8578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611acd57611acc612de2565b5b0494505f8503611a84575b819350505050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611b5457505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611c86575f611b6384611312565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bcd57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611be05750611bde818461121b565b155b15611c2257826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611c1991906121dd565b60405180910390fd5b8115611c8457838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611ce6838383611eef565b611d99575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d5a57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611d51919061262d565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611d90929190612e0f565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611dfa577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611df057611def612de2565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611e37576d04ee2d6d415b85acef81000000008381611e2d57611e2c612de2565b5b0492506020810190505b662386f26fc100008310611e6657662386f26fc100008381611e5c57611e5b612de2565b5b0492506010810190505b6305f5e1008310611e8f576305f5e1008381611e8557611e84612de2565b5b0492506008810190505b6127108310611eb4576127108381611eaa57611ea9612de2565b5b0492506004810190505b60648310611ed75760648381611ecd57611ecc612de2565b5b0492506002810190505b600a8310611ee6576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611fa657508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611f675750611f66848461121b565b5b80611fa557508273ffffffffffffffffffffffffffffffffffffffff16611f8d83611398565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b60405180608001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081525090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61203181611ffd565b811461203b575f80fd5b50565b5f8135905061204c81612028565b92915050565b5f6020828403121561206757612066611ff5565b5b5f6120748482850161203e565b91505092915050565b5f8115159050919050565b6120918161207d565b82525050565b5f6020820190506120aa5f830184612088565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6120f2826120b0565b6120fc81856120ba565b935061210c8185602086016120ca565b612115816120d8565b840191505092915050565b5f6020820190508181035f83015261213881846120e8565b905092915050565b5f819050919050565b61215281612140565b811461215c575f80fd5b50565b5f8135905061216d81612149565b92915050565b5f6020828403121561218857612187611ff5565b5b5f6121958482850161215f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6121c78261219e565b9050919050565b6121d7816121bd565b82525050565b5f6020820190506121f05f8301846121ce565b92915050565b6121ff816121bd565b8114612209575f80fd5b50565b5f8135905061221a816121f6565b92915050565b5f806040838503121561223657612235611ff5565b5b5f6122438582860161220c565b92505060206122548582860161215f565b9150509250929050565b5f805f6060848603121561227557612274611ff5565b5b5f6122828682870161220c565b93505060206122938682870161220c565b92505060406122a48682870161215f565b9150509250925092565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6122ec826120d8565b810181811067ffffffffffffffff8211171561230b5761230a6122b6565b5b80604052505050565b5f61231d611fec565b905061232982826122e3565b919050565b5f67ffffffffffffffff821115612348576123476122b6565b5b612351826120d8565b9050602081019050919050565b828183375f83830152505050565b5f61237e6123798461232e565b612314565b90508281526020810184848401111561239a576123996122b2565b5b6123a584828561235e565b509392505050565b5f82601f8301126123c1576123c06122ae565b5b81356123d184826020860161236c565b91505092915050565b5f805f606084860312156123f1576123f0611ff5565b5b5f84013567ffffffffffffffff81111561240e5761240d611ff9565b5b61241a868287016123ad565b935050602084013567ffffffffffffffff81111561243b5761243a611ff9565b5b612447868287016123ad565b925050604084013567ffffffffffffffff81111561246857612467611ff9565b5b612474868287016123ad565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6124b0816121bd565b82525050565b5f82825260208201905092915050565b5f6124d0826120b0565b6124da81856124b6565b93506124ea8185602086016120ca565b6124f3816120d8565b840191505092915050565b5f608083015f8301516125135f8601826124a7565b506020830151848203602086015261252b82826124c6565b9150506040830151848203604086015261254582826124c6565b9150506060830151848203606086015261255f82826124c6565b9150508091505092915050565b5f61257783836124fe565b905092915050565b5f602082019050919050565b5f6125958261247e565b61259f8185612488565b9350836020820285016125b185612498565b805f5b858110156125ec57848403895281516125cd858261256c565b94506125d88361257f565b925060208a019950506001810190506125b4565b50829750879550505050505092915050565b5f6020820190508181035f830152612616818461258b565b905092915050565b61262781612140565b82525050565b5f6020820190506126405f83018461261e565b92915050565b5f6020828403121561265b5761265a611ff5565b5b5f6126688482850161220c565b91505092915050565b5f6080820190506126845f8301876121ce565b818103602083015261269681866120e8565b905081810360408301526126aa81856120e8565b905081810360608301526126be81846120e8565b905095945050505050565b6126d28161207d565b81146126dc575f80fd5b50565b5f813590506126ed816126c9565b92915050565b5f806040838503121561270957612708611ff5565b5b5f6127168582860161220c565b9250506020612727858286016126df565b9150509250929050565b5f67ffffffffffffffff82111561274b5761274a6122b6565b5b612754826120d8565b9050602081019050919050565b5f61277361276e84612731565b612314565b90508281526020810184848401111561278f5761278e6122b2565b5b61279a84828561235e565b509392505050565b5f82601f8301126127b6576127b56122ae565b5b81356127c6848260208601612761565b91505092915050565b5f805f80608085870312156127e7576127e6611ff5565b5b5f6127f48782880161220c565b94505060206128058782880161220c565b93505060406128168782880161215f565b925050606085013567ffffffffffffffff81111561283757612836611ff9565b5b612843878288016127a2565b91505092959194509250565b5f806040838503121561286557612864611ff5565b5b5f6128728582860161220c565b92505060206128838582860161220c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806128d157607f821691505b6020821081036128e4576128e361288d565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60608201905061292a5f8301866121ce565b612937602083018561261e565b61294460408301846121ce565b949350505050565b7f4e6f206d6f7265206861696b75730000000000000000000000000000000000005f82015250565b5f612980600e836120ba565b915061298b8261294c565b602082019050919050565b5f6020820190508181035f8301526129ad81612974565b9050919050565b5f81905092915050565b5f6129c8826120b0565b6129d281856129b4565b93506129e28185602086016120ca565b80840191505092915050565b5f6129f982846129be565b915081905092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612a607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a25565b612a6a8683612a25565b95508019841693508086168417925050509392505050565b5f819050919050565b5f612aa5612aa0612a9b84612140565b612a82565b612140565b9050919050565b5f819050919050565b612abe83612a8b565b612ad2612aca82612aac565b848454612a31565b825550505050565b5f90565b612ae6612ada565b612af1818484612ab5565b505050565b5b81811015612b1457612b095f82612ade565b600181019050612af7565b5050565b601f821115612b5957612b2a81612a04565b612b3384612a16565b81016020851015612b42578190505b612b56612b4e85612a16565b830182612af6565b50505b505050565b5f82821c905092915050565b5f612b795f1984600802612b5e565b1980831691505092915050565b5f612b918383612b6a565b9150826002028217905092915050565b612baa826120b0565b67ffffffffffffffff811115612bc357612bc26122b6565b5b612bcd82546128ba565b612bd8828285612b18565b5f60209050601f831160018114612c09575f8415612bf7578287015190505b612c018582612b86565b865550612c68565b601f198416612c1786612a04565b5f5b82811015612c3e57848901518255600182019150602085019450602081019050612c19565b86831015612c5b5784890151612c57601f891682612b6a565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612ca782612140565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612cd957612cd8612c70565b5b600182019050919050565b5f612cef82856129be565b9150612cfb82846129be565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f612d2b82612d07565b612d358185612d11565b9350612d458185602086016120ca565b612d4e816120d8565b840191505092915050565b5f608082019050612d6c5f8301876121ce565b612d7960208301866121ce565b612d86604083018561261e565b8181036060830152612d988184612d21565b905095945050505050565b5f81519050612db181612028565b92915050565b5f60208284031215612dcc57612dcb611ff5565b5b5f612dd984828501612da3565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f604082019050612e225f8301856121ce565b612e2f602083018461261e565b939250505056fea26469706673582212202b407af1abc77e84d594a145cdc772f26c52d80a2034e6147883b65791c5cea364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61BC221A GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x97AFE82D GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x97AFE82D EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3B2 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x61BC221A EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x7CB82B2A EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FC JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x350FE165 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x49AF5BFE EQ PUSH2 0x22D JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x884D540 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x2052 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x23DA JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH2 0xA55 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH2 0xA74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x25FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x2646 JUMP JUMPDEST PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0xEDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x1182 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x1198 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x2120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x284F JUMP JUMPDEST PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4AC JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x4BC JUMPI POP PUSH2 0x4BB DUP3 PUSH2 0x12A9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4D1 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FD SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x548 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x548 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x55C DUP3 PUSH2 0x1312 JUMP JUMPDEST POP PUSH2 0x566 DUP3 PUSH2 0x1398 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x598 JUMPI PUSH2 0x597 PUSH2 0x28EA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x61E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x3CE4E3200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP POP JUMP JUMPDEST PUSH2 0x695 DUP3 DUP3 PUSH2 0x690 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x13D8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x709 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x71C DUP4 DUP4 PUSH2 0x717 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x13EA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x792 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x789 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x9 SLOAD GT ISZERO PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D5 SWAP1 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7EE SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x83B JUMPI POP PUSH1 0x8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x86D JUMPI POP PUSH1 0x8 DUP2 PUSH1 0x40 MLOAD PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x693A889E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x922 SWAP2 SWAP1 PUSH2 0x29EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xA14 SWAP2 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0xA2A SWAP2 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST POP POP POP PUSH2 0xA39 CALLER PUSH1 0x9 SLOAD PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA4B SWAP1 PUSH2 0x2C9D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xA6F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1198 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF8826A6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0D PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB47 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xB34 PUSH2 0x1FAF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB2C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE05 JUMPI PUSH1 0x6 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBA5 JUMPI PUSH2 0xBA4 PUSH2 0x28EA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xBBF JUMPI PUSH2 0xBBE PUSH2 0x28EA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xC3A SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC66 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCB1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC88 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCB1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC94 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xCCA SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCF6 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD41 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD18 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD41 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD24 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xD5A SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD86 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDA8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDED JUMPI PUSH2 0xDEC PUSH2 0x28EA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xB4C JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xE1E DUP3 PUSH2 0x1312 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE96 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8D SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xEEA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xF2E SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF5A SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFA5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF7C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFA5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF88 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xFBA SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFE6 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1031 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1008 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1031 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1014 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x1046 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1072 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1094 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x10D6 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1102 SWAP1 PUSH2 0x28BA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x114D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1124 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x114D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1130 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1170 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1194 PUSH2 0x118D PUSH2 0x13D1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x16E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x11A3 DUP5 DUP5 DUP5 PUSH2 0x699 JUMP JUMPDEST PUSH2 0x11AF DUP5 DUP5 DUP5 DUP5 PUSH2 0x1851 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11C0 DUP3 PUSH2 0x1312 JUMP JUMPDEST POP PUSH0 PUSH2 0x11CA PUSH2 0x1A03 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x11E8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1213 JUMP JUMPDEST DUP1 PUSH2 0x11F2 DUP5 PUSH2 0x1A19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1203 SWAP3 SWAP2 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x131D DUP4 PUSH2 0x1AE3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x138F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1386 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13E5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1B1C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x13F5 DUP5 PUSH2 0x1AE3 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1436 JUMPI PUSH2 0x1435 DUP2 DUP5 DUP7 PUSH2 0x1CDB JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C1 JUMPI PUSH2 0x1475 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1540 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1665 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165C SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1671 DUP4 DUP4 PUSH0 PUSH2 0x13EA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16E3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DA SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1758 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x174F SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1844 SWAP2 SWAP1 PUSH2 0x2097 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x19FD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1894 PUSH2 0x13D1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18F1 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18EE SWAP2 SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1972 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x191F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x196A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1961 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x19FB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F2 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1A27 DUP5 PUSH2 0x1D9E JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A45 JUMPI PUSH2 0x1A44 PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A77 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1AD8 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1ACD JUMPI PUSH2 0x1ACC PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1A84 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1B54 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1C86 JUMPI PUSH0 PUSH2 0x1B63 DUP5 PUSH2 0x1312 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BCD JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1BE0 JUMPI POP PUSH2 0x1BDE DUP2 DUP5 PUSH2 0x121B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1C22 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C19 SWAP2 SWAP1 PUSH2 0x21DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1C84 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1CE6 DUP4 DUP4 DUP4 PUSH2 0x1EEF JUMP JUMPDEST PUSH2 0x1D99 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D5A JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D51 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D90 SWAP3 SWAP2 SWAP1 PUSH2 0x2E0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1DFA JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1DF0 JUMPI PUSH2 0x1DEF PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1E37 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1E2D JUMPI PUSH2 0x1E2C PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1E66 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1E5C JUMPI PUSH2 0x1E5B PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1E8F JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1E85 JUMPI PUSH2 0x1E84 PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1EB4 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1EAA JUMPI PUSH2 0x1EA9 PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1ED7 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1ECD JUMPI PUSH2 0x1ECC PUSH2 0x2DE2 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1EE6 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1FA6 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1F67 JUMPI POP PUSH2 0x1F66 DUP5 DUP5 PUSH2 0x121B JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1FA5 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F8D DUP4 PUSH2 0x1398 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2031 DUP2 PUSH2 0x1FFD JUMP JUMPDEST DUP2 EQ PUSH2 0x203B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x204C DUP2 PUSH2 0x2028 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2067 JUMPI PUSH2 0x2066 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2074 DUP5 DUP3 DUP6 ADD PUSH2 0x203E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2091 DUP2 PUSH2 0x207D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20AA PUSH0 DUP4 ADD DUP5 PUSH2 0x2088 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20F2 DUP3 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x20FC DUP2 DUP6 PUSH2 0x20BA JUMP JUMPDEST SWAP4 POP PUSH2 0x210C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x2115 DUP2 PUSH2 0x20D8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2138 DUP2 DUP5 PUSH2 0x20E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2152 DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP2 EQ PUSH2 0x215C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x216D DUP2 PUSH2 0x2149 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2188 JUMPI PUSH2 0x2187 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2195 DUP5 DUP3 DUP6 ADD PUSH2 0x215F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21C7 DUP3 PUSH2 0x219E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D7 DUP2 PUSH2 0x21BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x21CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21FF DUP2 PUSH2 0x21BD JUMP JUMPDEST DUP2 EQ PUSH2 0x2209 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x221A DUP2 PUSH2 0x21F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2236 JUMPI PUSH2 0x2235 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2243 DUP6 DUP3 DUP7 ADD PUSH2 0x220C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2254 DUP6 DUP3 DUP7 ADD PUSH2 0x215F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2275 JUMPI PUSH2 0x2274 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2282 DUP7 DUP3 DUP8 ADD PUSH2 0x220C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2293 DUP7 DUP3 DUP8 ADD PUSH2 0x220C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22A4 DUP7 DUP3 DUP8 ADD PUSH2 0x215F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x22EC DUP3 PUSH2 0x20D8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x230B JUMPI PUSH2 0x230A PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x231D PUSH2 0x1FEC JUMP JUMPDEST SWAP1 POP PUSH2 0x2329 DUP3 DUP3 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2348 JUMPI PUSH2 0x2347 PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST PUSH2 0x2351 DUP3 PUSH2 0x20D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x237E PUSH2 0x2379 DUP5 PUSH2 0x232E JUMP JUMPDEST PUSH2 0x2314 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x239A JUMPI PUSH2 0x2399 PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST PUSH2 0x23A5 DUP5 DUP3 DUP6 PUSH2 0x235E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23C1 JUMPI PUSH2 0x23C0 PUSH2 0x22AE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23D1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x236C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23F1 JUMPI PUSH2 0x23F0 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x240E JUMPI PUSH2 0x240D PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH2 0x241A DUP7 DUP3 DUP8 ADD PUSH2 0x23AD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x243B JUMPI PUSH2 0x243A PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH2 0x2447 DUP7 DUP3 DUP8 ADD PUSH2 0x23AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH2 0x2474 DUP7 DUP3 DUP8 ADD PUSH2 0x23AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B0 DUP2 PUSH2 0x21BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24D0 DUP3 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x24DA DUP2 DUP6 PUSH2 0x24B6 JUMP JUMPDEST SWAP4 POP PUSH2 0x24EA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x24F3 DUP2 PUSH2 0x20D8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0x2513 PUSH0 DUP7 ADD DUP3 PUSH2 0x24A7 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x252B DUP3 DUP3 PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x2545 DUP3 DUP3 PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x255F DUP3 DUP3 PUSH2 0x24C6 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2577 DUP4 DUP4 PUSH2 0x24FE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2595 DUP3 PUSH2 0x247E JUMP JUMPDEST PUSH2 0x259F DUP2 DUP6 PUSH2 0x2488 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x25B1 DUP6 PUSH2 0x2498 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x25EC JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x25CD DUP6 DUP3 PUSH2 0x256C JUMP JUMPDEST SWAP5 POP PUSH2 0x25D8 DUP4 PUSH2 0x257F JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25B4 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2616 DUP2 DUP5 PUSH2 0x258B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2627 DUP2 PUSH2 0x2140 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2640 PUSH0 DUP4 ADD DUP5 PUSH2 0x261E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x265B JUMPI PUSH2 0x265A PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2668 DUP5 DUP3 DUP6 ADD PUSH2 0x220C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2684 PUSH0 DUP4 ADD DUP8 PUSH2 0x21CE JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2696 DUP2 DUP7 PUSH2 0x20E8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x26AA DUP2 DUP6 PUSH2 0x20E8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x26BE DUP2 DUP5 PUSH2 0x20E8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x26D2 DUP2 PUSH2 0x207D JUMP JUMPDEST DUP2 EQ PUSH2 0x26DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26ED DUP2 PUSH2 0x26C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2709 JUMPI PUSH2 0x2708 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2716 DUP6 DUP3 DUP7 ADD PUSH2 0x220C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2727 DUP6 DUP3 DUP7 ADD PUSH2 0x26DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x274B JUMPI PUSH2 0x274A PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST PUSH2 0x2754 DUP3 PUSH2 0x20D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2773 PUSH2 0x276E DUP5 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0x2314 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x278F JUMPI PUSH2 0x278E PUSH2 0x22B2 JUMP JUMPDEST JUMPDEST PUSH2 0x279A DUP5 DUP3 DUP6 PUSH2 0x235E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27B6 JUMPI PUSH2 0x27B5 PUSH2 0x22AE JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x27C6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2761 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27E7 JUMPI PUSH2 0x27E6 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27F4 DUP8 DUP3 DUP9 ADD PUSH2 0x220C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2805 DUP8 DUP3 DUP9 ADD PUSH2 0x220C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2816 DUP8 DUP3 DUP9 ADD PUSH2 0x215F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2837 JUMPI PUSH2 0x2836 PUSH2 0x1FF9 JUMP JUMPDEST JUMPDEST PUSH2 0x2843 DUP8 DUP3 DUP9 ADD PUSH2 0x27A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2865 JUMPI PUSH2 0x2864 PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2872 DUP6 DUP3 DUP7 ADD PUSH2 0x220C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2883 DUP6 DUP3 DUP7 ADD PUSH2 0x220C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x28D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x28E4 JUMPI PUSH2 0x28E3 PUSH2 0x288D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x292A PUSH0 DUP4 ADD DUP7 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x2937 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x261E JUMP JUMPDEST PUSH2 0x2944 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x21CE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F206D6F7265206861696B7573000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2980 PUSH1 0xE DUP4 PUSH2 0x20BA JUMP JUMPDEST SWAP2 POP PUSH2 0x298B DUP3 PUSH2 0x294C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29AD DUP2 PUSH2 0x2974 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29C8 DUP3 PUSH2 0x20B0 JUMP JUMPDEST PUSH2 0x29D2 DUP2 DUP6 PUSH2 0x29B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x29E2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20CA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29F9 DUP3 DUP5 PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2A60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A25 JUMP JUMPDEST PUSH2 0x2A6A DUP7 DUP4 PUSH2 0x2A25 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AA5 PUSH2 0x2AA0 PUSH2 0x2A9B DUP5 PUSH2 0x2140 JUMP JUMPDEST PUSH2 0x2A82 JUMP JUMPDEST PUSH2 0x2140 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2ABE DUP4 PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0x2AD2 PUSH2 0x2ACA DUP3 PUSH2 0x2AAC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A31 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2AE6 PUSH2 0x2ADA JUMP JUMPDEST PUSH2 0x2AF1 DUP2 DUP5 DUP5 PUSH2 0x2AB5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B14 JUMPI PUSH2 0x2B09 PUSH0 DUP3 PUSH2 0x2ADE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2AF7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2B59 JUMPI PUSH2 0x2B2A DUP2 PUSH2 0x2A04 JUMP JUMPDEST PUSH2 0x2B33 DUP5 PUSH2 0x2A16 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2B42 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2B56 PUSH2 0x2B4E DUP6 PUSH2 0x2A16 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2AF6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B79 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2B5E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B91 DUP4 DUP4 PUSH2 0x2B6A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BAA DUP3 PUSH2 0x20B0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BC3 JUMPI PUSH2 0x2BC2 PUSH2 0x22B6 JUMP JUMPDEST JUMPDEST PUSH2 0x2BCD DUP3 SLOAD PUSH2 0x28BA JUMP JUMPDEST PUSH2 0x2BD8 DUP3 DUP3 DUP6 PUSH2 0x2B18 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C09 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2BF7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2C01 DUP6 DUP3 PUSH2 0x2B86 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2C68 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2C17 DUP7 PUSH2 0x2A04 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C3E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C19 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2C5B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2C57 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2B6A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2CA7 DUP3 PUSH2 0x2140 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2CD9 JUMPI PUSH2 0x2CD8 PUSH2 0x2C70 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CEF DUP3 DUP6 PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFB DUP3 DUP5 PUSH2 0x29BE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D2B DUP3 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x2D35 DUP2 DUP6 PUSH2 0x2D11 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D45 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x2D4E DUP2 PUSH2 0x20D8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2D6C PUSH0 DUP4 ADD DUP8 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x2D79 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x2D86 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x261E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2D98 DUP2 DUP5 PUSH2 0x2D21 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2DB1 DUP2 PUSH2 0x2028 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DCC JUMPI PUSH2 0x2DCB PUSH2 0x1FF5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DD9 DUP5 DUP3 DUP6 ADD PUSH2 0x2DA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E22 PUSH0 DUP4 ADD DUP6 PUSH2 0x21CE JUMP JUMPDEST PUSH2 0x2E2F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x261E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B BLOCKHASH PUSH27 0xF1ABC77E84D594A145CDC772F26C52D80A2034E6147883B65791C5 0xCE LOG3 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "188:2799:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1975:173:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3323:113:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1189:566:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2367:617:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;733:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2185:118:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;428:21:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2518:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;504:49:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1561:300;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;1975:173:11:-;2066:10;2045:31;;:6;2052:3;2045:11;;;;;;;;:::i;:::-;;;;;;;;;;;;:17;;;;;;;;;;;;:31;;;2041:61;;2098:3;2085:17;;;;;;;;;;;:::i;:::-;;;;;;;;2041:61;2113:12;:17;2126:3;2113:17;;;;;;;;;;;;;;;2136:3;2113:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1975:173;;:::o;3323:113:1:-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;1189:566:11:-;1308:2;1298:7;;:12;1294:42;;;1312:24;;;;;;;;;;:::i;:::-;;;;;;;;1294:42;1404:9;1414:6;1404:17;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:38;;;;1425:9;1435:6;1425:17;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1404:38;:59;;;;1446:9;1456:6;1446:17;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1404:59;1400:115;;;1487:16;;;;;;;;;;;;;;1400:115;1547:4;1527:9;1537:6;1527:17;;;;;;:::i;:::-;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1582:4;1562:9;1572:6;1562:17;;;;;;:::i;:::-;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1617:4;1597:9;1607:6;1597:17;;;;;;:::i;:::-;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1634:6;1646:41;;;;;;;;1652:10;1646:41;;;;;;1664:6;1646:41;;;;1672:6;1646:41;;;;1680:6;1646:41;;;1634:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;1699:26;1705:10;1717:7;;1699:5;:26::i;:::-;1738:7;;:9;;;;;;;;;:::i;:::-;;;;;;1189:566;;;:::o;4787:132:1:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2367:617:11:-;2417:14;2520:24;2547:12;:24;2560:10;2547:24;;;;;;;;;;;;;;;:31;;;;2520:58;;2613:1;2593:16;:21;2589:50;;2623:16;;;;;;;;;;;;;;2589:50;2715:22;2752:16;2740:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2715:54;;2833:9;2828:122;2852:16;2848:1;:20;2828:122;;;2903:6;2910:12;:24;2923:10;2910:24;;;;;;;;;;;;;;;2935:1;2910:27;;;;;;;;:::i;:::-;;;;;;;;;;2903:35;;;;;;;;:::i;:::-;;;;;;;;;;;;2890:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;2898:1;2890:10;;;;;;;;:::i;:::-;;;;;;;:48;;;;2870:3;;;;;;;2828:122;;;;2969:7;2962:14;;;;2367:617;:::o;733:26::-;;;;:::o;2185:118:1:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;428:21:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2518:93:1:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;504:49:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3718:144:1:-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;3928:153::-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;762:146:7:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:1:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;14418:120:1:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:6:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;5707:115:1:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;12214:916:9:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;6376:272:1:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:12:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:117::-;5517:1;5514;5507:12;5531:117;5640:1;5637;5630:12;5654:180;5702:77;5699:1;5692:88;5799:4;5796:1;5789:15;5823:4;5820:1;5813:15;5840:281;5923:27;5945:4;5923:27;:::i;:::-;5915:6;5911:40;6053:6;6041:10;6038:22;6017:18;6005:10;6002:34;5999:62;5996:88;;;6064:18;;:::i;:::-;5996:88;6104:10;6100:2;6093:22;5883:238;5840:281;;:::o;6127:129::-;6161:6;6188:20;;:::i;:::-;6178:30;;6217:33;6245:4;6237:6;6217:33;:::i;:::-;6127:129;;;:::o;6262:308::-;6324:4;6414:18;6406:6;6403:30;6400:56;;;6436:18;;:::i;:::-;6400:56;6474:29;6496:6;6474:29;:::i;:::-;6466:37;;6558:4;6552;6548:15;6540:23;;6262:308;;;:::o;6576:148::-;6674:6;6669:3;6664;6651:30;6715:1;6706:6;6701:3;6697:16;6690:27;6576:148;;;:::o;6730:425::-;6808:5;6833:66;6849:49;6891:6;6849:49;:::i;:::-;6833:66;:::i;:::-;6824:75;;6922:6;6915:5;6908:21;6960:4;6953:5;6949:16;6998:3;6989:6;6984:3;6980:16;6977:25;6974:112;;;7005:79;;:::i;:::-;6974:112;7095:54;7142:6;7137:3;7132;7095:54;:::i;:::-;6814:341;6730:425;;;;;:::o;7175:340::-;7231:5;7280:3;7273:4;7265:6;7261:17;7257:27;7247:122;;7288:79;;:::i;:::-;7247:122;7405:6;7392:20;7430:79;7505:3;7497:6;7490:4;7482:6;7478:17;7430:79;:::i;:::-;7421:88;;7237:278;7175:340;;;;:::o;7521:1159::-;7628:6;7636;7644;7693:2;7681:9;7672:7;7668:23;7664:32;7661:119;;;7699:79;;:::i;:::-;7661:119;7847:1;7836:9;7832:17;7819:31;7877:18;7869:6;7866:30;7863:117;;;7899:79;;:::i;:::-;7863:117;8004:63;8059:7;8050:6;8039:9;8035:22;8004:63;:::i;:::-;7994:73;;7790:287;8144:2;8133:9;8129:18;8116:32;8175:18;8167:6;8164:30;8161:117;;;8197:79;;:::i;:::-;8161:117;8302:63;8357:7;8348:6;8337:9;8333:22;8302:63;:::i;:::-;8292:73;;8087:288;8442:2;8431:9;8427:18;8414:32;8473:18;8465:6;8462:30;8459:117;;;8495:79;;:::i;:::-;8459:117;8600:63;8655:7;8646:6;8635:9;8631:22;8600:63;:::i;:::-;8590:73;;8385:288;7521:1159;;;;;:::o;8686:137::-;8776:6;8810:5;8804:12;8794:22;;8686:137;;;:::o;8829:207::-;8951:11;8985:6;8980:3;8973:19;9025:4;9020:3;9016:14;9001:29;;8829:207;;;;:::o;9042:155::-;9132:4;9155:3;9147:11;;9185:4;9180:3;9176:14;9168:22;;9042:155;;;:::o;9203:108::-;9280:24;9298:5;9280:24;:::i;:::-;9275:3;9268:37;9203:108;;:::o;9317:159::-;9391:11;9425:6;9420:3;9413:19;9465:4;9460:3;9456:14;9441:29;;9317:159;;;;:::o;9482:357::-;9560:3;9588:39;9621:5;9588:39;:::i;:::-;9643:61;9697:6;9692:3;9643:61;:::i;:::-;9636:68;;9713:65;9771:6;9766:3;9759:4;9752:5;9748:16;9713:65;:::i;:::-;9803:29;9825:6;9803:29;:::i;:::-;9798:3;9794:39;9787:46;;9564:275;9482:357;;;;:::o;9899:1086::-;10004:3;10040:4;10035:3;10031:14;10128:4;10121:5;10117:16;10111:23;10147:63;10204:4;10199:3;10195:14;10181:12;10147:63;:::i;:::-;10055:165;10303:4;10296:5;10292:16;10286:23;10356:3;10350:4;10346:14;10339:4;10334:3;10330:14;10323:38;10382:73;10450:4;10436:12;10382:73;:::i;:::-;10374:81;;10230:236;10549:4;10542:5;10538:16;10532:23;10602:3;10596:4;10592:14;10585:4;10580:3;10576:14;10569:38;10628:73;10696:4;10682:12;10628:73;:::i;:::-;10620:81;;10476:236;10795:4;10788:5;10784:16;10778:23;10848:3;10842:4;10838:14;10831:4;10826:3;10822:14;10815:38;10874:73;10942:4;10928:12;10874:73;:::i;:::-;10866:81;;10722:236;10975:4;10968:11;;10009:976;9899:1086;;;;:::o;10991:248::-;11106:10;11141:92;11229:3;11221:6;11141:92;:::i;:::-;11127:106;;10991:248;;;;:::o;11245:136::-;11338:4;11370;11365:3;11361:14;11353:22;;11245:136;;;:::o;11445:1095::-;11610:3;11639:77;11710:5;11639:77;:::i;:::-;11732:109;11834:6;11829:3;11732:109;:::i;:::-;11725:116;;11867:3;11912:4;11904:6;11900:17;11895:3;11891:27;11942:79;12015:5;11942:79;:::i;:::-;12044:7;12075:1;12060:435;12085:6;12082:1;12079:13;12060:435;;;12156:9;12150:4;12146:20;12141:3;12134:33;12207:6;12201:13;12235:110;12340:4;12325:13;12235:110;:::i;:::-;12227:118;;12368:83;12444:6;12368:83;:::i;:::-;12358:93;;12480:4;12475:3;12471:14;12464:21;;12120:375;12107:1;12104;12100:9;12095:14;;12060:435;;;12064:14;12511:4;12504:11;;12531:3;12524:10;;11615:925;;;;;11445:1095;;;;:::o;12546:465::-;12735:4;12773:2;12762:9;12758:18;12750:26;;12822:9;12816:4;12812:20;12808:1;12797:9;12793:17;12786:47;12850:154;12999:4;12990:6;12850:154;:::i;:::-;12842:162;;12546:465;;;;:::o;13017:118::-;13104:24;13122:5;13104:24;:::i;:::-;13099:3;13092:37;13017:118;;:::o;13141:222::-;13234:4;13272:2;13261:9;13257:18;13249:26;;13285:71;13353:1;13342:9;13338:17;13329:6;13285:71;:::i;:::-;13141:222;;;;:::o;13369:329::-;13428:6;13477:2;13465:9;13456:7;13452:23;13448:32;13445:119;;;13483:79;;:::i;:::-;13445:119;13603:1;13628:53;13673:7;13664:6;13653:9;13649:22;13628:53;:::i;:::-;13618:63;;13574:117;13369:329;;;;:::o;13704:826::-;13941:4;13979:3;13968:9;13964:19;13956:27;;13993:71;14061:1;14050:9;14046:17;14037:6;13993:71;:::i;:::-;14111:9;14105:4;14101:20;14096:2;14085:9;14081:18;14074:48;14139:78;14212:4;14203:6;14139:78;:::i;:::-;14131:86;;14264:9;14258:4;14254:20;14249:2;14238:9;14234:18;14227:48;14292:78;14365:4;14356:6;14292:78;:::i;:::-;14284:86;;14417:9;14411:4;14407:20;14402:2;14391:9;14387:18;14380:48;14445:78;14518:4;14509:6;14445:78;:::i;:::-;14437:86;;13704:826;;;;;;;:::o;14536:116::-;14606:21;14621:5;14606:21;:::i;:::-;14599:5;14596:32;14586:60;;14642:1;14639;14632:12;14586:60;14536:116;:::o;14658:133::-;14701:5;14739:6;14726:20;14717:29;;14755:30;14779:5;14755:30;:::i;:::-;14658:133;;;;:::o;14797:468::-;14862:6;14870;14919:2;14907:9;14898:7;14894:23;14890:32;14887:119;;;14925:79;;:::i;:::-;14887:119;15045:1;15070:53;15115:7;15106:6;15095:9;15091:22;15070:53;:::i;:::-;15060:63;;15016:117;15172:2;15198:50;15240:7;15231:6;15220:9;15216:22;15198:50;:::i;:::-;15188:60;;15143:115;14797:468;;;;;:::o;15271:307::-;15332:4;15422:18;15414:6;15411:30;15408:56;;;15444:18;;:::i;:::-;15408:56;15482:29;15504:6;15482:29;:::i;:::-;15474:37;;15566:4;15560;15556:15;15548:23;;15271:307;;;:::o;15584:423::-;15661:5;15686:65;15702:48;15743:6;15702:48;:::i;:::-;15686:65;:::i;:::-;15677:74;;15774:6;15767:5;15760:21;15812:4;15805:5;15801:16;15850:3;15841:6;15836:3;15832:16;15829:25;15826:112;;;15857:79;;:::i;:::-;15826:112;15947:54;15994:6;15989:3;15984;15947:54;:::i;:::-;15667:340;15584:423;;;;;:::o;16026:338::-;16081:5;16130:3;16123:4;16115:6;16111:17;16107:27;16097:122;;16138:79;;:::i;:::-;16097:122;16255:6;16242:20;16280:78;16354:3;16346:6;16339:4;16331:6;16327:17;16280:78;:::i;:::-;16271:87;;16087:277;16026:338;;;;:::o;16370:943::-;16465:6;16473;16481;16489;16538:3;16526:9;16517:7;16513:23;16509:33;16506:120;;;16545:79;;:::i;:::-;16506:120;16665:1;16690:53;16735:7;16726:6;16715:9;16711:22;16690:53;:::i;:::-;16680:63;;16636:117;16792:2;16818:53;16863:7;16854:6;16843:9;16839:22;16818:53;:::i;:::-;16808:63;;16763:118;16920:2;16946:53;16991:7;16982:6;16971:9;16967:22;16946:53;:::i;:::-;16936:63;;16891:118;17076:2;17065:9;17061:18;17048:32;17107:18;17099:6;17096:30;17093:117;;;17129:79;;:::i;:::-;17093:117;17234:62;17288:7;17279:6;17268:9;17264:22;17234:62;:::i;:::-;17224:72;;17019:287;16370:943;;;;;;;:::o;17319:474::-;17387:6;17395;17444:2;17432:9;17423:7;17419:23;17415:32;17412:119;;;17450:79;;:::i;:::-;17412:119;17570:1;17595:53;17640:7;17631:6;17620:9;17616:22;17595:53;:::i;:::-;17585:63;;17541:117;17697:2;17723:53;17768:7;17759:6;17748:9;17744:22;17723:53;:::i;:::-;17713:63;;17668:118;17319:474;;;;;:::o;17799:180::-;17847:77;17844:1;17837:88;17944:4;17941:1;17934:15;17968:4;17965:1;17958:15;17985:320;18029:6;18066:1;18060:4;18056:12;18046:22;;18113:1;18107:4;18103:12;18134:18;18124:81;;18190:4;18182:6;18178:17;18168:27;;18124:81;18252:2;18244:6;18241:14;18221:18;18218:38;18215:84;;18271:18;;:::i;:::-;18215:84;18036:269;17985:320;;;:::o;18311:180::-;18359:77;18356:1;18349:88;18456:4;18453:1;18446:15;18480:4;18477:1;18470:15;18497:442;18646:4;18684:2;18673:9;18669:18;18661:26;;18697:71;18765:1;18754:9;18750:17;18741:6;18697:71;:::i;:::-;18778:72;18846:2;18835:9;18831:18;18822:6;18778:72;:::i;:::-;18860;18928:2;18917:9;18913:18;18904:6;18860:72;:::i;:::-;18497:442;;;;;;:::o;18945:164::-;19085:16;19081:1;19073:6;19069:14;19062:40;18945:164;:::o;19115:366::-;19257:3;19278:67;19342:2;19337:3;19278:67;:::i;:::-;19271:74;;19354:93;19443:3;19354:93;:::i;:::-;19472:2;19467:3;19463:12;19456:19;;19115:366;;;:::o;19487:419::-;19653:4;19691:2;19680:9;19676:18;19668:26;;19740:9;19734:4;19730:20;19726:1;19715:9;19711:17;19704:47;19768:131;19894:4;19768:131;:::i;:::-;19760:139;;19487:419;;;:::o;19912:148::-;20014:11;20051:3;20036:18;;19912:148;;;;:::o;20066:390::-;20172:3;20200:39;20233:5;20200:39;:::i;:::-;20255:89;20337:6;20332:3;20255:89;:::i;:::-;20248:96;;20353:65;20411:6;20406:3;20399:4;20392:5;20388:16;20353:65;:::i;:::-;20443:6;20438:3;20434:16;20427:23;;20176:280;20066:390;;;;:::o;20462:275::-;20594:3;20616:95;20707:3;20698:6;20616:95;:::i;:::-;20609:102;;20728:3;20721:10;;20462:275;;;;:::o;20743:141::-;20792:4;20815:3;20807:11;;20838:3;20835:1;20828:14;20872:4;20869:1;20859:18;20851:26;;20743:141;;;:::o;20890:93::-;20927:6;20974:2;20969;20962:5;20958:14;20954:23;20944:33;;20890:93;;;:::o;20989:107::-;21033:8;21083:5;21077:4;21073:16;21052:37;;20989:107;;;;:::o;21102:393::-;21171:6;21221:1;21209:10;21205:18;21244:97;21274:66;21263:9;21244:97;:::i;:::-;21362:39;21392:8;21381:9;21362:39;:::i;:::-;21350:51;;21434:4;21430:9;21423:5;21419:21;21410:30;;21483:4;21473:8;21469:19;21462:5;21459:30;21449:40;;21178:317;;21102:393;;;;;:::o;21501:60::-;21529:3;21550:5;21543:12;;21501:60;;;:::o;21567:142::-;21617:9;21650:53;21668:34;21677:24;21695:5;21677:24;:::i;:::-;21668:34;:::i;:::-;21650:53;:::i;:::-;21637:66;;21567:142;;;:::o;21715:75::-;21758:3;21779:5;21772:12;;21715:75;;;:::o;21796:269::-;21906:39;21937:7;21906:39;:::i;:::-;21967:91;22016:41;22040:16;22016:41;:::i;:::-;22008:6;22001:4;21995:11;21967:91;:::i;:::-;21961:4;21954:105;21872:193;21796:269;;;:::o;22071:73::-;22116:3;22071:73;:::o;22150:189::-;22227:32;;:::i;:::-;22268:65;22326:6;22318;22312:4;22268:65;:::i;:::-;22203:136;22150:189;;:::o;22345:186::-;22405:120;22422:3;22415:5;22412:14;22405:120;;;22476:39;22513:1;22506:5;22476:39;:::i;:::-;22449:1;22442:5;22438:13;22429:22;;22405:120;;;22345:186;;:::o;22537:543::-;22638:2;22633:3;22630:11;22627:446;;;22672:38;22704:5;22672:38;:::i;:::-;22756:29;22774:10;22756:29;:::i;:::-;22746:8;22742:44;22939:2;22927:10;22924:18;22921:49;;;22960:8;22945:23;;22921:49;22983:80;23039:22;23057:3;23039:22;:::i;:::-;23029:8;23025:37;23012:11;22983:80;:::i;:::-;22642:431;;22627:446;22537:543;;;:::o;23086:117::-;23140:8;23190:5;23184:4;23180:16;23159:37;;23086:117;;;;:::o;23209:169::-;23253:6;23286:51;23334:1;23330:6;23322:5;23319:1;23315:13;23286:51;:::i;:::-;23282:56;23367:4;23361;23357:15;23347:25;;23260:118;23209:169;;;;:::o;23383:295::-;23459:4;23605:29;23630:3;23624:4;23605:29;:::i;:::-;23597:37;;23667:3;23664:1;23660:11;23654:4;23651:21;23643:29;;23383:295;;;;:::o;23683:1395::-;23800:37;23833:3;23800:37;:::i;:::-;23902:18;23894:6;23891:30;23888:56;;;23924:18;;:::i;:::-;23888:56;23968:38;24000:4;23994:11;23968:38;:::i;:::-;24053:67;24113:6;24105;24099:4;24053:67;:::i;:::-;24147:1;24171:4;24158:17;;24203:2;24195:6;24192:14;24220:1;24215:618;;;;24877:1;24894:6;24891:77;;;24943:9;24938:3;24934:19;24928:26;24919:35;;24891:77;24994:67;25054:6;25047:5;24994:67;:::i;:::-;24988:4;24981:81;24850:222;24185:887;;24215:618;24267:4;24263:9;24255:6;24251:22;24301:37;24333:4;24301:37;:::i;:::-;24360:1;24374:208;24388:7;24385:1;24382:14;24374:208;;;24467:9;24462:3;24458:19;24452:26;24444:6;24437:42;24518:1;24510:6;24506:14;24496:24;;24565:2;24554:9;24550:18;24537:31;;24411:4;24408:1;24404:12;24399:17;;24374:208;;;24610:6;24601:7;24598:19;24595:179;;;24668:9;24663:3;24659:19;24653:26;24711:48;24753:4;24745:6;24741:17;24730:9;24711:48;:::i;:::-;24703:6;24696:64;24618:156;24595:179;24820:1;24816;24808:6;24804:14;24800:22;24794:4;24787:36;24222:611;;;24185:887;;23775:1303;;;23683:1395;;:::o;25084:180::-;25132:77;25129:1;25122:88;25229:4;25226:1;25219:15;25253:4;25250:1;25243:15;25270:233;25309:3;25332:24;25350:5;25332:24;:::i;:::-;25323:33;;25378:66;25371:5;25368:77;25365:103;;25448:18;;:::i;:::-;25365:103;25495:1;25488:5;25484:13;25477:20;;25270:233;;;:::o;25509:435::-;25689:3;25711:95;25802:3;25793:6;25711:95;:::i;:::-;25704:102;;25823:95;25914:3;25905:6;25823:95;:::i;:::-;25816:102;;25935:3;25928:10;;25509:435;;;;;:::o;25950:98::-;26001:6;26035:5;26029:12;26019:22;;25950:98;;;:::o;26054:168::-;26137:11;26171:6;26166:3;26159:19;26211:4;26206:3;26202:14;26187:29;;26054:168;;;;:::o;26228:373::-;26314:3;26342:38;26374:5;26342:38;:::i;:::-;26396:70;26459:6;26454:3;26396:70;:::i;:::-;26389:77;;26475:65;26533:6;26528:3;26521:4;26514:5;26510:16;26475:65;:::i;:::-;26565:29;26587:6;26565:29;:::i;:::-;26560:3;26556:39;26549:46;;26318:283;26228:373;;;;:::o;26607:640::-;26802:4;26840:3;26829:9;26825:19;26817:27;;26854:71;26922:1;26911:9;26907:17;26898:6;26854:71;:::i;:::-;26935:72;27003:2;26992:9;26988:18;26979:6;26935:72;:::i;:::-;27017;27085:2;27074:9;27070:18;27061:6;27017:72;:::i;:::-;27136:9;27130:4;27126:20;27121:2;27110:9;27106:18;27099:48;27164:76;27235:4;27226:6;27164:76;:::i;:::-;27156:84;;26607:640;;;;;;;:::o;27253:141::-;27309:5;27340:6;27334:13;27325:22;;27356:32;27382:5;27356:32;:::i;:::-;27253:141;;;;:::o;27400:349::-;27469:6;27518:2;27506:9;27497:7;27493:23;27489:32;27486:119;;;27524:79;;:::i;:::-;27486:119;27644:1;27669:63;27724:7;27715:6;27704:9;27700:22;27669:63;:::i;:::-;27659:73;;27615:127;27400:349;;;;:::o;27755:180::-;27803:77;27800:1;27793:88;27900:4;27897:1;27890:15;27924:4;27921:1;27914:15;27941:332;28062:4;28100:2;28089:9;28085:18;28077:26;;28113:71;28181:1;28170:9;28166:17;28157:6;28113:71;:::i;:::-;28194:72;28262:2;28251:9;28247:18;28238:6;28194:72;:::i;:::-;27941:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2376800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"counter()": "2448",
								"getApproved(uint256)": "infinite",
								"getMySharedHaikus()": "infinite",
								"haikus(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintHaiku(string,string,string)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"shareHaiku(address,uint256)": "infinite",
								"sharedHaikus(address,uint256)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2987,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 188,
									"end": 2987,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 188,
									"end": 2987,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 758,
									"end": 759,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 733,
									"end": 759,
									"name": "PUSH",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 733,
									"end": 759,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 865,
									"end": 909,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 865,
									"end": 909,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 865,
									"end": 909,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 865,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 865,
									"end": 909,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 865,
									"end": 909,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 865,
									"end": 909,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 865,
									"end": 909,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 865,
									"end": 909,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 865,
									"end": 909,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 865,
									"end": 909,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "4861696B754E4654000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "4841494B55000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 188,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 188,
									"end": 2987,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 188,
									"end": 2987,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 188,
									"end": 2987,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 188,
									"end": 2987,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2987,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 188,
									"end": 2987,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2987,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2987,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 188,
									"end": 2987,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2987,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b407af1abc77e84d594a145cdc772f26c52d80a2034e6147883b65791c5cea364736f6c63430008190033",
									".code": [
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "61BC221A"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "97AFE82D"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "97AFE82D"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "B88D4FDE"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "C87B56DD"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "61BC221A"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "6352211E"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "7CB82B2A"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "350FE165"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "42842E0E"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "49AF5BFE"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "81812FC"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "884D540"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 188,
											"end": 2987,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1975,
											"end": 2148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1975,
											"end": 2148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1189,
											"end": 1755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1189,
											"end": 1755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2367,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 2367,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 733,
											"end": 759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 733,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 733,
											"end": 759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 733,
											"end": 759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 759,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 733,
											"end": 759,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 733,
											"end": 759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 733,
											"end": 759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 759,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 428,
											"end": 449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 428,
											"end": 449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 428,
											"end": 449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 504,
											"end": 553,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 504,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 504,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 504,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2076,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2076,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2045,
											"end": 2076,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2051,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2052,
											"end": 2055,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 2045,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2056,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2062,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2062,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2062,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2062,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2062,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2062,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2062,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2045,
											"end": 2062,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2062,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2062,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2062,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2045,
											"end": 2062,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2076,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2045,
											"end": 2076,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2076,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2041,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2041,
											"end": 2102,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2098,
											"end": 2101,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "PUSH",
											"source": 11,
											"value": "3CE4E3200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2085,
											"end": 2102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2085,
											"end": 2102,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2041,
											"end": 2102,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2041,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2125,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2129,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2130,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2136,
											"end": 2139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2140,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 2148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 1298,
											"end": 1305,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1298,
											"end": 1305,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1298,
											"end": 1310,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1336,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1294,
											"end": 1336,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1312,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1294,
											"end": 1336,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1294,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1414,
											"end": 1420,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1404,
											"end": 1421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1404,
											"end": 1421,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1404,
											"end": 1442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1425,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1442,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1404,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1463,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1404,
											"end": 1463,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1463,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1455,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1446,
											"end": 1463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1446,
											"end": 1463,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1463,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1404,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1515,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 1400,
											"end": 1515,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "693A889E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1515,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 1400,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1547,
											"end": 1551,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1527,
											"end": 1536,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1537,
											"end": 1543,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1527,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1544,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1582,
											"end": 1586,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1562,
											"end": 1571,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1572,
											"end": 1578,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1562,
											"end": 1579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1579,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1562,
											"end": 1586,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1621,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1597,
											"end": 1606,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1607,
											"end": 1613,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1597,
											"end": 1614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1614,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1640,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1652,
											"end": 1662,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 1670,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1672,
											"end": 1678,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1646,
											"end": 1687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 1634,
											"end": 1688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 1634,
											"end": 1688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 1634,
											"end": 1688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1699,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 1705,
											"end": 1715,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1724,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1717,
											"end": 1724,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1699,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 1699,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1699,
											"end": 1725,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 1699,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1738,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2417,
											"end": 2431,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2520,
											"end": 2544,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2570,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2571,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2578,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2578,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2578,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2578,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2578,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2578,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2593,
											"end": 2609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2614,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "PUSH",
											"source": 11,
											"value": "F8826A6900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2639,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2589,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2768,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 2740,
											"end": 2769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2740,
											"end": 2769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2740,
											"end": 2769,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2715,
											"end": 2769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2715,
											"end": 2769,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2833,
											"end": 2842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2950,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 2828,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2852,
											"end": 2868,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2868,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2828,
											"end": 2950,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2828,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 2828,
											"end": 2950,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2909,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2910,
											"end": 2922,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2933,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2935,
											"end": 2936,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 2910,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2910,
											"end": 2937,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 2903,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2890,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2890,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2890,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2890,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2890,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 2890,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2897,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2898,
											"end": 2899,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 2890,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2890,
											"end": 2938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2873,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2873,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2873,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2870,
											"end": 2873,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2873,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2828,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 2828,
											"end": 2950,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2828,
											"end": 2950,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 2828,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2828,
											"end": 2950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2969,
											"end": 2976,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2962,
											"end": 2976,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2962,
											"end": 2976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2962,
											"end": 2976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2962,
											"end": 2976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 733,
											"end": 759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 733,
											"end": 759,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 733,
											"end": 759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 428,
											"end": 449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 428,
											"end": 449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 428,
											"end": 449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 428,
											"end": 449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 428,
											"end": 449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 428,
											"end": 449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 428,
											"end": 449,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 428,
											"end": 449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 504,
											"end": 553,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 504,
											"end": 553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 6,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 5408,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5515,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5507,
											"end": 5519,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5531,
											"end": 5648,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 5531,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5640,
											"end": 5641,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5637,
											"end": 5638,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5630,
											"end": 5642,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5654,
											"end": 5834,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 5654,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5702,
											"end": 5779,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5699,
											"end": 5700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5780,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5799,
											"end": 5803,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 5796,
											"end": 5797,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5789,
											"end": 5804,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5823,
											"end": 5827,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5820,
											"end": 5821,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5828,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 5923,
											"end": 5950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 5951,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6053,
											"end": 6059,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6041,
											"end": 6051,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6038,
											"end": 6060,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6017,
											"end": 6035,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6005,
											"end": 6015,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5999,
											"end": 6061,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 6064,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 5996,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6104,
											"end": 6114,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6100,
											"end": 6102,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6115,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 6121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 6121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5840,
											"end": 6121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6188,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 6188,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6237,
											"end": 6243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 6217,
											"end": 6250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 6217,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6127,
											"end": 6256,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6127,
											"end": 6256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6328,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6432,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6406,
											"end": 6412,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6403,
											"end": 6433,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 6436,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 6436,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 6400,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 6496,
											"end": 6502,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 6474,
											"end": 6503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 6474,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6466,
											"end": 6503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6466,
											"end": 6503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6558,
											"end": 6562,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6556,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6548,
											"end": 6563,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6540,
											"end": 6563,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6540,
											"end": 6563,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6262,
											"end": 6570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6262,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6674,
											"end": 6680,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6669,
											"end": 6672,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6664,
											"end": 6667,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6651,
											"end": 6681,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 6715,
											"end": 6716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6701,
											"end": 6704,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6690,
											"end": 6717,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6576,
											"end": 6724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6576,
											"end": 6724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6808,
											"end": 6813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 6849,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 6849,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 6833,
											"end": 6899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 6833,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6824,
											"end": 6899,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6824,
											"end": 6899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6915,
											"end": 6920,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6908,
											"end": 6929,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6960,
											"end": 6964,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6953,
											"end": 6958,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6949,
											"end": 6965,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6998,
											"end": 7001,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 6995,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6984,
											"end": 6987,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6980,
											"end": 6996,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6977,
											"end": 7002,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 7005,
											"end": 7084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 7005,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 6974,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 7142,
											"end": 7148,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7137,
											"end": 7140,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7132,
											"end": 7135,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 7095,
											"end": 7149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 7095,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6814,
											"end": 7155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6730,
											"end": 7155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6730,
											"end": 7155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7236,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7280,
											"end": 7283,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7261,
											"end": 7278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7257,
											"end": 7284,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 7288,
											"end": 7367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 7288,
											"end": 7367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 7247,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7392,
											"end": 7412,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 7505,
											"end": 7508,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7490,
											"end": 7494,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 7430,
											"end": 7509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 7430,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7421,
											"end": 7509,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7421,
											"end": 7509,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7237,
											"end": 7515,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7175,
											"end": 7515,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7175,
											"end": 7515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 8680,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 7521,
											"end": 8680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7628,
											"end": 7634,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7636,
											"end": 7642,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7644,
											"end": 7650,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7693,
											"end": 7695,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7681,
											"end": 7690,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7672,
											"end": 7679,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7668,
											"end": 7691,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7664,
											"end": 7696,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7661,
											"end": 7780,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7661,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 7661,
											"end": 7780,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7699,
											"end": 7778,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 7699,
											"end": 7778,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 7699,
											"end": 7778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7699,
											"end": 7778,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 7699,
											"end": 7778,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7661,
											"end": 7780,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 7661,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7847,
											"end": 7848,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7845,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7832,
											"end": 7849,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 7850,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7877,
											"end": 7895,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7869,
											"end": 7875,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7866,
											"end": 7896,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7863,
											"end": 7980,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7863,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 7863,
											"end": 7980,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7899,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 7899,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 7899,
											"end": 7978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7899,
											"end": 7978,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 7899,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7863,
											"end": 7980,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 7863,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8004,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 8059,
											"end": 8066,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8050,
											"end": 8056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8039,
											"end": 8048,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8035,
											"end": 8057,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8004,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 8004,
											"end": 8067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8004,
											"end": 8067,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 8004,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7994,
											"end": 8067,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7994,
											"end": 8067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7790,
											"end": 8077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8144,
											"end": 8146,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8133,
											"end": 8142,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8129,
											"end": 8147,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8116,
											"end": 8148,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8167,
											"end": 8173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8164,
											"end": 8194,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8161,
											"end": 8278,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8161,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 8161,
											"end": 8278,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8197,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 8197,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 8197,
											"end": 8276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8197,
											"end": 8276,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 8197,
											"end": 8276,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8161,
											"end": 8278,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 8161,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 8357,
											"end": 8364,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8348,
											"end": 8354,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8337,
											"end": 8346,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8333,
											"end": 8355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 8302,
											"end": 8365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8302,
											"end": 8365,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 8302,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8292,
											"end": 8365,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8292,
											"end": 8365,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8087,
											"end": 8375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8442,
											"end": 8444,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8431,
											"end": 8440,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8427,
											"end": 8445,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8414,
											"end": 8446,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8465,
											"end": 8471,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8462,
											"end": 8492,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8459,
											"end": 8576,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8459,
											"end": 8576,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 8459,
											"end": 8576,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8495,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 8495,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 8495,
											"end": 8574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8495,
											"end": 8574,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 8495,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8459,
											"end": 8576,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 8459,
											"end": 8576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8600,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 8655,
											"end": 8662,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8646,
											"end": 8652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8635,
											"end": 8644,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8653,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8600,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 8600,
											"end": 8663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8600,
											"end": 8663,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 8600,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8590,
											"end": 8663,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8590,
											"end": 8663,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8385,
											"end": 8673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 8680,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 8680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 8680,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 8680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 8680,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 8680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8823,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 8686,
											"end": 8823,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8776,
											"end": 8782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8810,
											"end": 8815,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8804,
											"end": 8816,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8794,
											"end": 8816,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8794,
											"end": 8816,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8823,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8823,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 9036,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 8829,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8951,
											"end": 8962,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 8991,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8980,
											"end": 8983,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8973,
											"end": 8992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9025,
											"end": 9029,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9020,
											"end": 9023,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9016,
											"end": 9030,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9001,
											"end": 9030,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9001,
											"end": 9030,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 9036,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 9036,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 9036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9197,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 9042,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9132,
											"end": 9136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9158,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9158,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9185,
											"end": 9189,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9180,
											"end": 9183,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9176,
											"end": 9190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9197,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9197,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9197,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9042,
											"end": 9197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9203,
											"end": 9311,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 9203,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9280,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 9298,
											"end": 9303,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9280,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 9280,
											"end": 9304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9280,
											"end": 9304,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 9280,
											"end": 9304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9275,
											"end": 9278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9305,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9203,
											"end": 9311,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9203,
											"end": 9311,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9203,
											"end": 9311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9317,
											"end": 9476,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 9317,
											"end": 9476,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9391,
											"end": 9402,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9425,
											"end": 9431,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9420,
											"end": 9423,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9465,
											"end": 9469,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9460,
											"end": 9463,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9456,
											"end": 9470,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9441,
											"end": 9470,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9441,
											"end": 9470,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9317,
											"end": 9476,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9317,
											"end": 9476,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9317,
											"end": 9476,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9317,
											"end": 9476,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9317,
											"end": 9476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9482,
											"end": 9839,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 9482,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9560,
											"end": 9563,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9588,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 9621,
											"end": 9626,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9588,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 9588,
											"end": 9627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9588,
											"end": 9627,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 9588,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9692,
											"end": 9695,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 9643,
											"end": 9704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9643,
											"end": 9704,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 9643,
											"end": 9704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9636,
											"end": 9704,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9636,
											"end": 9704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9713,
											"end": 9778,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9766,
											"end": 9769,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9759,
											"end": 9763,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9752,
											"end": 9757,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9748,
											"end": 9764,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9713,
											"end": 9778,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 9713,
											"end": 9778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9713,
											"end": 9778,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 9713,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 9825,
											"end": 9831,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 9803,
											"end": 9832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9832,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 9803,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9798,
											"end": 9801,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9794,
											"end": 9833,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9833,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9564,
											"end": 9839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9482,
											"end": 9839,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9482,
											"end": 9839,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9482,
											"end": 9839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9482,
											"end": 9839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9482,
											"end": 9839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9899,
											"end": 10985,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 9899,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10004,
											"end": 10007,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10040,
											"end": 10044,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10035,
											"end": 10038,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10031,
											"end": 10045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10128,
											"end": 10132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10121,
											"end": 10126,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10117,
											"end": 10133,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10111,
											"end": 10134,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10147,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 10204,
											"end": 10208,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10202,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10195,
											"end": 10209,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10181,
											"end": 10193,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10147,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 10147,
											"end": 10210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10147,
											"end": 10210,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 10147,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10055,
											"end": 10220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10303,
											"end": 10307,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10296,
											"end": 10301,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10292,
											"end": 10308,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10286,
											"end": 10309,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10356,
											"end": 10359,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10350,
											"end": 10354,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10346,
											"end": 10360,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10339,
											"end": 10343,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10334,
											"end": 10337,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10330,
											"end": 10344,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10361,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10382,
											"end": 10455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 10450,
											"end": 10454,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10436,
											"end": 10448,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10382,
											"end": 10455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 10382,
											"end": 10455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10382,
											"end": 10455,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 10382,
											"end": 10455,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10374,
											"end": 10455,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10374,
											"end": 10455,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10230,
											"end": 10466,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10542,
											"end": 10547,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10538,
											"end": 10554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10555,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10602,
											"end": 10605,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10596,
											"end": 10600,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10592,
											"end": 10606,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10585,
											"end": 10589,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10580,
											"end": 10583,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10576,
											"end": 10590,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10569,
											"end": 10607,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10628,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 10696,
											"end": 10700,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10682,
											"end": 10694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10628,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 10628,
											"end": 10701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10628,
											"end": 10701,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 10628,
											"end": 10701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10476,
											"end": 10712,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10795,
											"end": 10799,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10788,
											"end": 10793,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10784,
											"end": 10800,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10778,
											"end": 10801,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10848,
											"end": 10851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10842,
											"end": 10846,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10838,
											"end": 10852,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10831,
											"end": 10835,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10826,
											"end": 10829,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10822,
											"end": 10836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10815,
											"end": 10853,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10874,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 10942,
											"end": 10946,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10928,
											"end": 10940,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10874,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 10874,
											"end": 10947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10874,
											"end": 10947,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 10874,
											"end": 10947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10866,
											"end": 10947,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10866,
											"end": 10947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10722,
											"end": 10958,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10975,
											"end": 10979,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10968,
											"end": 10979,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10968,
											"end": 10979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10009,
											"end": 10985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9899,
											"end": 10985,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9899,
											"end": 10985,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9899,
											"end": 10985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9899,
											"end": 10985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9899,
											"end": 10985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10991,
											"end": 11239,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 10991,
											"end": 11239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11106,
											"end": 11116,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11141,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 11229,
											"end": 11232,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11221,
											"end": 11227,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11141,
											"end": 11233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 11141,
											"end": 11233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11141,
											"end": 11233,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 11141,
											"end": 11233,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11127,
											"end": 11233,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11127,
											"end": 11233,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10991,
											"end": 11239,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10991,
											"end": 11239,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10991,
											"end": 11239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10991,
											"end": 11239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10991,
											"end": 11239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11245,
											"end": 11381,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 11245,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11338,
											"end": 11342,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11370,
											"end": 11374,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11365,
											"end": 11368,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11361,
											"end": 11375,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11353,
											"end": 11375,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11353,
											"end": 11375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11245,
											"end": 11381,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11245,
											"end": 11381,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11245,
											"end": 11381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11245,
											"end": 11381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11445,
											"end": 12540,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 11445,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11610,
											"end": 11613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11639,
											"end": 11716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 11710,
											"end": 11715,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11639,
											"end": 11716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 11639,
											"end": 11716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11639,
											"end": 11716,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 11639,
											"end": 11716,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11732,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 11834,
											"end": 11840,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11829,
											"end": 11832,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11732,
											"end": 11841,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 11732,
											"end": 11841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11732,
											"end": 11841,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 11732,
											"end": 11841,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11725,
											"end": 11841,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11725,
											"end": 11841,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11867,
											"end": 11870,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11912,
											"end": 11916,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11904,
											"end": 11910,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11900,
											"end": 11917,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11895,
											"end": 11898,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11891,
											"end": 11918,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11942,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 12015,
											"end": 12020,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11942,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 11942,
											"end": 12021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11942,
											"end": 12021,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 11942,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12044,
											"end": 12051,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12075,
											"end": 12076,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12060,
											"end": 12495,
											"name": "tag",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 12060,
											"end": 12495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12085,
											"end": 12091,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12082,
											"end": 12083,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12079,
											"end": 12092,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12060,
											"end": 12495,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12060,
											"end": 12495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 12060,
											"end": 12495,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12156,
											"end": 12165,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12150,
											"end": 12154,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12146,
											"end": 12166,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12141,
											"end": 12144,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 12134,
											"end": 12167,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12207,
											"end": 12213,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12201,
											"end": 12214,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12235,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 12340,
											"end": 12344,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12325,
											"end": 12338,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12235,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 12235,
											"end": 12345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12235,
											"end": 12345,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 12235,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12227,
											"end": 12345,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12227,
											"end": 12345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12368,
											"end": 12451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 12444,
											"end": 12450,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12368,
											"end": 12451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 12368,
											"end": 12451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12368,
											"end": 12451,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 12368,
											"end": 12451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12358,
											"end": 12451,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12358,
											"end": 12451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12480,
											"end": 12484,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12475,
											"end": 12478,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 12471,
											"end": 12485,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12464,
											"end": 12485,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 12464,
											"end": 12485,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12120,
											"end": 12495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12107,
											"end": 12108,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12104,
											"end": 12105,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12100,
											"end": 12109,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12095,
											"end": 12109,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12095,
											"end": 12109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12060,
											"end": 12495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "554"
										},
										{
											"begin": 12060,
											"end": 12495,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12060,
											"end": 12495,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 12060,
											"end": 12495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12064,
											"end": 12078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12511,
											"end": 12515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12504,
											"end": 12515,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 12504,
											"end": 12515,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12531,
											"end": 12534,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12524,
											"end": 12534,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 12524,
											"end": 12534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11615,
											"end": 12540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11615,
											"end": 12540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11615,
											"end": 12540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11615,
											"end": 12540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11615,
											"end": 12540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11445,
											"end": 12540,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11445,
											"end": 12540,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11445,
											"end": 12540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11445,
											"end": 12540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11445,
											"end": 12540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12546,
											"end": 13011,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 12546,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12735,
											"end": 12739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12773,
											"end": 12775,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12762,
											"end": 12771,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12758,
											"end": 12776,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12750,
											"end": 12776,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12750,
											"end": 12776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12822,
											"end": 12831,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12816,
											"end": 12820,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12812,
											"end": 12832,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12808,
											"end": 12809,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12797,
											"end": 12806,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12793,
											"end": 12810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12786,
											"end": 12833,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12850,
											"end": 13004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 12999,
											"end": 13003,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12990,
											"end": 12996,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12850,
											"end": 13004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 12850,
											"end": 13004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12850,
											"end": 13004,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 12850,
											"end": 13004,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12842,
											"end": 13004,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12842,
											"end": 13004,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12546,
											"end": 13011,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12546,
											"end": 13011,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12546,
											"end": 13011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12546,
											"end": 13011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12546,
											"end": 13011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13017,
											"end": 13135,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 13017,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13104,
											"end": 13128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 13122,
											"end": 13127,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13104,
											"end": 13128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 13104,
											"end": 13128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13104,
											"end": 13128,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 13104,
											"end": 13128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13099,
											"end": 13102,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13092,
											"end": 13129,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13017,
											"end": 13135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13017,
											"end": 13135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13017,
											"end": 13135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13141,
											"end": 13363,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 13141,
											"end": 13363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13234,
											"end": 13238,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13272,
											"end": 13274,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13261,
											"end": 13270,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13257,
											"end": 13275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13249,
											"end": 13275,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13249,
											"end": 13275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 13353,
											"end": 13354,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13342,
											"end": 13351,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13338,
											"end": 13355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13329,
											"end": 13335,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 13285,
											"end": 13356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13285,
											"end": 13356,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 13285,
											"end": 13356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13141,
											"end": 13363,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13141,
											"end": 13363,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13141,
											"end": 13363,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13141,
											"end": 13363,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13141,
											"end": 13363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13369,
											"end": 13698,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 13369,
											"end": 13698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13428,
											"end": 13434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13477,
											"end": 13479,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13465,
											"end": 13474,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13456,
											"end": 13463,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13452,
											"end": 13475,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13448,
											"end": 13480,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 13445,
											"end": 13564,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13445,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 13445,
											"end": 13564,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13483,
											"end": 13562,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 13483,
											"end": 13562,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 13483,
											"end": 13562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13483,
											"end": 13562,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 13483,
											"end": 13562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13445,
											"end": 13564,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 13445,
											"end": 13564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13603,
											"end": 13604,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13628,
											"end": 13681,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 13673,
											"end": 13680,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13664,
											"end": 13670,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13653,
											"end": 13662,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13649,
											"end": 13671,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13628,
											"end": 13681,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 13628,
											"end": 13681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13628,
											"end": 13681,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 13628,
											"end": 13681,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13618,
											"end": 13681,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13618,
											"end": 13681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13574,
											"end": 13691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13369,
											"end": 13698,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13369,
											"end": 13698,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13369,
											"end": 13698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13369,
											"end": 13698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13369,
											"end": 13698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 14530,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 13704,
											"end": 14530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13941,
											"end": 13945,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13979,
											"end": 13982,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 13968,
											"end": 13977,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13964,
											"end": 13983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13956,
											"end": 13983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13956,
											"end": 13983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13993,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 14061,
											"end": 14062,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14050,
											"end": 14059,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14046,
											"end": 14063,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14037,
											"end": 14043,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13993,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 13993,
											"end": 14064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13993,
											"end": 14064,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 13993,
											"end": 14064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14111,
											"end": 14120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14105,
											"end": 14109,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14101,
											"end": 14121,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14096,
											"end": 14098,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14085,
											"end": 14094,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14081,
											"end": 14099,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14074,
											"end": 14122,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14139,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 14212,
											"end": 14216,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14203,
											"end": 14209,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14139,
											"end": 14217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 14139,
											"end": 14217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14139,
											"end": 14217,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 14139,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14131,
											"end": 14217,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14131,
											"end": 14217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14264,
											"end": 14273,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14262,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14254,
											"end": 14274,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14249,
											"end": 14251,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14238,
											"end": 14247,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14234,
											"end": 14252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14227,
											"end": 14275,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14292,
											"end": 14370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 14365,
											"end": 14369,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14356,
											"end": 14362,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14292,
											"end": 14370,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 14292,
											"end": 14370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14292,
											"end": 14370,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 14292,
											"end": 14370,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14284,
											"end": 14370,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14284,
											"end": 14370,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14417,
											"end": 14426,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14411,
											"end": 14415,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14407,
											"end": 14427,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14402,
											"end": 14404,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 14391,
											"end": 14400,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14387,
											"end": 14405,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14380,
											"end": 14428,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14445,
											"end": 14523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 14518,
											"end": 14522,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14509,
											"end": 14515,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14445,
											"end": 14523,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 14445,
											"end": 14523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14445,
											"end": 14523,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 14445,
											"end": 14523,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14437,
											"end": 14523,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14437,
											"end": 14523,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 14530,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 14530,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 14530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 14530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 14530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 14530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 14530,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13704,
											"end": 14530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14536,
											"end": 14652,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 14536,
											"end": 14652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14606,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 14621,
											"end": 14626,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14606,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 14606,
											"end": 14627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14606,
											"end": 14627,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 14606,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14599,
											"end": 14604,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14596,
											"end": 14628,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14586,
											"end": 14646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 14586,
											"end": 14646,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14642,
											"end": 14643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14639,
											"end": 14640,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14632,
											"end": 14644,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14586,
											"end": 14646,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 14586,
											"end": 14646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14536,
											"end": 14652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14536,
											"end": 14652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14658,
											"end": 14791,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 14658,
											"end": 14791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14701,
											"end": 14706,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14739,
											"end": 14745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14726,
											"end": 14746,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 14717,
											"end": 14746,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14717,
											"end": 14746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14755,
											"end": 14785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 14779,
											"end": 14784,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14755,
											"end": 14785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 14755,
											"end": 14785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14755,
											"end": 14785,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 14755,
											"end": 14785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14658,
											"end": 14791,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14658,
											"end": 14791,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14658,
											"end": 14791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14658,
											"end": 14791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14658,
											"end": 14791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14797,
											"end": 15265,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 14797,
											"end": 15265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14862,
											"end": 14868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14870,
											"end": 14876,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14919,
											"end": 14921,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14907,
											"end": 14916,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14898,
											"end": 14905,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14894,
											"end": 14917,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14890,
											"end": 14922,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 14887,
											"end": 15006,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14887,
											"end": 15006,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 14887,
											"end": 15006,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14925,
											"end": 15004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 14925,
											"end": 15004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 14925,
											"end": 15004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14925,
											"end": 15004,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 14925,
											"end": 15004,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14887,
											"end": 15006,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 14887,
											"end": 15006,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15045,
											"end": 15046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15070,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 15115,
											"end": 15122,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15106,
											"end": 15112,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15095,
											"end": 15104,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15091,
											"end": 15113,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15070,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 15070,
											"end": 15123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15070,
											"end": 15123,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 15070,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15060,
											"end": 15123,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15060,
											"end": 15123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15016,
											"end": 15133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15172,
											"end": 15174,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15198,
											"end": 15248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 15240,
											"end": 15247,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15231,
											"end": 15237,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15220,
											"end": 15229,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15216,
											"end": 15238,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15198,
											"end": 15248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 15198,
											"end": 15248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15198,
											"end": 15248,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 15198,
											"end": 15248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15188,
											"end": 15248,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15188,
											"end": 15248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15143,
											"end": 15258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14797,
											"end": 15265,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14797,
											"end": 15265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14797,
											"end": 15265,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14797,
											"end": 15265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14797,
											"end": 15265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14797,
											"end": 15265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15271,
											"end": 15578,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 15271,
											"end": 15578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15332,
											"end": 15336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15422,
											"end": 15440,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15414,
											"end": 15420,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15411,
											"end": 15441,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15408,
											"end": 15464,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15408,
											"end": 15464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 15408,
											"end": 15464,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15444,
											"end": 15462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 15444,
											"end": 15462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 15444,
											"end": 15462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15444,
											"end": 15462,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 15444,
											"end": 15462,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15408,
											"end": 15464,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 15408,
											"end": 15464,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15482,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 15504,
											"end": 15510,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15482,
											"end": 15511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 15482,
											"end": 15511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15482,
											"end": 15511,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 15482,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15474,
											"end": 15511,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15474,
											"end": 15511,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15566,
											"end": 15570,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15560,
											"end": 15564,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15556,
											"end": 15571,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15548,
											"end": 15571,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15548,
											"end": 15571,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15271,
											"end": 15578,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15271,
											"end": 15578,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15271,
											"end": 15578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15271,
											"end": 15578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 16007,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 15584,
											"end": 16007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15661,
											"end": 15666,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15686,
											"end": 15751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 15702,
											"end": 15750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 15743,
											"end": 15749,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15702,
											"end": 15750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 15702,
											"end": 15750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15702,
											"end": 15750,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 15702,
											"end": 15750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15686,
											"end": 15751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 15686,
											"end": 15751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15686,
											"end": 15751,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 15686,
											"end": 15751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15677,
											"end": 15751,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15677,
											"end": 15751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15774,
											"end": 15780,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15767,
											"end": 15772,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15760,
											"end": 15781,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15812,
											"end": 15816,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15805,
											"end": 15810,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15801,
											"end": 15817,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15850,
											"end": 15853,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15841,
											"end": 15847,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15836,
											"end": 15839,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15832,
											"end": 15848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15829,
											"end": 15854,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15826,
											"end": 15938,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15826,
											"end": 15938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 15826,
											"end": 15938,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15857,
											"end": 15936,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 15857,
											"end": 15936,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 15857,
											"end": 15936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15857,
											"end": 15936,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 15857,
											"end": 15936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15826,
											"end": 15938,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 15826,
											"end": 15938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15947,
											"end": 16001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 15994,
											"end": 16000,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15989,
											"end": 15992,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15984,
											"end": 15987,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15947,
											"end": 16001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 15947,
											"end": 16001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15947,
											"end": 16001,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 15947,
											"end": 16001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15667,
											"end": 16007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 16007,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 16007,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 16007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 16007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 16007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 16007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16026,
											"end": 16364,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 16026,
											"end": 16364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16081,
											"end": 16086,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16130,
											"end": 16133,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16123,
											"end": 16127,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 16115,
											"end": 16121,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16111,
											"end": 16128,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16107,
											"end": 16134,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 16097,
											"end": 16219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 16097,
											"end": 16219,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16138,
											"end": 16217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 16138,
											"end": 16217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 16138,
											"end": 16217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16138,
											"end": 16217,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 16138,
											"end": 16217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16097,
											"end": 16219,
											"name": "tag",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 16097,
											"end": 16219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16255,
											"end": 16261,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16242,
											"end": 16262,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 16280,
											"end": 16358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 16354,
											"end": 16357,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16346,
											"end": 16352,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16339,
											"end": 16343,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16331,
											"end": 16337,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16327,
											"end": 16344,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16280,
											"end": 16358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 16280,
											"end": 16358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16280,
											"end": 16358,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 16280,
											"end": 16358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16271,
											"end": 16358,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16271,
											"end": 16358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16087,
											"end": 16364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16026,
											"end": 16364,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16026,
											"end": 16364,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16026,
											"end": 16364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16026,
											"end": 16364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16026,
											"end": 16364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16370,
											"end": 17313,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 16370,
											"end": 17313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16465,
											"end": 16471,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16473,
											"end": 16479,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16481,
											"end": 16487,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16489,
											"end": 16495,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16538,
											"end": 16541,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 16526,
											"end": 16535,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16517,
											"end": 16524,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 16513,
											"end": 16536,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16509,
											"end": 16542,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16626,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 16506,
											"end": 16626,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16545,
											"end": 16624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 16545,
											"end": 16624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 16545,
											"end": 16624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16545,
											"end": 16624,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 16545,
											"end": 16624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16626,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 16506,
											"end": 16626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16665,
											"end": 16666,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16690,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 16735,
											"end": 16742,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 16726,
											"end": 16732,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16715,
											"end": 16724,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16711,
											"end": 16733,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16690,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 16690,
											"end": 16743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16690,
											"end": 16743,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 16690,
											"end": 16743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16680,
											"end": 16743,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16680,
											"end": 16743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16636,
											"end": 16753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16792,
											"end": 16794,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16818,
											"end": 16871,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 16863,
											"end": 16870,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 16854,
											"end": 16860,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16843,
											"end": 16852,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16839,
											"end": 16861,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16871,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 16818,
											"end": 16871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16871,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 16818,
											"end": 16871,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16808,
											"end": 16871,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16808,
											"end": 16871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16763,
											"end": 16881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16920,
											"end": 16922,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16946,
											"end": 16999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 16991,
											"end": 16998,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 16982,
											"end": 16988,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16971,
											"end": 16980,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 16967,
											"end": 16989,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16946,
											"end": 16999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 16946,
											"end": 16999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16946,
											"end": 16999,
											"name": "tag",
											"source": 12,
											"value": "603"
										},
										{
											"begin": 16946,
											"end": 16999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16936,
											"end": 16999,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16936,
											"end": 16999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16891,
											"end": 17009,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17076,
											"end": 17078,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 17065,
											"end": 17074,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17061,
											"end": 17079,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17048,
											"end": 17080,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 17107,
											"end": 17125,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17099,
											"end": 17105,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17096,
											"end": 17126,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17093,
											"end": 17210,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17093,
											"end": 17210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 17093,
											"end": 17210,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17129,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 17129,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 17129,
											"end": 17208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17129,
											"end": 17208,
											"name": "tag",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 17129,
											"end": 17208,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17093,
											"end": 17210,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 17093,
											"end": 17210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17234,
											"end": 17296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 17288,
											"end": 17295,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 17279,
											"end": 17285,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17268,
											"end": 17277,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17286,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17234,
											"end": 17296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 17234,
											"end": 17296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17234,
											"end": 17296,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 17234,
											"end": 17296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17224,
											"end": 17296,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17224,
											"end": 17296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17019,
											"end": 17306,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16370,
											"end": 17313,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16370,
											"end": 17313,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 16370,
											"end": 17313,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16370,
											"end": 17313,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16370,
											"end": 17313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16370,
											"end": 17313,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16370,
											"end": 17313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16370,
											"end": 17313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17319,
											"end": 17793,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 17319,
											"end": 17793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17387,
											"end": 17393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17395,
											"end": 17401,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17444,
											"end": 17446,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17432,
											"end": 17441,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17423,
											"end": 17430,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17419,
											"end": 17442,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17415,
											"end": 17447,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 17412,
											"end": 17531,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17412,
											"end": 17531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 17412,
											"end": 17531,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17450,
											"end": 17529,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 17450,
											"end": 17529,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 17450,
											"end": 17529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17450,
											"end": 17529,
											"name": "tag",
											"source": 12,
											"value": "609"
										},
										{
											"begin": 17450,
											"end": 17529,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17412,
											"end": 17531,
											"name": "tag",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 17412,
											"end": 17531,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17570,
											"end": 17571,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17595,
											"end": 17648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 17640,
											"end": 17647,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17631,
											"end": 17637,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17620,
											"end": 17629,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17616,
											"end": 17638,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17595,
											"end": 17648,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 17595,
											"end": 17648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17595,
											"end": 17648,
											"name": "tag",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 17595,
											"end": 17648,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17585,
											"end": 17648,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17585,
											"end": 17648,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17541,
											"end": 17658,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17697,
											"end": 17699,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17723,
											"end": 17776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 17768,
											"end": 17775,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17759,
											"end": 17765,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17748,
											"end": 17757,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17744,
											"end": 17766,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17723,
											"end": 17776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 17723,
											"end": 17776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17723,
											"end": 17776,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 17723,
											"end": 17776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17713,
											"end": 17776,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17713,
											"end": 17776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17668,
											"end": 17786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17319,
											"end": 17793,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17319,
											"end": 17793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17319,
											"end": 17793,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17319,
											"end": 17793,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17319,
											"end": 17793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17319,
											"end": 17793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17799,
											"end": 17979,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 17799,
											"end": 17979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17847,
											"end": 17924,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17844,
											"end": 17845,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17837,
											"end": 17925,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17944,
											"end": 17948,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 17941,
											"end": 17942,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17934,
											"end": 17949,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17968,
											"end": 17972,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17965,
											"end": 17966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17958,
											"end": 17973,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17985,
											"end": 18305,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 17985,
											"end": 18305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18029,
											"end": 18035,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18066,
											"end": 18067,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 18060,
											"end": 18064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18056,
											"end": 18068,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 18046,
											"end": 18068,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18046,
											"end": 18068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18113,
											"end": 18114,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 18107,
											"end": 18111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18103,
											"end": 18115,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 18134,
											"end": 18152,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18124,
											"end": 18205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 18124,
											"end": 18205,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18190,
											"end": 18194,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 18182,
											"end": 18188,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18178,
											"end": 18195,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 18168,
											"end": 18195,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18168,
											"end": 18195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18124,
											"end": 18205,
											"name": "tag",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 18124,
											"end": 18205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18252,
											"end": 18254,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18244,
											"end": 18250,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18241,
											"end": 18255,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 18221,
											"end": 18239,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18218,
											"end": 18256,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18215,
											"end": 18299,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 18215,
											"end": 18299,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18271,
											"end": 18289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 18271,
											"end": 18289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 18271,
											"end": 18289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18271,
											"end": 18289,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 18271,
											"end": 18289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18215,
											"end": 18299,
											"name": "tag",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 18215,
											"end": 18299,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18036,
											"end": 18305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17985,
											"end": 18305,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17985,
											"end": 18305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17985,
											"end": 18305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17985,
											"end": 18305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18311,
											"end": 18491,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 18311,
											"end": 18491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18359,
											"end": 18436,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18356,
											"end": 18357,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18349,
											"end": 18437,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18456,
											"end": 18460,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 18453,
											"end": 18454,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 18446,
											"end": 18461,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18480,
											"end": 18484,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18477,
											"end": 18478,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18470,
											"end": 18485,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18497,
											"end": 18939,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 18497,
											"end": 18939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18646,
											"end": 18650,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18684,
											"end": 18686,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 18673,
											"end": 18682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18669,
											"end": 18687,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18661,
											"end": 18687,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18661,
											"end": 18687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18697,
											"end": 18768,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 18765,
											"end": 18766,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18754,
											"end": 18763,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18750,
											"end": 18767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18741,
											"end": 18747,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18697,
											"end": 18768,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 18697,
											"end": 18768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18697,
											"end": 18768,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 18697,
											"end": 18768,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18778,
											"end": 18850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 18846,
											"end": 18848,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18835,
											"end": 18844,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18831,
											"end": 18849,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18822,
											"end": 18828,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18778,
											"end": 18850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 18778,
											"end": 18850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18778,
											"end": 18850,
											"name": "tag",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 18778,
											"end": 18850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18860,
											"end": 18932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 18928,
											"end": 18930,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18917,
											"end": 18926,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18913,
											"end": 18931,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18904,
											"end": 18910,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18860,
											"end": 18932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 18860,
											"end": 18932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18860,
											"end": 18932,
											"name": "tag",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 18860,
											"end": 18932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18497,
											"end": 18939,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 18497,
											"end": 18939,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18497,
											"end": 18939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18497,
											"end": 18939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18497,
											"end": 18939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18497,
											"end": 18939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18497,
											"end": 18939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18945,
											"end": 19109,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 18945,
											"end": 19109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19085,
											"end": 19101,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F206D6F7265206861696B7573000000000000000000000000000000000000"
										},
										{
											"begin": 19081,
											"end": 19082,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19073,
											"end": 19079,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19069,
											"end": 19083,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19062,
											"end": 19102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18945,
											"end": 19109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18945,
											"end": 19109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19115,
											"end": 19481,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 19115,
											"end": 19481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19257,
											"end": 19260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19278,
											"end": 19345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 19342,
											"end": 19344,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 19337,
											"end": 19340,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19278,
											"end": 19345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 19278,
											"end": 19345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19278,
											"end": 19345,
											"name": "tag",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 19278,
											"end": 19345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19271,
											"end": 19345,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19271,
											"end": 19345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19354,
											"end": 19447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 19443,
											"end": 19446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19354,
											"end": 19447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 19354,
											"end": 19447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19354,
											"end": 19447,
											"name": "tag",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 19354,
											"end": 19447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19472,
											"end": 19474,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19467,
											"end": 19470,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19463,
											"end": 19475,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19456,
											"end": 19475,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19456,
											"end": 19475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19115,
											"end": 19481,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19115,
											"end": 19481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19115,
											"end": 19481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19115,
											"end": 19481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19487,
											"end": 19906,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 19487,
											"end": 19906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19653,
											"end": 19657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19691,
											"end": 19693,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19680,
											"end": 19689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19676,
											"end": 19694,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19668,
											"end": 19694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19668,
											"end": 19694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19740,
											"end": 19749,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19734,
											"end": 19738,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19730,
											"end": 19750,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19726,
											"end": 19727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19715,
											"end": 19724,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19711,
											"end": 19728,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19704,
											"end": 19751,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19768,
											"end": 19899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 19894,
											"end": 19898,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19768,
											"end": 19899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 19768,
											"end": 19899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19768,
											"end": 19899,
											"name": "tag",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 19768,
											"end": 19899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19760,
											"end": 19899,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19760,
											"end": 19899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19487,
											"end": 19906,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19487,
											"end": 19906,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19487,
											"end": 19906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19487,
											"end": 19906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19912,
											"end": 20060,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 19912,
											"end": 20060,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20014,
											"end": 20025,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20051,
											"end": 20054,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20036,
											"end": 20054,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20036,
											"end": 20054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19912,
											"end": 20060,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19912,
											"end": 20060,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19912,
											"end": 20060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19912,
											"end": 20060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19912,
											"end": 20060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20066,
											"end": 20456,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 20066,
											"end": 20456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20172,
											"end": 20175,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20200,
											"end": 20239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 20233,
											"end": 20238,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20200,
											"end": 20239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 20200,
											"end": 20239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20200,
											"end": 20239,
											"name": "tag",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 20200,
											"end": 20239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20255,
											"end": 20344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20332,
											"end": 20335,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20255,
											"end": 20344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 20255,
											"end": 20344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20255,
											"end": 20344,
											"name": "tag",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 20255,
											"end": 20344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20248,
											"end": 20344,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20248,
											"end": 20344,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20353,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 20411,
											"end": 20417,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20406,
											"end": 20409,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20399,
											"end": 20403,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20392,
											"end": 20397,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20388,
											"end": 20404,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20353,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 20353,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20353,
											"end": 20418,
											"name": "tag",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 20353,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20443,
											"end": 20449,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 20438,
											"end": 20441,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20434,
											"end": 20450,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20427,
											"end": 20450,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20427,
											"end": 20450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20176,
											"end": 20456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20066,
											"end": 20456,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20066,
											"end": 20456,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20066,
											"end": 20456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20066,
											"end": 20456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20066,
											"end": 20456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20462,
											"end": 20737,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 20462,
											"end": 20737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20594,
											"end": 20597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20616,
											"end": 20711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 20707,
											"end": 20710,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20698,
											"end": 20704,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20616,
											"end": 20711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 20616,
											"end": 20711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20616,
											"end": 20711,
											"name": "tag",
											"source": 12,
											"value": "634"
										},
										{
											"begin": 20616,
											"end": 20711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20609,
											"end": 20711,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20609,
											"end": 20711,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20728,
											"end": 20731,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20721,
											"end": 20731,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20721,
											"end": 20731,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20462,
											"end": 20737,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20462,
											"end": 20737,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20462,
											"end": 20737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20462,
											"end": 20737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20462,
											"end": 20737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20743,
											"end": 20884,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 20743,
											"end": 20884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20792,
											"end": 20796,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20815,
											"end": 20818,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20807,
											"end": 20818,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20807,
											"end": 20818,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20838,
											"end": 20841,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20835,
											"end": 20836,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20828,
											"end": 20842,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20872,
											"end": 20876,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20869,
											"end": 20870,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20859,
											"end": 20877,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 20851,
											"end": 20877,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20851,
											"end": 20877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20743,
											"end": 20884,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20743,
											"end": 20884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20743,
											"end": 20884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20743,
											"end": 20884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20890,
											"end": 20983,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 20890,
											"end": 20983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20927,
											"end": 20933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20974,
											"end": 20976,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20969,
											"end": 20971,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 20962,
											"end": 20967,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20958,
											"end": 20972,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20954,
											"end": 20977,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 20944,
											"end": 20977,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20944,
											"end": 20977,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20890,
											"end": 20983,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20890,
											"end": 20983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20890,
											"end": 20983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20890,
											"end": 20983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20989,
											"end": 21096,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 20989,
											"end": 21096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21033,
											"end": 21041,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21083,
											"end": 21088,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21077,
											"end": 21081,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21073,
											"end": 21089,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21089,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21052,
											"end": 21089,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20989,
											"end": 21096,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20989,
											"end": 21096,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20989,
											"end": 21096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20989,
											"end": 21096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20989,
											"end": 21096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21102,
											"end": 21495,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 21102,
											"end": 21495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21171,
											"end": 21177,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21221,
											"end": 21222,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 21209,
											"end": 21219,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21205,
											"end": 21223,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 21244,
											"end": 21341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 21274,
											"end": 21340,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21263,
											"end": 21272,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21244,
											"end": 21341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 21244,
											"end": 21341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21244,
											"end": 21341,
											"name": "tag",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 21244,
											"end": 21341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21362,
											"end": 21401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 21392,
											"end": 21400,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21381,
											"end": 21390,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21362,
											"end": 21401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 21362,
											"end": 21401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21362,
											"end": 21401,
											"name": "tag",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 21362,
											"end": 21401,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21350,
											"end": 21401,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 21350,
											"end": 21401,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21434,
											"end": 21438,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21430,
											"end": 21439,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 21423,
											"end": 21428,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21419,
											"end": 21440,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 21410,
											"end": 21440,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 21410,
											"end": 21440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21483,
											"end": 21487,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21473,
											"end": 21481,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21469,
											"end": 21488,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 21462,
											"end": 21467,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21459,
											"end": 21489,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 21449,
											"end": 21489,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21449,
											"end": 21489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21178,
											"end": 21495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21178,
											"end": 21495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21102,
											"end": 21495,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 21102,
											"end": 21495,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21102,
											"end": 21495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21102,
											"end": 21495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21102,
											"end": 21495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21102,
											"end": 21495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21501,
											"end": 21561,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 21501,
											"end": 21561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21529,
											"end": 21532,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21550,
											"end": 21555,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21543,
											"end": 21555,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21543,
											"end": 21555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21501,
											"end": 21561,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21501,
											"end": 21561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21501,
											"end": 21561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21501,
											"end": 21561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21567,
											"end": 21709,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 21567,
											"end": 21709,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21617,
											"end": 21626,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21650,
											"end": 21703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 21668,
											"end": 21702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 21677,
											"end": 21701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 21695,
											"end": 21700,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21677,
											"end": 21701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 21677,
											"end": 21701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21677,
											"end": 21701,
											"name": "tag",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 21677,
											"end": 21701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21668,
											"end": 21702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 21668,
											"end": 21702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21668,
											"end": 21702,
											"name": "tag",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 21668,
											"end": 21702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21650,
											"end": 21703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 21650,
											"end": 21703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21650,
											"end": 21703,
											"name": "tag",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 21650,
											"end": 21703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21637,
											"end": 21703,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21637,
											"end": 21703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21567,
											"end": 21709,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21567,
											"end": 21709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21567,
											"end": 21709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21567,
											"end": 21709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21715,
											"end": 21790,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 21715,
											"end": 21790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21758,
											"end": 21761,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21779,
											"end": 21784,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21772,
											"end": 21784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21772,
											"end": 21784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21715,
											"end": 21790,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21715,
											"end": 21790,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21715,
											"end": 21790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21715,
											"end": 21790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21796,
											"end": 22065,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 21796,
											"end": 22065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21906,
											"end": 21945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 21937,
											"end": 21944,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21906,
											"end": 21945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 21906,
											"end": 21945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21906,
											"end": 21945,
											"name": "tag",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 21906,
											"end": 21945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21967,
											"end": 22058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 22016,
											"end": 22057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 22040,
											"end": 22056,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22016,
											"end": 22057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 22016,
											"end": 22057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22016,
											"end": 22057,
											"name": "tag",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 22016,
											"end": 22057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22008,
											"end": 22014,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22001,
											"end": 22005,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21995,
											"end": 22006,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 21967,
											"end": 22058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 21967,
											"end": 22058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21967,
											"end": 22058,
											"name": "tag",
											"source": 12,
											"value": "649"
										},
										{
											"begin": 21967,
											"end": 22058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21961,
											"end": 21965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21954,
											"end": 22059,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 21872,
											"end": 22065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21796,
											"end": 22065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21796,
											"end": 22065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21796,
											"end": 22065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21796,
											"end": 22065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22071,
											"end": 22144,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 22071,
											"end": 22144,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22116,
											"end": 22119,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22071,
											"end": 22144,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22071,
											"end": 22144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22150,
											"end": 22339,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 22150,
											"end": 22339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22227,
											"end": 22259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "653"
										},
										{
											"begin": 22227,
											"end": 22259,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 22227,
											"end": 22259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22227,
											"end": 22259,
											"name": "tag",
											"source": 12,
											"value": "653"
										},
										{
											"begin": 22227,
											"end": 22259,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22268,
											"end": 22333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 22326,
											"end": 22332,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22318,
											"end": 22324,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22312,
											"end": 22316,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22268,
											"end": 22333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 22268,
											"end": 22333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22268,
											"end": 22333,
											"name": "tag",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 22268,
											"end": 22333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22203,
											"end": 22339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22150,
											"end": 22339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22150,
											"end": 22339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22150,
											"end": 22339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22345,
											"end": 22531,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 22345,
											"end": 22531,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22405,
											"end": 22525,
											"name": "tag",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 22405,
											"end": 22525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22422,
											"end": 22425,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22415,
											"end": 22420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22412,
											"end": 22426,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 22405,
											"end": 22525,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 22405,
											"end": 22525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 22405,
											"end": 22525,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22476,
											"end": 22515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "659"
										},
										{
											"begin": 22513,
											"end": 22514,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22506,
											"end": 22511,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22476,
											"end": 22515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 22476,
											"end": 22515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22476,
											"end": 22515,
											"name": "tag",
											"source": 12,
											"value": "659"
										},
										{
											"begin": 22476,
											"end": 22515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22449,
											"end": 22450,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 22442,
											"end": 22447,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22438,
											"end": 22451,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22429,
											"end": 22451,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22429,
											"end": 22451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22405,
											"end": 22525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 22405,
											"end": 22525,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22405,
											"end": 22525,
											"name": "tag",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 22405,
											"end": 22525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22345,
											"end": 22531,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22345,
											"end": 22531,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22345,
											"end": 22531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22537,
											"end": 23080,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 22537,
											"end": 23080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22638,
											"end": 22640,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 22633,
											"end": 22636,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22630,
											"end": 22641,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 22627,
											"end": 23073,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 22627,
											"end": 23073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 22627,
											"end": 23073,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22672,
											"end": 22710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "662"
										},
										{
											"begin": 22704,
											"end": 22709,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22672,
											"end": 22710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 22672,
											"end": 22710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22672,
											"end": 22710,
											"name": "tag",
											"source": 12,
											"value": "662"
										},
										{
											"begin": 22672,
											"end": 22710,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22756,
											"end": 22785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 22774,
											"end": 22784,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 22756,
											"end": 22785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 22756,
											"end": 22785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22756,
											"end": 22785,
											"name": "tag",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 22756,
											"end": 22785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22746,
											"end": 22754,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22742,
											"end": 22786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22939,
											"end": 22941,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22927,
											"end": 22937,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 22924,
											"end": 22942,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 22921,
											"end": 22970,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 22921,
											"end": 22970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 22921,
											"end": 22970,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22960,
											"end": 22968,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22945,
											"end": 22968,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22945,
											"end": 22968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22921,
											"end": 22970,
											"name": "tag",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 22921,
											"end": 22970,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22983,
											"end": 23063,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "665"
										},
										{
											"begin": 23039,
											"end": 23061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 23057,
											"end": 23060,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23039,
											"end": 23061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 23039,
											"end": 23061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23039,
											"end": 23061,
											"name": "tag",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 23039,
											"end": 23061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23029,
											"end": 23037,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23025,
											"end": 23062,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23012,
											"end": 23023,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22983,
											"end": 23063,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 22983,
											"end": 23063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22983,
											"end": 23063,
											"name": "tag",
											"source": 12,
											"value": "665"
										},
										{
											"begin": 22983,
											"end": 23063,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22642,
											"end": 23073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22642,
											"end": 23073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22627,
											"end": 23073,
											"name": "tag",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 22627,
											"end": 23073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22537,
											"end": 23080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22537,
											"end": 23080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22537,
											"end": 23080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22537,
											"end": 23080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23086,
											"end": 23203,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 23086,
											"end": 23203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23140,
											"end": 23148,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23190,
											"end": 23195,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23184,
											"end": 23188,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23180,
											"end": 23196,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 23159,
											"end": 23196,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23159,
											"end": 23196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23086,
											"end": 23203,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23086,
											"end": 23203,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23086,
											"end": 23203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23086,
											"end": 23203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23086,
											"end": 23203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23209,
											"end": 23378,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 23209,
											"end": 23378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23253,
											"end": 23259,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23286,
											"end": 23337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 23334,
											"end": 23335,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23330,
											"end": 23336,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 23322,
											"end": 23327,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23319,
											"end": 23320,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 23315,
											"end": 23328,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 23286,
											"end": 23337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 23286,
											"end": 23337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23286,
											"end": 23337,
											"name": "tag",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 23286,
											"end": 23337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23282,
											"end": 23338,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 23367,
											"end": 23371,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 23361,
											"end": 23365,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23357,
											"end": 23372,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 23347,
											"end": 23372,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23347,
											"end": 23372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23260,
											"end": 23378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23209,
											"end": 23378,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23209,
											"end": 23378,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23209,
											"end": 23378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23209,
											"end": 23378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23209,
											"end": 23378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23383,
											"end": 23678,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 23383,
											"end": 23678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23459,
											"end": 23463,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23605,
											"end": 23634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 23630,
											"end": 23633,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23624,
											"end": 23628,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23605,
											"end": 23634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 23605,
											"end": 23634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23605,
											"end": 23634,
											"name": "tag",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 23605,
											"end": 23634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23597,
											"end": 23634,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23597,
											"end": 23634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23667,
											"end": 23670,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23664,
											"end": 23665,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 23660,
											"end": 23671,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 23654,
											"end": 23658,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23651,
											"end": 23672,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 23643,
											"end": 23672,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23643,
											"end": 23672,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23383,
											"end": 23678,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 23383,
											"end": 23678,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23383,
											"end": 23678,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23383,
											"end": 23678,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23383,
											"end": 23678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23683,
											"end": 25078,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 23683,
											"end": 25078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23800,
											"end": 23837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 23833,
											"end": 23836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23800,
											"end": 23837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 23800,
											"end": 23837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23800,
											"end": 23837,
											"name": "tag",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 23800,
											"end": 23837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23902,
											"end": 23920,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23894,
											"end": 23900,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23891,
											"end": 23921,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 23888,
											"end": 23944,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 23888,
											"end": 23944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 23888,
											"end": 23944,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 23924,
											"end": 23942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 23924,
											"end": 23942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 23924,
											"end": 23942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23924,
											"end": 23942,
											"name": "tag",
											"source": 12,
											"value": "675"
										},
										{
											"begin": 23924,
											"end": 23942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23888,
											"end": 23944,
											"name": "tag",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 23888,
											"end": 23944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23968,
											"end": 24006,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 24000,
											"end": 24004,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23994,
											"end": 24005,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 23968,
											"end": 24006,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 23968,
											"end": 24006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23968,
											"end": 24006,
											"name": "tag",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 23968,
											"end": 24006,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24053,
											"end": 24120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "677"
										},
										{
											"begin": 24113,
											"end": 24119,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24105,
											"end": 24111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24099,
											"end": 24103,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 24053,
											"end": 24120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 24053,
											"end": 24120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24053,
											"end": 24120,
											"name": "tag",
											"source": 12,
											"value": "677"
										},
										{
											"begin": 24053,
											"end": 24120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24147,
											"end": 24148,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24171,
											"end": 24175,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24158,
											"end": 24175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24158,
											"end": 24175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24203,
											"end": 24205,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 24195,
											"end": 24201,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24192,
											"end": 24206,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 24220,
											"end": 24221,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 24215,
											"end": 24833,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24215,
											"end": 24833,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 24215,
											"end": 24833,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 24215,
											"end": 24833,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24877,
											"end": 24878,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24894,
											"end": 24900,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24891,
											"end": 24968,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 24891,
											"end": 24968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 24891,
											"end": 24968,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24943,
											"end": 24952,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24938,
											"end": 24941,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 24934,
											"end": 24953,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24928,
											"end": 24954,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 24919,
											"end": 24954,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24919,
											"end": 24954,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24891,
											"end": 24968,
											"name": "tag",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 24891,
											"end": 24968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24994,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 25054,
											"end": 25060,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 25047,
											"end": 25052,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24994,
											"end": 25061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 24994,
											"end": 25061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24994,
											"end": 25061,
											"name": "tag",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 24994,
											"end": 25061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24988,
											"end": 24992,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 24981,
											"end": 25062,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 24850,
											"end": 25072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24185,
											"end": 25072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 24185,
											"end": 25072,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24215,
											"end": 24833,
											"name": "tag",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 24215,
											"end": 24833,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24267,
											"end": 24271,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 24263,
											"end": 24272,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 24255,
											"end": 24261,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24251,
											"end": 24273,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 24301,
											"end": 24338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "682"
										},
										{
											"begin": 24333,
											"end": 24337,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 24301,
											"end": 24338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 24301,
											"end": 24338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24301,
											"end": 24338,
											"name": "tag",
											"source": 12,
											"value": "682"
										},
										{
											"begin": 24301,
											"end": 24338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24360,
											"end": 24361,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24374,
											"end": 24582,
											"name": "tag",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 24374,
											"end": 24582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24388,
											"end": 24395,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24385,
											"end": 24386,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24382,
											"end": 24396,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 24374,
											"end": 24582,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 24374,
											"end": 24582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 24374,
											"end": 24582,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24467,
											"end": 24476,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24462,
											"end": 24465,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 24458,
											"end": 24477,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24452,
											"end": 24478,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 24444,
											"end": 24450,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24437,
											"end": 24479,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 24518,
											"end": 24519,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 24510,
											"end": 24516,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24506,
											"end": 24520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24496,
											"end": 24520,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24496,
											"end": 24520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24565,
											"end": 24567,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24554,
											"end": 24563,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 24550,
											"end": 24568,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24537,
											"end": 24568,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 24537,
											"end": 24568,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24411,
											"end": 24415,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24408,
											"end": 24409,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24404,
											"end": 24416,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24399,
											"end": 24416,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24399,
											"end": 24416,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24374,
											"end": 24582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 24374,
											"end": 24582,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24374,
											"end": 24582,
											"name": "tag",
											"source": 12,
											"value": "685"
										},
										{
											"begin": 24374,
											"end": 24582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24610,
											"end": 24616,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 24601,
											"end": 24608,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24598,
											"end": 24617,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 24595,
											"end": 24774,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 24595,
											"end": 24774,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 24595,
											"end": 24774,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 24668,
											"end": 24677,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 24663,
											"end": 24666,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 24659,
											"end": 24678,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24653,
											"end": 24679,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 24711,
											"end": 24759,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 24753,
											"end": 24757,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 24745,
											"end": 24751,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 24741,
											"end": 24758,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 24730,
											"end": 24739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24711,
											"end": 24759,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 24711,
											"end": 24759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24711,
											"end": 24759,
											"name": "tag",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 24711,
											"end": 24759,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24703,
											"end": 24709,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24696,
											"end": 24760,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 24618,
											"end": 24774,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24595,
											"end": 24774,
											"name": "tag",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 24595,
											"end": 24774,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24820,
											"end": 24821,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 24816,
											"end": 24817,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 24808,
											"end": 24814,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 24804,
											"end": 24818,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 24800,
											"end": 24822,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24794,
											"end": 24798,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 24787,
											"end": 24823,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 24222,
											"end": 24833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24222,
											"end": 24833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24222,
											"end": 24833,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24185,
											"end": 25072,
											"name": "tag",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 24185,
											"end": 25072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24185,
											"end": 25072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23775,
											"end": 25078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23775,
											"end": 25078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23775,
											"end": 25078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23683,
											"end": 25078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23683,
											"end": 25078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23683,
											"end": 25078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25084,
											"end": 25264,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 25084,
											"end": 25264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25132,
											"end": 25209,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25129,
											"end": 25130,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25122,
											"end": 25210,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25229,
											"end": 25233,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 25226,
											"end": 25227,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 25219,
											"end": 25234,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25253,
											"end": 25257,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 25250,
											"end": 25251,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25243,
											"end": 25258,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 25270,
											"end": 25503,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 25270,
											"end": 25503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25309,
											"end": 25312,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25332,
											"end": 25356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "690"
										},
										{
											"begin": 25350,
											"end": 25355,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25332,
											"end": 25356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 25332,
											"end": 25356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25332,
											"end": 25356,
											"name": "tag",
											"source": 12,
											"value": "690"
										},
										{
											"begin": 25332,
											"end": 25356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25323,
											"end": 25356,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25323,
											"end": 25356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25378,
											"end": 25444,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25371,
											"end": 25376,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25368,
											"end": 25445,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 25365,
											"end": 25468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 25365,
											"end": 25468,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 25448,
											"end": 25466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 25448,
											"end": 25466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 25448,
											"end": 25466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25448,
											"end": 25466,
											"name": "tag",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 25448,
											"end": 25466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25365,
											"end": 25468,
											"name": "tag",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 25365,
											"end": 25468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25495,
											"end": 25496,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 25488,
											"end": 25493,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25484,
											"end": 25497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25477,
											"end": 25497,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25477,
											"end": 25497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25270,
											"end": 25503,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25270,
											"end": 25503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25270,
											"end": 25503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25270,
											"end": 25503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25509,
											"end": 25944,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 25509,
											"end": 25944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25689,
											"end": 25692,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25711,
											"end": 25806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 25802,
											"end": 25805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25793,
											"end": 25799,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 25711,
											"end": 25806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 25711,
											"end": 25806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25711,
											"end": 25806,
											"name": "tag",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 25711,
											"end": 25806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25704,
											"end": 25806,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25704,
											"end": 25806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25823,
											"end": 25918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "695"
										},
										{
											"begin": 25914,
											"end": 25917,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25905,
											"end": 25911,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 25823,
											"end": 25918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 25823,
											"end": 25918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25823,
											"end": 25918,
											"name": "tag",
											"source": 12,
											"value": "695"
										},
										{
											"begin": 25823,
											"end": 25918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25816,
											"end": 25918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25816,
											"end": 25918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25935,
											"end": 25938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25928,
											"end": 25938,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25928,
											"end": 25938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25509,
											"end": 25944,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 25509,
											"end": 25944,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25509,
											"end": 25944,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25509,
											"end": 25944,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25509,
											"end": 25944,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25509,
											"end": 25944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25950,
											"end": 26048,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 25950,
											"end": 26048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26001,
											"end": 26007,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26035,
											"end": 26040,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26029,
											"end": 26041,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 26019,
											"end": 26041,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26019,
											"end": 26041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25950,
											"end": 26048,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25950,
											"end": 26048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25950,
											"end": 26048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25950,
											"end": 26048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26054,
											"end": 26222,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 26054,
											"end": 26222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26137,
											"end": 26148,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26171,
											"end": 26177,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26166,
											"end": 26169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26159,
											"end": 26178,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26211,
											"end": 26215,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26206,
											"end": 26209,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26202,
											"end": 26216,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26187,
											"end": 26216,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26187,
											"end": 26216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26054,
											"end": 26222,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 26054,
											"end": 26222,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26054,
											"end": 26222,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26054,
											"end": 26222,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26054,
											"end": 26222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26228,
											"end": 26601,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 26228,
											"end": 26601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26314,
											"end": 26317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26342,
											"end": 26380,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 26374,
											"end": 26379,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26342,
											"end": 26380,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 26342,
											"end": 26380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26342,
											"end": 26380,
											"name": "tag",
											"source": 12,
											"value": "699"
										},
										{
											"begin": 26342,
											"end": 26380,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26396,
											"end": 26466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 26459,
											"end": 26465,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26454,
											"end": 26457,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26396,
											"end": 26466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 26396,
											"end": 26466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26396,
											"end": 26466,
											"name": "tag",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 26396,
											"end": 26466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26389,
											"end": 26466,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 26389,
											"end": 26466,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26475,
											"end": 26540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "701"
										},
										{
											"begin": 26533,
											"end": 26539,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26528,
											"end": 26531,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 26521,
											"end": 26525,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26514,
											"end": 26519,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 26510,
											"end": 26526,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26475,
											"end": 26540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 26475,
											"end": 26540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26475,
											"end": 26540,
											"name": "tag",
											"source": 12,
											"value": "701"
										},
										{
											"begin": 26475,
											"end": 26540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26565,
											"end": 26594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "702"
										},
										{
											"begin": 26587,
											"end": 26593,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26565,
											"end": 26594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 26565,
											"end": 26594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26565,
											"end": 26594,
											"name": "tag",
											"source": 12,
											"value": "702"
										},
										{
											"begin": 26565,
											"end": 26594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26560,
											"end": 26563,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 26556,
											"end": 26595,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26549,
											"end": 26595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26549,
											"end": 26595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26318,
											"end": 26601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26228,
											"end": 26601,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 26228,
											"end": 26601,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26228,
											"end": 26601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26228,
											"end": 26601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26228,
											"end": 26601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26607,
											"end": 27247,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 26607,
											"end": 27247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26802,
											"end": 26806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26840,
											"end": 26843,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 26829,
											"end": 26838,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26825,
											"end": 26844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26817,
											"end": 26844,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26817,
											"end": 26844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26854,
											"end": 26925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 26922,
											"end": 26923,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26911,
											"end": 26920,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26907,
											"end": 26924,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26898,
											"end": 26904,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 26854,
											"end": 26925,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 26854,
											"end": 26925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26854,
											"end": 26925,
											"name": "tag",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 26854,
											"end": 26925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26935,
											"end": 27007,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "705"
										},
										{
											"begin": 27003,
											"end": 27005,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26992,
											"end": 27001,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26988,
											"end": 27006,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26979,
											"end": 26985,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 26935,
											"end": 27007,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 26935,
											"end": 27007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26935,
											"end": 27007,
											"name": "tag",
											"source": 12,
											"value": "705"
										},
										{
											"begin": 26935,
											"end": 27007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27017,
											"end": 27089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "706"
										},
										{
											"begin": 27085,
											"end": 27087,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 27074,
											"end": 27083,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27070,
											"end": 27088,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27061,
											"end": 27067,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 27017,
											"end": 27089,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 27017,
											"end": 27089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27017,
											"end": 27089,
											"name": "tag",
											"source": 12,
											"value": "706"
										},
										{
											"begin": 27017,
											"end": 27089,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27136,
											"end": 27145,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27130,
											"end": 27134,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27126,
											"end": 27146,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 27121,
											"end": 27123,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 27110,
											"end": 27119,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27106,
											"end": 27124,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27099,
											"end": 27147,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27164,
											"end": 27240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "707"
										},
										{
											"begin": 27235,
											"end": 27239,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27226,
											"end": 27232,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 27164,
											"end": 27240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 27164,
											"end": 27240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27164,
											"end": 27240,
											"name": "tag",
											"source": 12,
											"value": "707"
										},
										{
											"begin": 27164,
											"end": 27240,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27156,
											"end": 27240,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27156,
											"end": 27240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26607,
											"end": 27247,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 26607,
											"end": 27247,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 26607,
											"end": 27247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26607,
											"end": 27247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26607,
											"end": 27247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26607,
											"end": 27247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26607,
											"end": 27247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26607,
											"end": 27247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27253,
											"end": 27394,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 27253,
											"end": 27394,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27309,
											"end": 27314,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27340,
											"end": 27346,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27334,
											"end": 27347,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 27325,
											"end": 27347,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27325,
											"end": 27347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 27382,
											"end": 27387,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 27356,
											"end": 27388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "tag",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27253,
											"end": 27394,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 27253,
											"end": 27394,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27253,
											"end": 27394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27253,
											"end": 27394,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27253,
											"end": 27394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27400,
											"end": 27749,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 27400,
											"end": 27749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27469,
											"end": 27475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27518,
											"end": 27520,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27506,
											"end": 27515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27497,
											"end": 27504,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 27493,
											"end": 27516,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 27489,
											"end": 27521,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 27486,
											"end": 27605,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 27486,
											"end": 27605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "711"
										},
										{
											"begin": 27486,
											"end": 27605,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 27524,
											"end": 27603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "712"
										},
										{
											"begin": 27524,
											"end": 27603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 27524,
											"end": 27603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27524,
											"end": 27603,
											"name": "tag",
											"source": 12,
											"value": "712"
										},
										{
											"begin": 27524,
											"end": 27603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27486,
											"end": 27605,
											"name": "tag",
											"source": 12,
											"value": "711"
										},
										{
											"begin": 27486,
											"end": 27605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27644,
											"end": 27645,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27669,
											"end": 27732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "713"
										},
										{
											"begin": 27724,
											"end": 27731,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 27715,
											"end": 27721,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27704,
											"end": 27713,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 27700,
											"end": 27722,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27669,
											"end": 27732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 27669,
											"end": 27732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27669,
											"end": 27732,
											"name": "tag",
											"source": 12,
											"value": "713"
										},
										{
											"begin": 27669,
											"end": 27732,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27659,
											"end": 27732,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27659,
											"end": 27732,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27615,
											"end": 27742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27400,
											"end": 27749,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 27400,
											"end": 27749,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27400,
											"end": 27749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27400,
											"end": 27749,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27400,
											"end": 27749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27755,
											"end": 27935,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 27755,
											"end": 27935,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27803,
											"end": 27880,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27800,
											"end": 27801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27793,
											"end": 27881,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27900,
											"end": 27904,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 27897,
											"end": 27898,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 27890,
											"end": 27905,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27924,
											"end": 27928,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 27921,
											"end": 27922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27914,
											"end": 27929,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 27941,
											"end": 28273,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 27941,
											"end": 28273,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28062,
											"end": 28066,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28100,
											"end": 28102,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 28089,
											"end": 28098,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28085,
											"end": 28103,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28077,
											"end": 28103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28077,
											"end": 28103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28113,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "716"
										},
										{
											"begin": 28181,
											"end": 28182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28170,
											"end": 28179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28166,
											"end": 28183,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28157,
											"end": 28163,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 28113,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 28113,
											"end": 28184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28113,
											"end": 28184,
											"name": "tag",
											"source": 12,
											"value": "716"
										},
										{
											"begin": 28113,
											"end": 28184,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28194,
											"end": 28266,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "717"
										},
										{
											"begin": 28262,
											"end": 28264,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28251,
											"end": 28260,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28247,
											"end": 28265,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28238,
											"end": 28244,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 28194,
											"end": 28266,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 28194,
											"end": 28266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28194,
											"end": 28266,
											"name": "tag",
											"source": 12,
											"value": "717"
										},
										{
											"begin": 28194,
											"end": 28266,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27941,
											"end": 28273,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 27941,
											"end": 28273,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 27941,
											"end": 28273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27941,
											"end": 28273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27941,
											"end": 28273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27941,
											"end": 28273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"base/HaikuNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"counter()": "61bc221a",
							"getApproved(uint256)": "081812fc",
							"getMySharedHaikus()": "49af5bfe",
							"haikus(uint256)": "7cb82b2a",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintHaiku(string,string,string)": "350fe165",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"shareHaiku(address,uint256)": "0884d540",
							"sharedHaikus(address,uint256)": "97afe82d",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HaikuNotUnique\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoHaikusShared\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"NotYourHaiku\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMySharedHaikus\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"autor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"line1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"line2\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"line3\",\"type\":\"string\"}],\"internalType\":\"struct HaikuNFT.Haiku[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"haikus\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"autor\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"line1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"line2\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"line3\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_line1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_line2\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_line3\",\"type\":\"string\"}],\"name\":\"mintHaiku\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"shareHaiku\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sharedHaikus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"base/HaikuNFT.sol\":\"HaikuNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"base/HaikuNFT.sol\":{\"keccak256\":\"0x589f097a13ff5e6c3ed201d944d7b833c32e85dcad1b02bc47a6f1dedc8868db\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f511a9e3afa7fcbade5adc84f322da1f87b432145954f5623f296969722e465f\",\"dweb:/ipfs/QmYbDw2AStT25aCBSnXkwKeGUMmSpoFUDMyk2zA9ptkRcx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "base/HaikuNFT.sol:HaikuNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "base/HaikuNFT.sol:HaikuNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "base/HaikuNFT.sol:HaikuNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "base/HaikuNFT.sol:HaikuNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "base/HaikuNFT.sol:HaikuNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "base/HaikuNFT.sol:HaikuNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2807,
								"contract": "base/HaikuNFT.sol:HaikuNFT",
								"label": "haikus",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(Haiku)2803_storage)dyn_storage"
							},
							{
								"astId": 2812,
								"contract": "base/HaikuNFT.sol:HaikuNFT",
								"label": "sharedHaikus",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 2816,
								"contract": "base/HaikuNFT.sol:HaikuNFT",
								"label": "usedLines",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_string_memory_ptr,t_bool)"
							},
							{
								"astId": 2819,
								"contract": "base/HaikuNFT.sol:HaikuNFT",
								"label": "counter",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Haiku)2803_storage)dyn_storage": {
								"base": "t_struct(Haiku)2803_storage",
								"encoding": "dynamic_array",
								"label": "struct HaikuNFT.Haiku[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_bool)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Haiku)2803_storage": {
								"encoding": "inplace",
								"label": "struct HaikuNFT.Haiku",
								"members": [
									{
										"astId": 2796,
										"contract": "base/HaikuNFT.sol:HaikuNFT",
										"label": "autor",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2798,
										"contract": "base/HaikuNFT.sol:HaikuNFT",
										"label": "line1",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 2800,
										"contract": "base/HaikuNFT.sol:HaikuNFT",
										"label": "line2",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 2802,
										"contract": "base/HaikuNFT.sol:HaikuNFT",
										"label": "line3",
										"offset": 0,
										"slot": "3",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1338
						],
						"ERC165": [
							1617
						],
						"ERC721": [
							1145
						],
						"IERC165": [
							1629
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1308
						],
						"IERC721Receiver": [
							1280
						],
						"Strings": [
							1593
						]
					},
					"id": 1146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1263,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1281,
							"src": "172:54:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1280,
										"src": "180:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1309,
							"src": "227:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "235:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1339,
							"src": "293:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1338,
										"src": "301:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1594,
							"src": "342:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1593,
										"src": "350:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1618,
							"src": "391:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 149,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1629,
										"src": "399:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 150,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1617,
										"src": "408:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 137,
							"src": "461:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "469:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"804:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1338,
										"src": "804:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"813:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1617,
										"src": "813:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC721",
										"nameLocations": [
											"821:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "821:7:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1308,
										"src": "830:15:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "847:13:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:1"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1145,
							"linearizedBaseContracts": [
								1145,
								89,
								1308,
								1262,
								1617,
								1629,
								1338
							],
							"name": "ERC721",
							"nameLocation": "794:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 167,
									"libraryName": {
										"id": 165,
										"name": "Strings",
										"nameLocations": [
											"873:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1593,
										"src": "873:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:1",
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "917:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "964:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "993:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 174,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:1",
										"keyType": {
											"id": 172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 179,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1051:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 178,
										"keyName": "owner",
										"keyNameLocation": "1067:5:1",
										"keyType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 183,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1109:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 182,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:1",
										"keyType": {
											"id": 180,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 189,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1175:86:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 188,
										"keyName": "owner",
										"keyNameLocation": "1191:5:1",
										"keyType": {
											"id": 184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 187,
											"keyName": "operator",
											"keyNameLocation": "1216:8:1",
											"keyType": {
												"id": 185,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 186,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1437:57:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1447:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 198,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1455:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:1"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1470:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 202,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1480:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1393:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1414:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:1"
									},
									"scope": 1145,
									"src": "1381:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1616,
										1628
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1669:192:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1698:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 219,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1262,
																			"src": "1718:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 218,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1262",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1754:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 225,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1308,
																			"src": "1774:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 224,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1308",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 232,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1842:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 230,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1145_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1616,
															"src": "1818:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 216,
												"id": 235,
												"nodeType": "Return",
												"src": "1679:175:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 213,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 211,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1617,
												"src": "1637:6:1"
											},
											{
												"id": 212,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1629,
												"src": "1645:7:1"
											}
										],
										"src": "1628:25:1"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1588:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 208,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1663:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:1"
									},
									"scope": 1145,
									"src": "1561:300:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "1992:136:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "IfStatement",
												"src": "2002:87:1",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "2027:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 252,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 251,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "2048:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 257,
															"nodeType": "RevertStatement",
															"src": "2041:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 260,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2105:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 262,
													"indexExpression": {
														"id": 261,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2115:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 263,
												"nodeType": "Return",
												"src": "2098:23:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1939:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1983:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:1"
									},
									"scope": 1145,
									"src": "1920:208:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1195
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2257:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "2288:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 273,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2274:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 272,
												"id": 276,
												"nodeType": "Return",
												"src": "2267:29:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2202:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2248:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:1"
									},
									"scope": 1145,
									"src": "2185:118:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2425:29:1",
										"statements": [
											{
												"expression": {
													"id": 284,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2442:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 283,
												"id": 285,
												"nodeType": "Return",
												"src": "2435:12:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2410:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:1"
									},
									"scope": 1145,
									"src": "2365:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1299
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2580:31:1",
										"statements": [
											{
												"expression": {
													"id": 293,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2597:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 292,
												"id": 294,
												"nodeType": "Return",
												"src": "2590:14:1"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2565:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:1"
									},
									"scope": 1145,
									"src": "2518:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1307
									],
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "2756:176:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2780:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2766:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:1"
											},
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 331,
														"src": "2799:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 308,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2823:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 315,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "2856:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 313,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:1",
													"trueExpression": {
														"arguments": [
															{
																"id": 323,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "2892:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 324,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "2901:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:1",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1406,
																	"src": "2901:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 320,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:1",
																	"typeDescriptions": {}
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:1",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 303,
												"id": 330,
												"nodeType": "Return",
												"src": "2843:82:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2695:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2741:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:1"
									},
									"scope": 1145,
									"src": "2677:255:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3240:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 337,
												"id": 339,
												"nodeType": "Return",
												"src": "3250:9:1"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3225:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:1"
									},
									"scope": 1145,
									"src": "3174:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "3384:52:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "3403:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "3407:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 352,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3416:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 349,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 948,
														"src": "3394:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3340:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3352:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:1"
									},
									"scope": 1145,
									"src": "3323:113:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1251
									],
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "3573:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "3583:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3636:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 369,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "3623:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 364,
												"id": 372,
												"nodeType": "Return",
												"src": "3616:28:1"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3518:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3564:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:1"
									},
									"scope": 1145,
									"src": "3497:154:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3793:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 383,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3822:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3836:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "3846:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 382,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "3803:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3745:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3763:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:1"
									},
									"scope": 1145,
									"src": "3718:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "4022:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 400,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4039:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4058:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "4065:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "4032:42:1"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3954:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3969:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4016:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:1"
									},
									"scope": 1145,
									"src": "3928:153:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "4223:498:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "4237:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "4233:87:1",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "4255:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 424,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 423,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4276:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 429,
															"nodeType": "RevertStatement",
															"src": "4269:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "4538:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 432,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4570:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4574:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 437,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "4583:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 434,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4562:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "4610:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 442,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4627:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "4606:109:1",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "4633:82:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 445,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "4675:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 446,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "4681:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 447,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "4690:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 444,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4654:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 449,
															"nodeType": "RevertStatement",
															"src": "4647:57:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4165:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4179:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4191:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:1"
									},
									"scope": 1145,
									"src": "4143:578:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1217
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "4863:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4890:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "4896:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "4900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 463,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															497
														],
														"referencedDeclaration": 497,
														"src": "4873:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:1"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4813:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4827:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4839:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:1"
									},
									"scope": 1145,
									"src": "4787:132:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1207
									],
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "5088:105:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5117:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5121:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5098:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5162:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5168:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5172:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5181:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 489,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "5139:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:1"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5011:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5037:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5054:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:1"
									},
									"scope": 1145,
									"src": "4985:208:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "5782:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 505,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5799:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 507,
													"indexExpression": {
														"id": 506,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "5807:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 504,
												"id": 508,
												"nodeType": "Return",
												"src": "5792:23:1"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:1",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5725:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5773:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:1"
									},
									"scope": 1145,
									"src": "5707:115:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6017:48:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 518,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6034:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 520,
													"indexExpression": {
														"id": 519,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "6050:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 517,
												"id": 521,
												"nodeType": "Return",
												"src": "6027:31:1"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:1",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5960:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:1"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6008:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:1"
									},
									"scope": 1145,
									"src": "5938:127:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "6485:163:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 535,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "6514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 541,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "6552:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 542,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "6561:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 545,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 526,
																				"src": "6589:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 546,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "6596:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 544,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "6572:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 550,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "6621:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 549,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "6608:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 552,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "6633:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 555,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 534,
												"id": 557,
												"nodeType": "Return",
												"src": "6495:146:1"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:1",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6399:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6414:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6431:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6479:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:1"
									},
									"scope": 1145,
									"src": "6376:272:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "7179:271:1",
										"statements": [
											{
												"condition": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:1",
													"subExpression": {
														"arguments": [
															{
																"id": 570,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "7208:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 571,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "7215:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 572,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "7224:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 569,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "7194:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "7189:255:1",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "7234:210:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 575,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "7252:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 576,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 591,
																"nodeType": "Block",
																"src": "7350:84:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 587,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "7402:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 588,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7411:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 586,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "7375:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 590,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:1"
																	}
																]
															},
															"id": 592,
															"nodeType": "IfStatement",
															"src": "7248:186:1",
															"trueBody": {
																"id": 585,
																"nodeType": "Block",
																"src": "7273:71:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 582,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7321:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 581,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "7298:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 584,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:1",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7108:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7123:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7140:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:1"
									},
									"scope": 1145,
									"src": "7082:368:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "8167:78:1",
										"statements": [
											{
												"id": 610,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:1",
												"statements": [
													{
														"expression": {
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 604,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "8201:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 606,
																"indexExpression": {
																	"id": 605,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "8211:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 607,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "8223:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 609,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:1",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8135:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 600,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:1"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:1"
									},
									"scope": 1145,
									"src": "8092:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "8933:700:1",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "8943:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [
														{
															"id": 627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "8958:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 630,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "9035:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 631,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "IfStatement",
												"src": "9031:86:1",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "9055:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "9086:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 638,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "9092:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9098:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "9069:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 641,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "9161:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 645,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 671,
												"nodeType": "IfStatement",
												"src": "9157:256:1",
												"trueBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "9181:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 651,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 655,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9298:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 656,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 650,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		948,
																		1014
																	],
																	"referencedDeclaration": 1014,
																	"src": "9277:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:1"
														},
														{
															"id": 669,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:1",
															"statements": [
																{
																	"expression": {
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 663,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9368:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 665,
																			"indexExpression": {
																				"id": 664,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "9378:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 668,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:1"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 672,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9427:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 673,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "9423:107:1",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "9445:85:1",
													"statements": [
														{
															"id": 684,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:1",
															"statements": [
																{
																	"expression": {
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 678,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9487:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 680,
																			"indexExpression": {
																				"id": 679,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "9497:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 683,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:1"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 687,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "9540:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 689,
														"indexExpression": {
															"id": 688,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9548:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 690,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9559:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 694,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "9586:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "9592:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9596:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "9577:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "EmitStatement",
												"src": "9572:32:1"
											},
											{
												"expression": {
													"id": 699,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 625,
													"src": "9622:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 623,
												"id": 700,
												"nodeType": "Return",
												"src": "9615:11:1"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:1",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8855:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8867:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8884:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:1"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8924:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:1"
									},
									"scope": 1145,
									"src": "8838:795:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "10008:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "10022:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 711,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "10018:87:1",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "10040:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 717,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 716,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "10061:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 722,
															"nodeType": "RevertStatement",
															"src": "10054:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "10114:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 725,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 728,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "10146:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10150:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 730,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "10138:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 736,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "10184:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 737,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "10180:96:1",
												"trueBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "10213:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 743,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 742,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "10234:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 748,
															"nodeType": "RevertStatement",
															"src": "10227:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9970:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:1"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:1"
									},
									"scope": 1145,
									"src": "9955:327:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "10690:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10710:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "10714:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 760,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															793
														],
														"referencedDeclaration": 793,
														"src": "10700:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:1"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:1",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10652:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10664:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:1"
									},
									"scope": 1145,
									"src": "10633:100:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "11038:98:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11054:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11058:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "11048:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 783,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11111:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11115:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 789,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11124:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 782,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "11076:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:1"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10973:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10985:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11002:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:1"
									},
									"scope": 1145,
									"src": "10954:182:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "11503:186:1",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "11513:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 802,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 801,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "11537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "11591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "11587:96:1",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "11620:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 820,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "11664:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 819,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "11641:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "11634:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "11477:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:1"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:1"
									},
									"scope": 1145,
									"src": "11462:227:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "12084:389:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 836,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "12098:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 837,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "12094:87:1",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "12116:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 843,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 842,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "12137:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 848,
															"nodeType": "RevertStatement",
															"src": "12130:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "12190:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 851,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "12222:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "12226:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 856,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 853,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "12214:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "12260:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "12362:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "12379:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 883,
													"nodeType": "IfStatement",
													"src": "12358:109:1",
													"trueBody": {
														"id": 882,
														"nodeType": "Block",
														"src": "12385:82:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 877,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "12427:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 878,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "12433:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 879,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "12442:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 876,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "12406:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 881,
																"nodeType": "RevertStatement",
																"src": "12399:57:1"
															}
														]
													}
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "12256:211:1",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "12289:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 869,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "12333:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 868,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "12310:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 871,
															"nodeType": "RevertStatement",
															"src": "12303:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12046:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12058:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:1"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:1"
									},
									"scope": 1145,
									"src": "12013:460:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "13481:53:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "13505:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "13511:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "13515:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 896,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															904,
															930
														],
														"referencedDeclaration": 930,
														"src": "13491:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:1"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13429:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13443:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:1"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:1"
									},
									"scope": 1145,
									"src": "13406:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "13873:102:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13899:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "13883:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13944:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13950:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13954:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 926,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "13963:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 922,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "13921:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:1"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:1",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13794:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13808:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13820:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13837:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:1"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:1"
									},
									"scope": 1145,
									"src": "13771:204:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "14488:50:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "14507:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "14511:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 943,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "14520:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 940,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 1014,
														"src": "14498:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:1"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14436:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14448:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14465:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:1"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:1"
									},
									"scope": 1145,
									"src": "14418:120:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "14814:568:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 960,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "14880:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 961,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "14893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "14876:460:1",
												"trueBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "14913:423:1",
													"statements": [
														{
															"assignments": [
																969
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 969,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1005,
																	"src": "14927:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 973,
															"initialValue": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "14957:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 970,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "14943:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 974,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15093:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 975,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 980,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 969,
																			"src": "15115:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 981,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15124:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 985,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "15150:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 986,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "15157:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 984,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "15133:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 995,
															"nodeType": "IfStatement",
															"src": "15089:142:1",
															"trueBody": {
																"id": 994,
																"nodeType": "Block",
																"src": "15164:67:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 991,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "15211:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 990,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "15189:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 993,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:1"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 996,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "15249:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1004,
															"nodeType": "IfStatement",
															"src": "15245:81:1",
															"trueBody": {
																"id": 1003,
																"nodeType": "Block",
																"src": "15260:66:1",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 998,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "15292:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 999,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "15299:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1000,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 953,
																					"src": "15303:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 997,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "15283:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1002,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1007,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "15346:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1009,
														"indexExpression": {
															"id": 1008,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "15362:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1010,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15373:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:1"
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:1",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14738:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14750:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14767:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14781:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:1"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:1"
									},
									"scope": 1145,
									"src": "14720:662:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "15684:219:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "15698:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "15694:91:1",
												"trueBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "15722:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1031,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "15765:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "15743:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1033,
															"nodeType": "RevertStatement",
															"src": "15736:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1036,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "15794:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1039,
															"indexExpression": {
																"id": 1037,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "15813:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15820:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "15832:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1045,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "15870:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15877:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "15887:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1044,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "15855:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "EmitStatement",
												"src": "15850:46:1"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15619:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15634:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15652:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:1"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:1"
									},
									"scope": 1145,
									"src": "15591:312:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "16210:169:1",
										"statements": [
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "16220:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1059,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"arguments": [
														{
															"id": 1062,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "16245:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "16236:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "16267:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1066,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "16263:88:1",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "16288:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1072,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "16332:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1071,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "16309:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1074,
															"nodeType": "RevertStatement",
															"src": "16302:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1077,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "16367:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1078,
												"nodeType": "Return",
												"src": "16360:12:1"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:1",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16161:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:1"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16201:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:1"
									},
									"scope": 1145,
									"src": "16138:241:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "17020:680:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1092,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "17034:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "17030:664:1",
												"trueBody": {
													"id": 1141,
													"nodeType": "Block",
													"src": "17054:640:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1121,
																		"nodeType": "Block",
																		"src": "17168:162:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1110,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "17190:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1111,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1280,
																								"src": "17200:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:1",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1279,
																							"src": "17200:32:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1113,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1120,
																				"nodeType": "IfStatement",
																				"src": "17186:130:1",
																				"trueBody": {
																					"id": 1119,
																					"nodeType": "Block",
																					"src": "17243:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1116,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17294:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1115,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17272:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1118,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1122,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1109,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1108,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1122,
																				"src": "17153:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1107,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:1"
																	},
																	"src": "17144:186:1"
																},
																{
																	"block": {
																		"id": 1138,
																		"nodeType": "Block",
																		"src": "17359:325:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1126,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1124,
																							"src": "17381:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1128,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1136,
																					"nodeType": "Block",
																					"src": "17480:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:1",
																								"nodeType": "YulBlock",
																								"src": "17566:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:1",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:1"
																													},
																													"nativeSrc": "17599:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:1"
																													},
																													"nativeSrc": "17616:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:1"
																											},
																											"nativeSrc": "17592:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:1"
																										},
																										"nativeSrc": "17592:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1135,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:1"
																						}
																					]
																				},
																				"id": 1137,
																				"nodeType": "IfStatement",
																				"src": "17377:293:1",
																				"trueBody": {
																					"id": 1134,
																					"nodeType": "Block",
																					"src": "17401:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1131,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17452:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1130,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17430:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1132,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1133,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1139,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1125,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1124,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1139,
																				"src": "17338:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:1"
																	},
																	"src": "17331:353:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1101,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1320,
																			"src": "17109:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1103,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "17123:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1104,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "17129:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1105,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "17138:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1098,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "17088:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1097,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "17072:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1280",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:1",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1279,
																	"src": "17072:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1140,
															"nodeType": "TryStatement",
															"src": "17068:616:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:1",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16950:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16964:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16976:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16993:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:1"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:1"
									},
									"scope": 1145,
									"src": "16918:782:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1146,
							"src": "776:16926:1",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "107:17596:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1629
						],
						"IERC721": [
							1262
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1147,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 1630,
							"src": "134:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1148,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1629,
										"src": "142:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1151,
										"name": "IERC165",
										"nameLocations": [
											"287:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1629,
										"src": "287:7:2"
									},
									"id": 1152,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1150,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1262,
							"linearizedBaseContracts": [
								1262,
								1629
							],
							"name": "IERC721",
							"nameLocation": "276:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1161,
									"name": "Transfer",
									"nameLocation": "400:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "409:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "431:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "451:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:2"
									},
									"src": "394:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1170,
									"name": "Approval",
									"nameLocation": "587:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "596:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "619:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "645:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:2"
									},
									"src": "581:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1179,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "819:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "842:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "868:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:2"
									},
									"src": "798:85:2"
								},
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "989:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:2"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1027:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:2"
									},
									"scope": 1262,
									"src": "970:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1203:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:2"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1243:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:2"
									},
									"scope": 1262,
									"src": "1186:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1860:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1874:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1903:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:2"
									},
									"scope": 1262,
									"src": "1834:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2701:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:2"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:2"
									},
									"scope": 1262,
									"src": "2649:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3492:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3506:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:2"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:2"
									},
									"scope": 1262,
									"src": "3470:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4024:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4036:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:2"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:2"
									},
									"scope": 1262,
									"src": "4007:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4415:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4433:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:2"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:2"
									},
									"scope": 1262,
									"src": "4388:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4628:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:2"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4668:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:2"
									},
									"scope": 1262,
									"src": "4607:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4861:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4876:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4917:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:2"
									},
									"scope": 1262,
									"src": "4835:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1263,
							"src": "266:4659:2",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "108:4818:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1280
						]
					},
					"id": 1281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1265,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1280,
							"linearizedBaseContracts": [
								1280
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "867:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "893:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "915:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "940:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:3"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "984:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:3"
									},
									"scope": 1280,
									"src": "832:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1281,
							"src": "295:699:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1262
						],
						"IERC721Metadata": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1309,
							"sourceUnit": 1263,
							"src": "153:39:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1283,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "161:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1286,
										"name": "IERC721",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "357:7:4"
									},
									"id": 1287,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1285,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1308,
							"linearizedBaseContracts": [
								1308,
								1262,
								1629
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:4"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "473:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:4"
									},
									"scope": 1308,
									"src": "434:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:4"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "600:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:4"
									},
									"scope": 1308,
									"src": "559:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:4"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "774:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:4"
									},
									"scope": 1308,
									"src": "716:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "328:463:4",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "127:665:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1338
						]
					},
					"id": 1339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1338,
							"linearizedBaseContracts": [
								1338
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1316,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1318,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 1338,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1325,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1324,
												"id": 1327,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 1338,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1333,
												"id": 1335,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 1338,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1339,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2683
						],
						"SignedMath": [
							2788
						],
						"Strings": [
							1593
						]
					},
					"id": 1594,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1342,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 2684,
							"src": "127:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1341,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2683,
										"src": "135:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 2789,
							"src": "165:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1343,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2788,
										"src": "173:10:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1345,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1593,
							"linearizedBaseContracts": [
								1593
							],
							"name": "Strings",
							"nameLocation": "259:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1348,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "273:56:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1346,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1347,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1351,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "335:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1349,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1350,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:6",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1358,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "505:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "520:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:6"
									},
									"src": "470:66:6"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "708:627:6",
										"statements": [
											{
												"id": 1404,
												"nodeType": "UncheckedBlock",
												"src": "718:611:6",
												"statements": [
													{
														"assignments": [
															1367
														],
														"declarations": [
															{
																"constant": false,
																"id": 1367,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1404,
																"src": "742:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1366,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1374,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1370,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1361,
																		"src": "770:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1368,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2683,
																		"src": "759:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2683_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2503,
																	"src": "759:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:6"
													},
													{
														"assignments": [
															1376
														],
														"declarations": [
															{
																"constant": false,
																"id": 1376,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1404,
																"src": "794:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1375,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1381,
														"initialValue": {
															"arguments": [
																{
																	"id": 1379,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "828:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1377,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:6"
													},
													{
														"assignments": [
															1383
														],
														"declarations": [
															{
																"constant": false,
																"id": 1383,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 1404,
																"src": "849:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1382,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1384,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:6"
													},
													{
														"AST": {
															"nativeSrc": "930:67:6",
															"nodeType": "YulBlock",
															"src": "930:67:6",
															"statements": [
																{
																	"nativeSrc": "948:35:6",
																	"nodeType": "YulAssignment",
																	"src": "948:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:6",
																						"nodeType": "YulLiteral",
																						"src": "971:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:6"
																				},
																				"nativeSrc": "967:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:6"
																		},
																		"nativeSrc": "955:28:6",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:6"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1376,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1367,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1383,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:6",
																"valueSize": 1
															}
														],
														"id": 1385,
														"nodeType": "InlineAssembly",
														"src": "921:76:6"
													},
													{
														"body": {
															"id": 1400,
															"nodeType": "Block",
															"src": "1023:269:6",
															"statements": [
																{
																	"expression": {
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:6",
																		"subExpression": {
																			"id": 1387,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1383,
																			"src": "1041:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1389,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:6"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:6",
																		"nodeType": "YulBlock",
																		"src": "1124:86:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:6",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:6"
																									},
																									"nativeSrc": "1164:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:6"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:6"
																							},
																							"nativeSrc": "1159:32:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:6",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:6"
																					},
																					"nativeSrc": "1146:46:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:6"
																				},
																				"nativeSrc": "1146:46:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:6"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1348,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1383,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1361,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:6",
																			"valueSize": 1
																		}
																	],
																	"id": 1390,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:6"
																},
																{
																	"expression": {
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1391,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "1227:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1394,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1395,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "1260:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1399,
																	"nodeType": "IfStatement",
																	"src": "1256:21:6",
																	"trueBody": {
																		"id": 1398,
																		"nodeType": "Break",
																		"src": "1272:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1401,
														"nodeType": "WhileStatement",
														"src": "1010:282:6"
													},
													{
														"expression": {
															"id": 1402,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "1312:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1365,
														"id": 1403,
														"nodeType": "Return",
														"src": "1305:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "655:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:6"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "693:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:6"
									},
									"scope": 1593,
									"src": "637:698:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "1511:92:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1417,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "1542:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:6",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1426,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1409,
																			"src": "1588:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1424,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2788,
																			"src": "1573:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2788_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:6",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2787,
																		"src": "1573:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1423,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "1564:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1414,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:6",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1413,
												"id": 1430,
												"nodeType": "Return",
												"src": "1521:75:6"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:6",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1459:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1408,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:6"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1496:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1411,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:6"
									},
									"scope": 1593,
									"src": "1435:168:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "1782:100:6",
										"statements": [
											{
												"id": 1450,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1441,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "1835:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1444,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1435,
																				"src": "1854:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1442,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2683,
																				"src": "1842:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2683_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2625,
																			"src": "1842:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1440,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1452,
																	1535,
																	1555
																],
																"referencedDeclaration": 1535,
																"src": "1823:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1439,
														"id": 1449,
														"nodeType": "Return",
														"src": "1816:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "1729:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:6"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "1767:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:6"
									},
									"scope": 1593,
									"src": "1708:174:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "2095:435:6",
										"statements": [
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "2105:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1462,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1465,
												"initialValue": {
													"id": 1464,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1455,
													"src": "2126:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:6"
											},
											{
												"assignments": [
													1467
												],
												"declarations": [
													{
														"constant": false,
														"id": 1467,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "2141:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1466,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1476,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1471,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "2177:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1468,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:6"
											},
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1477,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2198:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1479,
														"indexExpression": {
															"hexValue": "30",
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:6"
											},
											{
												"expression": {
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1483,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2223:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1485,
														"indexExpression": {
															"hexValue": "31",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:6"
											},
											{
												"body": {
													"id": 1517,
													"nodeType": "Block",
													"src": "2293:95:6",
													"statements": [
														{
															"expression": {
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1503,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1467,
																		"src": "2307:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1505,
																	"indexExpression": {
																		"id": 1504,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "2314:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1506,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "2319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1510,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1507,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "2330:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1512,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:6"
														},
														{
															"expression": {
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1513,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "2361:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1516,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1497,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "2281:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1518,
												"initializationExpression": {
													"assignments": [
														1490
													],
													"declarations": [
														{
															"constant": false,
															"id": 1490,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1518,
															"src": "2253:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1489,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1496,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1492,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "2269:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:6",
														"subExpression": {
															"id": 1500,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "2290:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1502,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1519,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "2401:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1528,
												"nodeType": "IfStatement",
												"src": "2397:96:6",
												"trueBody": {
													"id": 1527,
													"nodeType": "Block",
													"src": "2418:75:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1523,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "2468:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1524,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "2475:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1522,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "2439:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1526,
															"nodeType": "RevertStatement",
															"src": "2432:50:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1531,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2516:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1529,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1533,
												"nodeType": "Return",
												"src": "2502:21:6"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2026:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2041:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:6"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2080:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:6"
									},
									"scope": 1593,
									"src": "2005:525:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "2762:75:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1548,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "2807:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1546,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1544,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1551,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "2815:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1543,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1452,
															1535,
															1555
														],
														"referencedDeclaration": 1535,
														"src": "2779:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1542,
												"id": 1553,
												"nodeType": "Return",
												"src": "2772:58:6"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2710:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:6"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2747:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:6"
									},
									"scope": 1593,
									"src": "2689:148:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "2992:104:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1567,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1558,
																		"src": "3015:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1565,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1572,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "3034:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1570,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1579,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "3063:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1577,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1576,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1585,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "3086:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1583,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1582,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1564,
												"id": 1590,
												"nodeType": "Return",
												"src": "3002:87:6"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:6",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2929:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2946:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:6"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2986:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:6"
									},
									"scope": 1593,
									"src": "2914:182:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1594,
							"src": "251:2847:6",
							"usedErrors": [
								1358
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1617
						],
						"IERC165": [
							1629
						]
					},
					"id": 1618,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1595,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1597,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1618,
							"sourceUnit": 1630,
							"src": "140:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1596,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1629,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1599,
										"name": "IERC165",
										"nameLocations": [
											"687:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1629,
										"src": "687:7:7"
									},
									"id": 1600,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1598,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1617,
							"linearizedBaseContracts": [
								1617,
								1629
							],
							"name": "ERC165",
							"nameLocation": "677:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1628
									],
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "844:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1608,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "861:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1610,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1629,
																	"src": "881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1629_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1629_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1609,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1629",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1607,
												"id": 1614,
												"nodeType": "Return",
												"src": "854:47:7"
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "789:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1602,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:7"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "838:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:7"
									},
									"scope": 1617,
									"src": "762:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1618,
							"src": "659:251:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1629
						]
					},
					"id": 1630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1619,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1620,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1629,
							"linearizedBaseContracts": [
								1629
							],
							"name": "IERC165",
							"nameLocation": "431:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "817:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1622,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:8"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "860:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:8"
									},
									"scope": 1629,
									"src": "790:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1630,
							"src": "421:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2683
						]
					},
					"id": 2684,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1631,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1632,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2683,
							"linearizedBaseContracts": [
								2683
							],
							"name": "Math",
							"nameLocation": "211:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:9",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1635,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:9"
									},
									"src": "277:29:9"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1640,
									"members": [
										{
											"id": 1636,
											"name": "Floor",
											"nameLocation": "336:5:9",
											"nodeType": "EnumValue",
											"src": "336:5:9"
										},
										{
											"id": 1637,
											"name": "Ceil",
											"nameLocation": "379:4:9",
											"nodeType": "EnumValue",
											"src": "379:4:9"
										},
										{
											"id": 1638,
											"name": "Trunc",
											"nameLocation": "421:5:9",
											"nodeType": "EnumValue",
											"src": "421:5:9"
										},
										{
											"id": 1639,
											"name": "Expand",
											"nameLocation": "451:6:9",
											"nodeType": "EnumValue",
											"src": "451:6:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:9",
									"nodeType": "EnumDefinition",
									"src": "312:169:9"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "661:140:9",
										"statements": [
											{
												"id": 1670,
												"nodeType": "UncheckedBlock",
												"src": "671:124:9",
												"statements": [
													{
														"assignments": [
															1653
														],
														"declarations": [
															{
																"constant": false,
																"id": 1653,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1670,
																"src": "695:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1652,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1657,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1654,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "707:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1655,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "711:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1658,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "730:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1659,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "734:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1665,
														"nodeType": "IfStatement",
														"src": "726:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1663,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1651,
															"id": 1664,
															"nodeType": "Return",
															"src": "737:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1667,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "782:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1668,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1651,
														"id": 1669,
														"nodeType": "Return",
														"src": "768:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:9",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "612:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:9"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "646:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "652:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:9"
									},
									"scope": 2683,
									"src": "585:216:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "984:113:9",
										"statements": [
											{
												"id": 1698,
												"nodeType": "UncheckedBlock",
												"src": "994:97:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1684,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "1022:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1685,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "1026:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1691,
														"nodeType": "IfStatement",
														"src": "1018:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1689,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1683,
															"id": 1690,
															"nodeType": "Return",
															"src": "1029:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1693,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1675,
																		"src": "1074:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1694,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "1078:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1696,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1683,
														"id": 1697,
														"nodeType": "Return",
														"src": "1060:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:9",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "924:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "935:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:9"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "969:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "975:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:9"
									},
									"scope": 2683,
									"src": "908:189:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "1283:417:9",
										"statements": [
											{
												"id": 1740,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1712,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "1551:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1719,
														"nodeType": "IfStatement",
														"src": "1547:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1717,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1711,
															"id": 1718,
															"nodeType": "Return",
															"src": "1559:16:9"
														}
													},
													{
														"assignments": [
															1721
														],
														"declarations": [
															{
																"constant": false,
																"id": 1721,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1740,
																"src": "1589:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1725,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1722,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "1601:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1723,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "1605:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1726,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "1624:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1727,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1703,
																	"src": "1628:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1729,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "1633:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1735,
														"nodeType": "IfStatement",
														"src": "1620:33:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1733,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1711,
															"id": 1734,
															"nodeType": "Return",
															"src": "1636:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1737,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "1681:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1738,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1711,
														"id": 1739,
														"nodeType": "Return",
														"src": "1667:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:9",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1223:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1234:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:9"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1268:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1707,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1274:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:9"
									},
									"scope": 2683,
									"src": "1207:493:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "1887:114:9",
										"statements": [
											{
												"id": 1768,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1754,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "1925:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1761,
														"nodeType": "IfStatement",
														"src": "1921:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1759,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1753,
															"id": 1760,
															"nodeType": "Return",
															"src": "1933:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1763,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1745,
																		"src": "1978:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1764,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "1982:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1766,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1753,
														"id": 1767,
														"nodeType": "Return",
														"src": "1964:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:9",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1827:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1838:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:9"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1872:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1878:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:9"
									},
									"scope": 2683,
									"src": "1811:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "2198:114:9",
										"statements": [
											{
												"id": 1796,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1782,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "2236:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1789,
														"nodeType": "IfStatement",
														"src": "2232:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1781,
															"id": 1788,
															"nodeType": "Return",
															"src": "2244:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1791,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "2289:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1792,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "2293:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1794,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1781,
														"id": 1795,
														"nodeType": "Return",
														"src": "2275:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2138:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2149:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:9"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2183:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2189:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:9"
									},
									"scope": 2683,
									"src": "2122:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "2449:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1808,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "2466:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1809,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "2470:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1812,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "2478:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:9",
													"trueExpression": {
														"id": 1811,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "2474:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1807,
												"id": 1814,
												"nodeType": "Return",
												"src": "2459:20:9"
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "2395:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "2406:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:9"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "2440:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:9"
									},
									"scope": 2683,
									"src": "2382:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "2624:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1826,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "2641:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1827,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "2645:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1830,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "2653:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:9",
													"trueExpression": {
														"id": 1829,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1819,
														"src": "2649:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1825,
												"id": 1832,
												"nodeType": "Return",
												"src": "2634:20:9"
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2570:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2581:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:9"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2615:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:9"
									},
									"scope": 2683,
									"src": "2557:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1856,
										"nodeType": "Block",
										"src": "2845:82:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1844,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "2900:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1845,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "2904:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1847,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1848,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1837,
																		"src": "2910:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1849,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1839,
																		"src": "2914:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1851,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1843,
												"id": 1855,
												"nodeType": "Return",
												"src": "2892:28:9"
											}
										]
									},
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2791:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2802:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:9"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2836:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:9"
									},
									"scope": 2683,
									"src": "2774:153:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "3219:260:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1867,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "3233:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1875,
												"nodeType": "IfStatement",
												"src": "3229:127:9",
												"trueBody": {
													"id": 1874,
													"nodeType": "Block",
													"src": "3241:115:9",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1870,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1860,
																	"src": "3340:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1871,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "3344:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1866,
															"id": 1873,
															"nodeType": "Return",
															"src": "3333:12:9"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1876,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "3444:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1880,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1860,
																			"src": "3458:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1884,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "3467:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:9",
													"trueExpression": {
														"hexValue": "30",
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1866,
												"id": 1889,
												"nodeType": "Return",
												"src": "3437:35:9"
											}
										]
									},
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3165:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3176:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:9"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3210:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:9"
									},
									"scope": 2683,
									"src": "3148:331:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "3901:4018:9",
										"statements": [
											{
												"id": 2015,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:9",
												"statements": [
													{
														"assignments": [
															1904
														],
														"declarations": [
															{
																"constant": false,
																"id": 1904,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "4232:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1903,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1908,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1905,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "4248:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1906,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1896,
																"src": "4252:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:9"
													},
													{
														"assignments": [
															1910
														],
														"declarations": [
															{
																"constant": false,
																"id": 1910,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "4312:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1909,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1911,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:9"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:9",
															"nodeType": "YulBlock",
															"src": "4392:122:9",
															"statements": [
																{
																	"nativeSrc": "4410:30:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:9"
																				},
																				"nativeSrc": "4433:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:9"
																		},
																		"nativeSrc": "4420:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:9"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:9",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:9",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:9"
																				},
																				"nativeSrc": "4470:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:9"
																				},
																				"nativeSrc": "4486:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:9"
																		},
																		"nativeSrc": "4466:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1910,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1894,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1896,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:9",
																"valueSize": 1
															}
														],
														"id": 1912,
														"nodeType": "InlineAssembly",
														"src": "4383:131:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1913,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1910,
																"src": "4595:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1921,
														"nodeType": "IfStatement",
														"src": "4591:368:9",
														"trueBody": {
															"id": 1920,
															"nodeType": "Block",
															"src": "4607:352:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1916,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "4925:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1917,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1898,
																			"src": "4933:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1902,
																	"id": 1919,
																	"nodeType": "Return",
																	"src": "4918:26:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1922,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "5065:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1923,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1910,
																"src": "5080:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1929,
														"nodeType": "IfStatement",
														"src": "5061:88:9",
														"trueBody": {
															"id": 1928,
															"nodeType": "Block",
															"src": "5087:62:9",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1925,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1635,
																			"src": "5112:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1927,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:9"
																}
															]
														}
													},
													{
														"assignments": [
															1931
														],
														"declarations": [
															{
																"constant": false,
																"id": 1931,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "5404:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1930,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1932,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:9"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:9",
															"nodeType": "YulBlock",
															"src": "5444:291:9",
															"statements": [
																{
																	"nativeSrc": "5513:38:9",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:9"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:9"
																		},
																		"nativeSrc": "5526:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:9",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:9"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:9",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:9"
																				},
																				"nativeSrc": "5653:20:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:9"
																		},
																		"nativeSrc": "5642:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:9",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:9"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:9"
																		},
																		"nativeSrc": "5700:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1910,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1910,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1931,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1931,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1931,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1894,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1896,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:9",
																"valueSize": 1
															}
														],
														"id": 1933,
														"nodeType": "InlineAssembly",
														"src": "5435:300:9"
													},
													{
														"assignments": [
															1935
														],
														"declarations": [
															{
																"constant": false,
																"id": 1935,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "5939:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1934,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1942,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1936,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "5954:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1938,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1898,
																			"src": "5973:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1940,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:9"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:9",
															"nodeType": "YulBlock",
															"src": "6008:362:9",
															"statements": [
																{
																	"nativeSrc": "6073:37:9",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:9"
																		},
																		"nativeSrc": "6088:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:9"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:9",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:9"
																		},
																		"nativeSrc": "6186:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:9",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:9",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:9"
																						},
																						"nativeSrc": "6333:12:9",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:9"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:9"
																				},
																				"nativeSrc": "6329:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:9"
																		},
																		"nativeSrc": "6325:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:9",
																"valueSize": 1
															}
														],
														"id": 1943,
														"nodeType": "InlineAssembly",
														"src": "5999:371:9"
													},
													{
														"expression": {
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1944,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "6436:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1945,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1910,
																	"src": "6445:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1946,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "6453:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1949,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:9"
													},
													{
														"assignments": [
															1951
														],
														"declarations": [
															{
																"constant": false,
																"id": 1951,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "6775:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1950,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1958,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1953,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1898,
																			"src": "6798:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:9"
													},
													{
														"expression": {
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1959,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7031:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1961,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7046:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1962,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7060:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1966,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:9"
													},
													{
														"expression": {
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1967,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7100:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1969,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7115:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1970,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7129:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1974,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:9"
													},
													{
														"expression": {
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1975,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7170:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1977,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7185:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1978,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7199:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1982,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:9"
													},
													{
														"expression": {
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1983,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7240:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1985,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7255:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1986,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7269:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1990,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:9"
													},
													{
														"expression": {
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1991,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7310:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1993,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7325:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1994,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7339:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1998,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:9"
													},
													{
														"expression": {
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1999,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7381:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2001,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7396:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2002,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7410:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2006,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:9"
													},
													{
														"expression": {
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2007,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "7851:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2008,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1904,
																	"src": "7860:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2009,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "7868:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2012,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:9"
													},
													{
														"expression": {
															"id": 2013,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "7896:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1902,
														"id": 2014,
														"nodeType": "Return",
														"src": "7889:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:9",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3819:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3830:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3841:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:9"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3885:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:9"
									},
									"scope": 2683,
									"src": "3803:4116:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "8161:192:9",
										"statements": [
											{
												"assignments": [
													2033
												],
												"declarations": [
													{
														"constant": false,
														"id": 2033,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2059,
														"src": "8171:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2032,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2039,
												"initialValue": {
													"arguments": [
														{
															"id": 2035,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "8195:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2036,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "8198:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2037,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "8201:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2034,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2017,
															2060
														],
														"referencedDeclaration": 2017,
														"src": "8188:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2041,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2027,
																"src": "8244:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1640",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1640",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2040,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "8227:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2044,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2020,
																	"src": "8264:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2045,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2022,
																	"src": "8267:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2046,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "8270:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2043,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2056,
												"nodeType": "IfStatement",
												"src": "8223:101:9",
												"trueBody": {
													"id": 2055,
													"nodeType": "Block",
													"src": "8288:36:9",
													"statements": [
														{
															"expression": {
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2051,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2033,
																	"src": "8302:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2054,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2057,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2033,
													"src": "8340:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2031,
												"id": 2058,
												"nodeType": "Return",
												"src": "8333:13:9"
											}
										]
									},
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:9",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8067:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8078:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8089:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8110:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2026,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2025,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "8110:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "8110:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:9"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8152:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:9"
									},
									"scope": 2683,
									"src": "8051:302:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2171,
										"nodeType": "Block",
										"src": "8644:1585:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2068,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "8658:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2074,
												"nodeType": "IfStatement",
												"src": "8654:45:9",
												"trueBody": {
													"id": 2073,
													"nodeType": "Block",
													"src": "8666:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2067,
															"id": 2072,
															"nodeType": "Return",
															"src": "8680:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													2076
												],
												"declarations": [
													{
														"constant": false,
														"id": 2076,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2171,
														"src": "9378:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2075,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2085,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2079,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2063,
																			"src": "9406:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2078,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2339,
																			2374
																		],
																		"referencedDeclaration": 2339,
																		"src": "9401:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2083,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:9"
											},
											{
												"id": 2170,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:9",
												"statements": [
													{
														"expression": {
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2086,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "9839:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2087,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "9849:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2088,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "9858:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2089,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "9862:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2092,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2096,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:9"
													},
													{
														"expression": {
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2097,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "9888:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2098,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "9898:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2099,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "9907:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2100,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "9911:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2103,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2107,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:9"
													},
													{
														"expression": {
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2108,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "9937:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2109,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "9947:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2110,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "9956:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2111,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "9960:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2114,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2118,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:9"
													},
													{
														"expression": {
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2119,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "9986:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2120,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "9996:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2121,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "10005:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2122,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "10009:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2125,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2129,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:9"
													},
													{
														"expression": {
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2130,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "10035:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2131,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "10045:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2132,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "10054:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2133,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "10058:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2136,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2140,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:9"
													},
													{
														"expression": {
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2141,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "10084:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2142,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "10094:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2143,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "10103:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2144,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "10107:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2147,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2151,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:9"
													},
													{
														"expression": {
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2152,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "10133:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2153,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "10143:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2154,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "10152:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2155,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "10156:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2162,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2164,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "10193:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2165,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2063,
																		"src": "10201:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2166,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2076,
																		"src": "10205:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2163,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "10189:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2067,
														"id": 2169,
														"nodeType": "Return",
														"src": "10182:30:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "8601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:9"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "8635:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:9"
									},
									"scope": 2683,
									"src": "8587:1642:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2206,
										"nodeType": "Block",
										"src": "10405:164:9",
										"statements": [
											{
												"id": 2205,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:9",
												"statements": [
													{
														"assignments": [
															2184
														],
														"declarations": [
															{
																"constant": false,
																"id": 2184,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2205,
																"src": "10439:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2183,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2188,
														"initialValue": {
															"arguments": [
																{
																	"id": 2186,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2175,
																	"src": "10461:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2185,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2172,
																	2207
																],
																"referencedDeclaration": 2172,
																"src": "10456:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2189,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2184,
																"src": "10484:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2191,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2178,
																						"src": "10511:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2190,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "10494:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2195,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2193,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2184,
																						"src": "10524:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2194,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2184,
																						"src": "10533:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2196,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2175,
																					"src": "10542:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2202,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2182,
														"id": 2204,
														"nodeType": "Return",
														"src": "10477:75:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2173,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:9",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "10343:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "10354:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2177,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2176,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "10354:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "10354:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:9"
									},
									"returnParameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "10396:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:9"
									},
									"scope": 2683,
									"src": "10329:240:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2338,
										"nodeType": "Block",
										"src": "10760:922:9",
										"statements": [
											{
												"assignments": [
													2216
												],
												"declarations": [
													{
														"constant": false,
														"id": 2216,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2338,
														"src": "10770:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2218,
												"initialValue": {
													"hexValue": "30",
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:9"
											},
											{
												"id": 2335,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "10826:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2233,
														"nodeType": "IfStatement",
														"src": "10822:99:9",
														"trueBody": {
															"id": 2232,
															"nodeType": "Block",
															"src": "10844:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2224,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "10862:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2227,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:9"
																},
																{
																	"expression": {
																		"id": 2230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2228,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "10893:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2231,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2234,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "10938:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2248,
														"nodeType": "IfStatement",
														"src": "10934:96:9",
														"trueBody": {
															"id": 2247,
															"nodeType": "Block",
															"src": "10955:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2239,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "10973:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2242,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:9"
																},
																{
																	"expression": {
																		"id": 2245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2243,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11003:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2246,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2249,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11047:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2263,
														"nodeType": "IfStatement",
														"src": "11043:96:9",
														"trueBody": {
															"id": 2262,
															"nodeType": "Block",
															"src": "11064:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2254,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11082:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2257,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:9"
																},
																{
																	"expression": {
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2258,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11112:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2261,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11156:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2278,
														"nodeType": "IfStatement",
														"src": "11152:96:9",
														"trueBody": {
															"id": 2277,
															"nodeType": "Block",
															"src": "11173:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2269,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11191:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2272,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:9"
																},
																{
																	"expression": {
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2273,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11221:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2276,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11265:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2293,
														"nodeType": "IfStatement",
														"src": "11261:93:9",
														"trueBody": {
															"id": 2292,
															"nodeType": "Block",
															"src": "11281:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2284,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11299:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2287,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:9"
																},
																{
																	"expression": {
																		"id": 2290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2288,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11328:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2291,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2294,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11371:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2308,
														"nodeType": "IfStatement",
														"src": "11367:93:9",
														"trueBody": {
															"id": 2307,
															"nodeType": "Block",
															"src": "11387:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2299,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11405:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2302,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:9"
																},
																{
																	"expression": {
																		"id": 2305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2303,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11434:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2306,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2309,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11477:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2323,
														"nodeType": "IfStatement",
														"src": "11473:93:9",
														"trueBody": {
															"id": 2322,
															"nodeType": "Block",
															"src": "11493:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2314,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11511:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2317,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:9"
																},
																{
																	"expression": {
																		"id": 2320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2318,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11540:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2321,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2324,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11583:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2334,
														"nodeType": "IfStatement",
														"src": "11579:64:9",
														"trueBody": {
															"id": 2333,
															"nodeType": "Block",
															"src": "11599:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2329,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11617:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2332,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2336,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2216,
													"src": "11669:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2214,
												"id": 2337,
												"nodeType": "Return",
												"src": "11662:13:9"
											}
										]
									},
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:9",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "10713:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:9"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "10751:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:9"
									},
									"scope": 2683,
									"src": "10699:983:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2373,
										"nodeType": "Block",
										"src": "11915:168:9",
										"statements": [
											{
												"id": 2372,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:9",
												"statements": [
													{
														"assignments": [
															2351
														],
														"declarations": [
															{
																"constant": false,
																"id": 2351,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2372,
																"src": "11949:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2350,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2355,
														"initialValue": {
															"arguments": [
																{
																	"id": 2353,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2342,
																	"src": "11971:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2352,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2339,
																	2374
																],
																"referencedDeclaration": 2339,
																"src": "11966:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2356,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "11998:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2358,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2345,
																						"src": "12025:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2357,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "12008:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2362,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2360,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2361,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2351,
																						"src": "12043:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2363,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2342,
																					"src": "12052:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2369,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2349,
														"id": 2371,
														"nodeType": "Return",
														"src": "11991:75:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "11849:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "11864:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2343,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "11864:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "11864:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:9"
									},
									"returnParameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "11906:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:9"
									},
									"scope": 2683,
									"src": "11835:248:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2502,
										"nodeType": "Block",
										"src": "12276:854:9",
										"statements": [
											{
												"assignments": [
													2383
												],
												"declarations": [
													{
														"constant": false,
														"id": 2383,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2502,
														"src": "12286:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2382,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2385,
												"initialValue": {
													"hexValue": "30",
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:9"
											},
											{
												"id": 2499,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2386,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12342:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2402,
														"nodeType": "IfStatement",
														"src": "12338:103:9",
														"trueBody": {
															"id": 2401,
															"nodeType": "Block",
															"src": "12361:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2391,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12379:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2396,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:9"
																},
																{
																	"expression": {
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2397,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12414:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2400,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2403,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12458:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2419,
														"nodeType": "IfStatement",
														"src": "12454:103:9",
														"trueBody": {
															"id": 2418,
															"nodeType": "Block",
															"src": "12477:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2408,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12495:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2413,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:9"
																},
																{
																	"expression": {
																		"id": 2416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2414,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12530:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2417,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2420,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12574:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2436,
														"nodeType": "IfStatement",
														"src": "12570:103:9",
														"trueBody": {
															"id": 2435,
															"nodeType": "Block",
															"src": "12593:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2425,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12611:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2430,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:9"
																},
																{
																	"expression": {
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2431,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12646:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2434,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2437,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12690:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2453,
														"nodeType": "IfStatement",
														"src": "12686:100:9",
														"trueBody": {
															"id": 2452,
															"nodeType": "Block",
															"src": "12708:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2442,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12726:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2447,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:9"
																},
																{
																	"expression": {
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2448,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12760:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2451,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2454,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12803:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2470,
														"nodeType": "IfStatement",
														"src": "12799:100:9",
														"trueBody": {
															"id": 2469,
															"nodeType": "Block",
															"src": "12821:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2459,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12839:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2464,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:9"
																},
																{
																	"expression": {
																		"id": 2467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2465,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12873:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2468,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2471,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12916:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2487,
														"nodeType": "IfStatement",
														"src": "12912:100:9",
														"trueBody": {
															"id": 2486,
															"nodeType": "Block",
															"src": "12934:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2476,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12952:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2481,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:9"
																},
																{
																	"expression": {
																		"id": 2484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2482,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12986:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2485,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2488,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "13029:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2498,
														"nodeType": "IfStatement",
														"src": "13025:66:9",
														"trueBody": {
															"id": 2497,
															"nodeType": "Block",
															"src": "13047:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2493,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "13065:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2496,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2500,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2383,
													"src": "13117:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2381,
												"id": 2501,
												"nodeType": "Return",
												"src": "13110:13:9"
											}
										]
									},
									"documentation": {
										"id": 2375,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:9",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "12229:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:9"
									},
									"returnParameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "12267:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:9"
									},
									"scope": 2683,
									"src": "12214:916:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "13365:170:9",
										"statements": [
											{
												"id": 2536,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:9",
												"statements": [
													{
														"assignments": [
															2515
														],
														"declarations": [
															{
																"constant": false,
																"id": 2515,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2536,
																"src": "13399:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2519,
														"initialValue": {
															"arguments": [
																{
																	"id": 2517,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2506,
																	"src": "13422:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2516,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2503,
																	2538
																],
																"referencedDeclaration": 2503,
																"src": "13416:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2520,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "13449:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2522,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2509,
																						"src": "13476:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2521,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "13459:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2526,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2524,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2525,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2515,
																						"src": "13495:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2527,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2506,
																					"src": "13504:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2533,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2513,
														"id": 2535,
														"nodeType": "Return",
														"src": "13442:76:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2504,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "13299:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "13314:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2507,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "13314:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "13314:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:9"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "13356:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:9"
									},
									"scope": 2683,
									"src": "13284:251:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2624,
										"nodeType": "Block",
										"src": "13855:600:9",
										"statements": [
											{
												"assignments": [
													2547
												],
												"declarations": [
													{
														"constant": false,
														"id": 2547,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2624,
														"src": "13865:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2549,
												"initialValue": {
													"hexValue": "30",
													"id": 2548,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:9"
											},
											{
												"id": 2621,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2550,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "13921:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2564,
														"nodeType": "IfStatement",
														"src": "13917:98:9",
														"trueBody": {
															"id": 2563,
															"nodeType": "Block",
															"src": "13939:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2555,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "13957:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2558,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:9"
																},
																{
																	"expression": {
																		"id": 2561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2559,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "13988:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2562,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2565,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "14032:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2579,
														"nodeType": "IfStatement",
														"src": "14028:95:9",
														"trueBody": {
															"id": 2578,
															"nodeType": "Block",
															"src": "14049:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2570,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "14067:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2573,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:9"
																},
																{
																	"expression": {
																		"id": 2576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2574,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "14097:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2577,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2580,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "14140:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2594,
														"nodeType": "IfStatement",
														"src": "14136:95:9",
														"trueBody": {
															"id": 2593,
															"nodeType": "Block",
															"src": "14157:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "14175:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2588,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:9"
																},
																{
																	"expression": {
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2589,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "14205:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2592,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2595,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "14248:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2609,
														"nodeType": "IfStatement",
														"src": "14244:95:9",
														"trueBody": {
															"id": 2608,
															"nodeType": "Block",
															"src": "14265:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "14283:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2603,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:9"
																},
																{
																	"expression": {
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2604,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "14313:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2607,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2610,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "14356:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2620,
														"nodeType": "IfStatement",
														"src": "14352:64:9",
														"trueBody": {
															"id": 2619,
															"nodeType": "Block",
															"src": "14372:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2615,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "14390:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2618,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2622,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2547,
													"src": "14442:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2545,
												"id": 2623,
												"nodeType": "Return",
												"src": "14435:13:9"
											}
										]
									},
									"documentation": {
										"id": 2539,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:9",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2625,
												"src": "13808:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:9"
									},
									"returnParameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2625,
												"src": "13846:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:9"
									},
									"scope": 2683,
									"src": "13792:663:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2662,
										"nodeType": "Block",
										"src": "14692:177:9",
										"statements": [
											{
												"id": 2661,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:9",
												"statements": [
													{
														"assignments": [
															2637
														],
														"declarations": [
															{
																"constant": false,
																"id": 2637,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2661,
																"src": "14726:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2636,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2641,
														"initialValue": {
															"arguments": [
																{
																	"id": 2639,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2628,
																	"src": "14750:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2638,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2625,
																	2663
																],
																"referencedDeclaration": 2625,
																"src": "14743:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2642,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2637,
																"src": "14777:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2644,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2631,
																						"src": "14804:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2643,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "14787:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2646,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2649,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2647,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2637,
																									"src": "14823:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2648,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2650,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2652,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2628,
																					"src": "14838:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2658,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2635,
														"id": 2660,
														"nodeType": "Return",
														"src": "14770:82:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2626,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:9",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "14626:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "14641:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2629,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "14641:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "14641:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:9"
									},
									"returnParameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "14683:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:9"
									},
									"scope": 2683,
									"src": "14610:259:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2681,
										"nodeType": "Block",
										"src": "15067:48:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2674,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2667,
																	"src": "15090:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1640",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1640",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2672,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2671,
												"id": 2680,
												"nodeType": "Return",
												"src": "15077:31:9"
											}
										]
									},
									"documentation": {
										"id": 2664,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:9",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "15019:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2665,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "15019:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "15019:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:9"
									},
									"returnParameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "15061:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:9"
									},
									"scope": 2683,
									"src": "14993:122:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2684,
							"src": "203:14914:9",
							"usedErrors": [
								1635
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2788
						]
					},
					"id": 2789,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2685,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2686,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:10",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2788,
							"linearizedBaseContracts": [
								2788
							],
							"name": "SignedMath",
							"nameLocation": "224:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2703,
										"nodeType": "Block",
										"src": "376:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2696,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2689,
															"src": "393:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2697,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2691,
															"src": "397:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2700,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2691,
														"src": "405:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:10",
													"trueExpression": {
														"id": 2699,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2689,
														"src": "401:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2695,
												"id": 2702,
												"nodeType": "Return",
												"src": "386:20:10"
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:10",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "325:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2688,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "335:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2690,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:10"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "368:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2693,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:10"
									},
									"scope": 2788,
									"src": "312:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2721,
										"nodeType": "Block",
										"src": "555:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2714,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "572:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2715,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2709,
															"src": "576:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2718,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2709,
														"src": "584:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:10",
													"trueExpression": {
														"id": 2717,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2707,
														"src": "580:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2713,
												"id": 2720,
												"nodeType": "Return",
												"src": "565:20:10"
											}
										]
									},
									"documentation": {
										"id": 2705,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:10",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "504:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2706,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "514:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2708,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:10"
									},
									"returnParameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "547:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2711,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:10"
									},
									"scope": 2788,
									"src": "491:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2765,
										"nodeType": "Block",
										"src": "797:162:10",
										"statements": [
											{
												"assignments": [
													2733
												],
												"declarations": [
													{
														"constant": false,
														"id": 2733,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 2765,
														"src": "859:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2732,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2746,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2734,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2725,
																	"src": "871:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2735,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2727,
																	"src": "875:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2737,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2738,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2725,
																				"src": "882:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2739,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2727,
																				"src": "886:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2741,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2744,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2747,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2733,
														"src": "911:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2752,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2733,
																						"src": "931:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2751,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2750,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2748,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2757,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2725,
																				"src": "945:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2758,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2727,
																				"src": "949:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2760,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2762,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2731,
												"id": 2764,
												"nodeType": "Return",
												"src": "904:48:10"
											}
										]
									},
									"documentation": {
										"id": 2723,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:10",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "746:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2724,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "756:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2726,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:10"
									},
									"returnParameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "789:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2729,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:10"
									},
									"scope": 2788,
									"src": "729:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2786,
										"nodeType": "Block",
										"src": "1103:158:10",
										"statements": [
											{
												"id": 2785,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2776,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2769,
																			"src": "1228:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:10",
																		"subExpression": {
																			"id": 2780,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2769,
																			"src": "1242:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:10",
																	"trueExpression": {
																		"id": 2779,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2769,
																		"src": "1237:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2774,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2773,
														"id": 2784,
														"nodeType": "Return",
														"src": "1213:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2767,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:10",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "1061:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2768,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:10"
									},
									"returnParameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "1094:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:10"
									},
									"scope": 2788,
									"src": "1048:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2789,
							"src": "216:1047:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:10"
				},
				"id": 10
			},
			"base/HaikuNFT.sol": {
				"ast": {
					"absolutePath": "base/HaikuNFT.sol",
					"exportedSymbols": {
						"ERC721": [
							1145
						],
						"HaikuNFT": [
							2998
						]
					},
					"id": 2999,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2790,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2792,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2999,
							"sourceUnit": 1146,
							"src": "68:71:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2791,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1145,
										"src": "76:6:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2793,
										"name": "ERC721",
										"nameLocations": [
											"209:6:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1145,
										"src": "209:6:11"
									},
									"id": 2794,
									"nodeType": "InheritanceSpecifier",
									"src": "209:6:11"
								}
							],
							"canonicalName": "HaikuNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2998,
							"linearizedBaseContracts": [
								2998,
								1145,
								89,
								1308,
								1262,
								1617,
								1629,
								1338
							],
							"name": "HaikuNFT",
							"nameLocation": "197:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "HaikuNFT.Haiku",
									"id": 2803,
									"members": [
										{
											"constant": false,
											"id": 2796,
											"mutability": "mutable",
											"name": "autor",
											"nameLocation": "295:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 2803,
											"src": "287:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2795,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "287:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2798,
											"mutability": "mutable",
											"name": "line1",
											"nameLocation": "318:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 2803,
											"src": "311:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2797,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "311:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2800,
											"mutability": "mutable",
											"name": "line2",
											"nameLocation": "341:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 2803,
											"src": "334:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2799,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "334:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2802,
											"mutability": "mutable",
											"name": "line3",
											"nameLocation": "364:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 2803,
											"src": "357:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2801,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "357:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Haiku",
									"nameLocation": "270:5:11",
									"nodeType": "StructDefinition",
									"scope": 2998,
									"src": "263:114:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cb82b2a",
									"id": 2807,
									"mutability": "mutable",
									"name": "haikus",
									"nameLocation": "443:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 2998,
									"src": "428:21:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Haiku_$2803_storage_$dyn_storage",
										"typeString": "struct HaikuNFT.Haiku[]"
									},
									"typeName": {
										"baseType": {
											"id": 2805,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2804,
												"name": "Haiku",
												"nameLocations": [
													"428:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2803,
												"src": "428:5:11"
											},
											"referencedDeclaration": 2803,
											"src": "428:5:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Haiku_$2803_storage_ptr",
												"typeString": "struct HaikuNFT.Haiku"
											}
										},
										"id": 2806,
										"nodeType": "ArrayTypeName",
										"src": "428:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Haiku_$2803_storage_$dyn_storage_ptr",
											"typeString": "struct HaikuNFT.Haiku[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "97afe82d",
									"id": 2812,
									"mutability": "mutable",
									"name": "sharedHaikus",
									"nameLocation": "541:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2998,
									"src": "504:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 2811,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2808,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "512:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "504:29:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 2809,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "523:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 2810,
											"nodeType": "ArrayTypeName",
											"src": "523:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2816,
									"mutability": "mutable",
									"name": "usedLines",
									"nameLocation": "653:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 2998,
									"src": "621:41:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
										"typeString": "mapping(string => bool)"
									},
									"typeName": {
										"id": 2815,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2813,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "629:6:11",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "621:23:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
											"typeString": "mapping(string => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2814,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "639:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "61bc221a",
									"id": 2819,
									"mutability": "mutable",
									"name": "counter",
									"nameLocation": "748:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 2998,
									"src": "733:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2817,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "733:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2818,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "758:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"errorSelector": "03ce4e32",
									"id": 2823,
									"name": "NotYourHaiku",
									"nameLocation": "774:12:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "795:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2823,
												"src": "787:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:12:11"
									},
									"src": "768:31:11"
								},
								{
									"errorSelector": "693a889e",
									"id": 2825,
									"name": "HaikuNotUnique",
									"nameLocation": "811:14:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "825:2:11"
									},
									"src": "805:23:11"
								},
								{
									"errorSelector": "f8826a69",
									"id": 2827,
									"name": "NoHaikusShared",
									"nameLocation": "840:14:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:11"
									},
									"src": "834:23:11"
								},
								{
									"body": {
										"id": 2834,
										"nodeType": "Block",
										"src": "907:2:11",
										"statements": []
									},
									"id": 2835,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4861696b754e4654",
													"id": 2830,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "886:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d0f3e44542bea4fd63dc8dbf194fb4caf967a1cb9299643dee2ddd234c043e04",
														"typeString": "literal_string \"HaikuNFT\""
													},
													"value": "HaikuNFT"
												},
												{
													"hexValue": "4841494b55",
													"id": 2831,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "898:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a8f18c18d4e55759c07c7f6da4768c5bc631419947d13887d672cd67b308e17b",
														"typeString": "literal_string \"HAIKU\""
													},
													"value": "HAIKU"
												}
											],
											"id": 2832,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2829,
												"name": "ERC721",
												"nameLocations": [
													"879:6:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1145,
												"src": "879:6:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "879:27:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "876:2:11"
									},
									"returnParameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "907:0:11"
									},
									"scope": 2998,
									"src": "865:44:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2907,
										"nodeType": "Block",
										"src": "1283:472:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2844,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2819,
														"src": "1298:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3131",
														"id": 2845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1308:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_11_by_1",
															"typeString": "int_const 11"
														},
														"value": "11"
													},
													"src": "1298:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2851,
												"nodeType": "IfStatement",
												"src": "1294:42:11",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "4e6f206d6f7265206861696b7573",
																"id": 2848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1319:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64",
																	"typeString": "literal_string \"No more haikus\""
																},
																"value": "No more haikus"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_20ebd73c1162c0a89927755ce4d6e0f1ad7ac5e5a428738826fc22042d4f4c64",
																	"typeString": "literal_string \"No more haikus\""
																}
															],
															"id": 2847,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "1312:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 2849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1312:24:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2850,
													"nodeType": "ExpressionStatement",
													"src": "1312:24:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2852,
																"name": "usedLines",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2816,
																"src": "1404:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																	"typeString": "mapping(string memory => bool)"
																}
															},
															"id": 2854,
															"indexExpression": {
																"id": 2853,
																"name": "_line1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2837,
																"src": "1414:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1404:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"baseExpression": {
																"id": 2855,
																"name": "usedLines",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2816,
																"src": "1425:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																	"typeString": "mapping(string memory => bool)"
																}
															},
															"id": 2857,
															"indexExpression": {
																"id": 2856,
																"name": "_line2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2839,
																"src": "1435:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1425:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1404:38:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 2859,
															"name": "usedLines",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2816,
															"src": "1446:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																"typeString": "mapping(string memory => bool)"
															}
														},
														"id": 2861,
														"indexExpression": {
															"id": 2860,
															"name": "_line3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2841,
															"src": "1456:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1446:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1404:59:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2867,
												"nodeType": "IfStatement",
												"src": "1400:115:11",
												"trueBody": {
													"id": 2866,
													"nodeType": "Block",
													"src": "1465:50:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2863,
																	"name": "HaikuNotUnique",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2825,
																	"src": "1487:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1487:16:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2865,
															"nodeType": "RevertStatement",
															"src": "1480:23:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2868,
															"name": "usedLines",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2816,
															"src": "1527:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																"typeString": "mapping(string memory => bool)"
															}
														},
														"id": 2870,
														"indexExpression": {
															"id": 2869,
															"name": "_line1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "1537:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1527:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1547:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1527:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2873,
												"nodeType": "ExpressionStatement",
												"src": "1527:24:11"
											},
											{
												"expression": {
													"id": 2878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2874,
															"name": "usedLines",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2816,
															"src": "1562:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																"typeString": "mapping(string memory => bool)"
															}
														},
														"id": 2876,
														"indexExpression": {
															"id": 2875,
															"name": "_line2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2839,
															"src": "1572:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1562:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1582:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1562:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2879,
												"nodeType": "ExpressionStatement",
												"src": "1562:24:11"
											},
											{
												"expression": {
													"id": 2884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2880,
															"name": "usedLines",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2816,
															"src": "1597:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																"typeString": "mapping(string memory => bool)"
															}
														},
														"id": 2882,
														"indexExpression": {
															"id": 2881,
															"name": "_line3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2841,
															"src": "1607:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1597:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1617:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1597:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2885,
												"nodeType": "ExpressionStatement",
												"src": "1597:24:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2890,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1652:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1656:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1652:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2892,
																	"name": "_line1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2837,
																	"src": "1664:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 2893,
																	"name": "_line2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2839,
																	"src": "1672:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 2894,
																	"name": "_line3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2841,
																	"src": "1680:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2889,
																"name": "Haiku",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "1646:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Haiku_$2803_storage_ptr_$",
																	"typeString": "type(struct HaikuNFT.Haiku storage pointer)"
																}
															},
															"id": 2895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1646:41:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Haiku_$2803_memory_ptr",
																"typeString": "struct HaikuNFT.Haiku memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Haiku_$2803_memory_ptr",
																"typeString": "struct HaikuNFT.Haiku memory"
															}
														],
														"expression": {
															"id": 2886,
															"name": "haikus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2807,
															"src": "1634:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Haiku_$2803_storage_$dyn_storage",
																"typeString": "struct HaikuNFT.Haiku storage ref[] storage ref"
															}
														},
														"id": 2888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1641:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1634:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Haiku_$2803_storage_$dyn_storage_ptr_$_t_struct$_Haiku_$2803_storage_$returns$__$attached_to$_t_array$_t_struct$_Haiku_$2803_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct HaikuNFT.Haiku storage ref[] storage pointer,struct HaikuNFT.Haiku storage ref)"
														}
													},
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1634:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2897,
												"nodeType": "ExpressionStatement",
												"src": "1634:54:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2899,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1705:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1709:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1705:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2901,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2819,
															"src": "1717:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2898,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "1699:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2903,
												"nodeType": "ExpressionStatement",
												"src": "1699:26:11"
											},
											{
												"expression": {
													"id": 2905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1738:9:11",
													"subExpression": {
														"id": 2904,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2819,
														"src": "1738:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2906,
												"nodeType": "ExpressionStatement",
												"src": "1738:9:11"
											}
										]
									},
									"functionSelector": "350fe165",
									"id": 2908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintHaiku",
									"nameLocation": "1198:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "_line1",
												"nameLocation": "1222:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "1208:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1208:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "_line2",
												"nameLocation": "1244:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "1230:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2838,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1230:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "_line3",
												"nameLocation": "1266:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "1252:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2840,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1252:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:66:11"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:11"
									},
									"scope": 2998,
									"src": "1189:566:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2934,
										"nodeType": "Block",
										"src": "2030:118:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 2915,
																"name": "haikus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2807,
																"src": "2045:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Haiku_$2803_storage_$dyn_storage",
																	"typeString": "struct HaikuNFT.Haiku storage ref[] storage ref"
																}
															},
															"id": 2917,
															"indexExpression": {
																"id": 2916,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2912,
																"src": "2052:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2045:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Haiku_$2803_storage",
																"typeString": "struct HaikuNFT.Haiku storage ref"
															}
														},
														"id": 2918,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2057:5:11",
														"memberName": "autor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2796,
														"src": "2045:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 2919,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2066:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2070:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2066:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2045:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2926,
												"nodeType": "IfStatement",
												"src": "2041:61:11",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 2923,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2912,
																"src": "2098:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2922,
															"name": "NotYourHaiku",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2823,
															"src": "2085:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 2924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2085:17:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2925,
													"nodeType": "RevertStatement",
													"src": "2078:24:11"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2931,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2912,
															"src": "2136:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2927,
																"name": "sharedHaikus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2812,
																"src": "2113:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 2929,
															"indexExpression": {
																"id": 2928,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2910,
																"src": "2126:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2113:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2131:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2113:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2113:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2933,
												"nodeType": "ExpressionStatement",
												"src": "2113:27:11"
											}
										]
									},
									"functionSelector": "0884d540",
									"id": 2935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shareHaiku",
									"nameLocation": "1984:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2003:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "1995:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2016:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "2008:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:26:11"
									},
									"returnParameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2030:0:11"
									},
									"scope": 2998,
									"src": "1975:173:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2996,
										"nodeType": "Block",
										"src": "2433:551:11",
										"statements": [
											{
												"assignments": [
													2943
												],
												"declarations": [
													{
														"constant": false,
														"id": 2943,
														"mutability": "mutable",
														"name": "totalHaikuShared",
														"nameLocation": "2528:16:11",
														"nodeType": "VariableDeclaration",
														"scope": 2996,
														"src": "2520:24:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2942,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2520:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2949,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 2944,
															"name": "sharedHaikus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2812,
															"src": "2547:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 2947,
														"indexExpression": {
															"expression": {
																"id": 2945,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2560:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2564:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2560:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2547:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 2948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2547:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2520:58:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2950,
														"name": "totalHaikuShared",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2943,
														"src": "2593:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2613:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2593:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2956,
												"nodeType": "IfStatement",
												"src": "2589:50:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2953,
															"name": "NoHaikusShared",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2827,
															"src": "2623:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2623:16:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2955,
													"nodeType": "RevertStatement",
													"src": "2616:23:11"
												}
											},
											{
												"assignments": [
													2961
												],
												"declarations": [
													{
														"constant": false,
														"id": 2961,
														"mutability": "mutable",
														"name": "_haikus",
														"nameLocation": "2730:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2996,
														"src": "2715:22:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct HaikuNFT.Haiku[]"
														},
														"typeName": {
															"baseType": {
																"id": 2959,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2958,
																	"name": "Haiku",
																	"nameLocations": [
																		"2715:5:11"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2803,
																	"src": "2715:5:11"
																},
																"referencedDeclaration": 2803,
																"src": "2715:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Haiku_$2803_storage_ptr",
																	"typeString": "struct HaikuNFT.Haiku"
																}
															},
															"id": 2960,
															"nodeType": "ArrayTypeName",
															"src": "2715:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Haiku_$2803_storage_$dyn_storage_ptr",
																"typeString": "struct HaikuNFT.Haiku[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2968,
												"initialValue": {
													"arguments": [
														{
															"id": 2966,
															"name": "totalHaikuShared",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2943,
															"src": "2752:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2740:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct HaikuNFT.Haiku memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2963,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2962,
																	"name": "Haiku",
																	"nameLocations": [
																		"2744:5:11"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2803,
																	"src": "2744:5:11"
																},
																"referencedDeclaration": 2803,
																"src": "2744:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Haiku_$2803_storage_ptr",
																	"typeString": "struct HaikuNFT.Haiku"
																}
															},
															"id": 2964,
															"nodeType": "ArrayTypeName",
															"src": "2744:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Haiku_$2803_storage_$dyn_storage_ptr",
																"typeString": "struct HaikuNFT.Haiku[]"
															}
														}
													},
													"id": 2967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2740:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct HaikuNFT.Haiku memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2715:54:11"
											},
											{
												"body": {
													"id": 2992,
													"nodeType": "Block",
													"src": "2875:75:11",
													"statements": [
														{
															"expression": {
																"id": 2990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2979,
																		"name": "_haikus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2961,
																		"src": "2890:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct HaikuNFT.Haiku memory[] memory"
																		}
																	},
																	"id": 2981,
																	"indexExpression": {
																		"id": 2980,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2970,
																		"src": "2898:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2890:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Haiku_$2803_memory_ptr",
																		"typeString": "struct HaikuNFT.Haiku memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2982,
																		"name": "haikus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2807,
																		"src": "2903:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Haiku_$2803_storage_$dyn_storage",
																			"typeString": "struct HaikuNFT.Haiku storage ref[] storage ref"
																		}
																	},
																	"id": 2989,
																	"indexExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 2983,
																				"name": "sharedHaikus",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2812,
																				"src": "2910:12:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																					"typeString": "mapping(address => uint256[] storage ref)"
																				}
																			},
																			"id": 2986,
																			"indexExpression": {
																				"expression": {
																					"id": 2984,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2923:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2985,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2927:6:11",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2923:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2910:24:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 2988,
																		"indexExpression": {
																			"id": 2987,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2970,
																			"src": "2935:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2910:27:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2903:35:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Haiku_$2803_storage",
																		"typeString": "struct HaikuNFT.Haiku storage ref"
																	}
																},
																"src": "2890:48:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Haiku_$2803_memory_ptr",
																	"typeString": "struct HaikuNFT.Haiku memory"
																}
															},
															"id": 2991,
															"nodeType": "ExpressionStatement",
															"src": "2890:48:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2973,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2970,
														"src": "2848:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2974,
														"name": "totalHaikuShared",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2943,
														"src": "2852:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2848:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2993,
												"initializationExpression": {
													"assignments": [
														2970
													],
													"declarations": [
														{
															"constant": false,
															"id": 2970,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2841:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 2993,
															"src": "2833:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2969,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2833:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2972,
													"initialValue": {
														"hexValue": "30",
														"id": 2971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2845:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2833:13:11"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2870:3:11",
														"subExpression": {
															"id": 2976,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2970,
															"src": "2870:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2978,
													"nodeType": "ExpressionStatement",
													"src": "2870:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2828:122:11"
											},
											{
												"expression": {
													"id": 2994,
													"name": "_haikus",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2961,
													"src": "2969:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct HaikuNFT.Haiku memory[] memory"
													}
												},
												"functionReturnParameters": 2941,
												"id": 2995,
												"nodeType": "Return",
												"src": "2962:14:11"
											}
										]
									},
									"functionSelector": "49af5bfe",
									"id": 2997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMySharedHaikus",
									"nameLocation": "2376:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2393:2:11"
									},
									"returnParameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "2417:14:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Haiku_$2803_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct HaikuNFT.Haiku[]"
												},
												"typeName": {
													"baseType": {
														"id": 2938,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2937,
															"name": "Haiku",
															"nameLocations": [
																"2417:5:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2803,
															"src": "2417:5:11"
														},
														"referencedDeclaration": 2803,
														"src": "2417:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Haiku_$2803_storage_ptr",
															"typeString": "struct HaikuNFT.Haiku"
														}
													},
													"id": 2939,
													"nodeType": "ArrayTypeName",
													"src": "2417:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Haiku_$2803_storage_$dyn_storage_ptr",
														"typeString": "struct HaikuNFT.Haiku[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2416:16:11"
									},
									"scope": 2998,
									"src": "2367:617:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2999,
							"src": "188:2799:11",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88,
								2823,
								2825,
								2827
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "40:2947:11"
				},
				"id": 11
			}
		}
	}
}